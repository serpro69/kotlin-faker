{
  "ownKey": "kotlindoc",
  "childrenPages": {
    "kotlindoc": {
      "ownKey": "kotlindoc",
      "childrenPages": {
        "movies-data-provider": {
          "ownKey": "movies-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"movies": {
                    "ownKey": "movies",
                    "childrenPages": {
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "troncharacter": {
                            "ownKey": "troncharacter",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/troncharacter",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/troncharacter"
                              },
                              "description": "",
                              "title": "TronCharacter",
                              "content": "<p>ALAN_BRADLEY<\/p>\n<p>BIT<\/p>\n<p>CLU<\/p>\n<p>CROM<\/p>\n<p>DR_LORA_BAINES<\/p>\n<p>DR_WALTER_GIBBS<\/p>\n<p>DUMONT<\/p>\n<p>ED_DILLINGER<\/p>\n<p>KEVIN_FLYNN<\/p>\n<p>MCP<\/p>\n<p>PROGRAM<\/p>\n<p>RAM<\/p>\n<p>SARK<\/p>\n<p>TRON<\/p>\n<p>YORI<\/p>\n"
                            }]
                          },
                          "lebowski": {
                            "ownKey": "lebowski",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/lebowski",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/lebowski"
                              },
                              "description": "",
                              "title": "Lebowski",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.LEBOWSKI<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>actors<\/p>\n<p>characters<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "theroom": {
                            "ownKey": "theroom",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/theroom",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/theroom"
                              },
                              "description": "",
                              "title": "TheRoom",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.THE_ROOM<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>actors<\/p>\n<p>characters<\/p>\n<p>locations<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "starwars": {
                            "ownKey": "starwars",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/starwars",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/starwars"
                              },
                              "description": "",
                              "title": "StarWars",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.STAR_WARS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>callSquadrons<\/p>\n<p>callNumbers<\/p>\n<p>callSign<\/p>\n<p>droids<\/p>\n<p>planets<\/p>\n<p>species<\/p>\n<p>vehicles<\/p>\n<p>wookieeWords<\/p>\n<p>quotes<\/p>\n<p>quote<\/p>\n<p>alternateCharacterSpellings<\/p>\n"
                            }]
                          },
                          "movie": {
                            "ownKey": "movie",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/movie",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/movie"
                              },
                              "description": "",
                              "title": "Movie",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.MOVIE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>title<\/p>\n<p>quote<\/p>\n"
                            }]
                          },
                          "tronalternatecharacter": {
                            "ownKey": "tronalternatecharacter",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/tronalternatecharacter",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/tronalternatecharacter"
                              },
                              "description": "",
                              "title": "TronAlternateCharacter",
                              "content": "<p>ALAN_BRADLEY<\/p>\n<p>CLU<\/p>\n<p>DR_LORA_BAINES<\/p>\n<p>DR_WALTER_GIBBS<\/p>\n<p>ED_DILLINGER<\/p>\n<p>KEVIN_FLYNN<\/p>\n<p>MCP<\/p>\n<p>ROY_KLEINBERG<\/p>\n"
                            }]
                          },
                          "departed": {
                            "ownKey": "departed",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/departed",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/departed"
                              },
                              "description": "",
                              "title": "Departed",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DEPARTED<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>actors<\/p>\n<p>characters<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "backtothefuture": {
                            "ownKey": "backtothefuture",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/backtothefuture",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/backtothefuture"
                              },
                              "description": "",
                              "title": "BackToTheFuture",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BACK_TO_THE_FUTURE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>dates<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "dumbanddumber": {
                            "ownKey": "dumbanddumber",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/dumbanddumber",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/dumbanddumber"
                              },
                              "description": "",
                              "title": "DumbAndDumber",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DUMB_AND_DUMBER<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>actors<\/p>\n<p>characters<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "hitchhikersguidetothegalaxy": {
                            "ownKey": "hitchhikersguidetothegalaxy",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/hitchhikersguidetothegalaxy",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/hitchhikersguidetothegalaxy"
                              },
                              "description": "",
                              "title": "HitchhikersGuideToTheGalaxy",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HITCHHIKERS_GUIDE_TO_THE_GALAXY<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>locations<\/p>\n<p>marvinQuote<\/p>\n<p>planets<\/p>\n<p>quotes<\/p>\n<p>species<\/p>\n<p>starships<\/p>\n"
                            }]
                          },
                          "howtotrainyourdragon": {
                            "ownKey": "howtotrainyourdragon",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/howtotrainyourdragon",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/howtotrainyourdragon"
                              },
                              "description": "",
                              "title": "HowToTrainYourDragon",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HOW_TO_TRAIN_YOUR_DRAGON<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>dragons<\/p>\n<p>locations<\/p>\n"
                            }]
                          },
                          "yoda": {
                            "ownKey": "yoda",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/yoda",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/yoda"
                              },
                              "description": "",
                              "title": "Yoda",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.YODA<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "tron": {
                            "ownKey": "tron",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/tron",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/tron"
                              },
                              "description": "",
                              "title": "Tron",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.TRON<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>games<\/p>\n<p>locations<\/p>\n<p>quotes<\/p>\n<p>taglines<\/p>\n<p>vehicles<\/p>\n<p>alternateCharacterSpellings<\/p>\n"
                            }]
                          },
                          "avatar": {
                            "ownKey": "avatar",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/avatar",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/avatar"
                              },
                              "description": "",
                              "title": "Avatar",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.AVATAR<\/a><\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>dates<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "vforvendetta": {
                            "ownKey": "vforvendetta",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/vforvendetta",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/vforvendetta"
                              },
                              "description": "",
                              "title": "VForVendetta",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.V_FOR_VENDETTA<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>speeches<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "princessbride": {
                            "ownKey": "princessbride",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/princessbride",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/princessbride"
                              },
                              "description": "",
                              "title": "PrincessBride",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.PRINCESS_BRIDE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "lordoftherings": {
                            "ownKey": "lordoftherings",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/lordoftherings",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/lordoftherings"
                              },
                              "description": "",
                              "title": "LordOfTheRings",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.LORD_OF_THE_RINGS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>locations<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "hobbit": {
                            "ownKey": "hobbit",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/hobbit",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/hobbit"
                              },
                              "description": "",
                              "title": "Hobbit",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HOBBIT<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>character<\/p>\n<p>thorinsCompany<\/p>\n<p>quote<\/p>\n<p>location<\/p>\n"
                            }]
                          },
                          "harrypotter": {
                            "ownKey": "harrypotter",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/harrypotter",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/harrypotter"
                              },
                              "description": "",
                              "title": "HarryPotter",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HARRY_POTTER<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>locations<\/p>\n<p>quotes<\/p>\n<p>books<\/p>\n<p>houses<\/p>\n<p>spells<\/p>\n"
                            }]
                          },
                          "hackers": {
                            "ownKey": "hackers",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/hackers",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/hackers"
                              },
                              "description": "",
                              "title": "Hackers",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HACKERS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>handles<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "ghostbusters": {
                            "ownKey": "ghostbusters",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/ghostbusters",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/ghostbusters"
                              },
                              "description": "",
                              "title": "GhostBusters",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GHOSTBUSTERS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>actors<\/p>\n<p>characters<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "rajnikanth": {
                            "ownKey": "rajnikanth",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/rajnikanth",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/rajnikanth"
                              },
                              "description": "",
                              "title": "Rajnikanth",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ANCIENT<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>joke<\/p>\n"
                            }]
                          },
                          "troncharactertype": {
                            "ownKey": "troncharactertype",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/movies-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/movies/provider/troncharactertype",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider/troncharactertype"
                              },
                              "description": "",
                              "title": "TronCharacterType",
                              "content": "<p>OTHER<\/p>\n<p>PROGRAMS<\/p>\n<p>USERS<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/movies-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/movies/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.movies.provider",
                          "content": "<p>Avatar<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.AVATAR<\/a><\/p>\nBackToTheFuture\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BACK_TO_THE_FUTURE<\/a> category.<\/p>\nDeparted\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DEPARTED<\/a> category.<\/p>\nDumbAndDumber\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DUMB_AND_DUMBER<\/a> category.<\/p>\nGhostBusters\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GHOSTBUSTERS<\/a> category.<\/p>\nHackers\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HACKERS<\/a> category.<\/p>\nHarryPotter\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HARRY_POTTER<\/a> category.<\/p>\nHitchhikersGuideToTheGalaxy\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HITCHHIKERS_GUIDE_TO_THE_GALAXY<\/a> category.<\/p>\nHobbit\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HOBBIT<\/a> category.<\/p>\nHowToTrainYourDragon\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HOW_TO_TRAIN_YOUR_DRAGON<\/a> category.<\/p>\nLebowski\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.LEBOWSKI<\/a> category.<\/p>\nLordOfTheRings\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.LORD_OF_THE_RINGS<\/a> category.<\/p>\nMovie\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.MOVIE<\/a> category.<\/p>\nPrincessBride\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.PRINCESS_BRIDE<\/a> category.<\/p>\nRajnikanth\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ANCIENT<\/a> category.<\/p>\nStarWars\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.STAR_WARS<\/a> category.<\/p>\nTheRoom\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.THE_ROOM<\/a> category.<\/p>\nTron\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.TRON<\/a> category.<\/p>\nTronAlternateCharacter\n<p>TronCharacter<\/p>\n<p>TronCharacterType<\/p>\n<p>VForVendetta<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.V_FOR_VENDETTA<\/a> category.<\/p>\nYoda\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.YODA<\/a> category.<\/p>\n"
                        }]
                      },
                      "moviesfaker": {
                        "ownKey": "moviesfaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/movies-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/movies/moviesfaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/moviesfaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/movies-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/movies/moviesfaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/moviesfaker"
                          },
                          "description": "",
                          "title": "MoviesFaker",
                          "content": "<p>Provides access to fake data generators within the Movies domain.<\/p><p>Each category (generator) from this  MoviesFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>avatar\n<p>backToTheFuture<\/p>\n<p>departed<\/p>\n<p>dumbAndDumber<\/p>\n<p>ghostBusters<\/p>\n<p>hackers<\/p>\n<p>harryPotter<\/p>\n<p>hitchhikersGuideToTheGalaxy<\/p>\n<p>hobbit<\/p>\n<p>howToTrainYourDragon<\/p>\n<p>lebowski<\/p>\n<p>lordOfTheRings<\/p>\n<p>movie<\/p>\n<p>princessBride<\/p>\n<p>rajnikanth<\/p>\n<p>starWars<\/p>\n<p>theRoom<\/p>\n<p>tron<\/p>\n<p>vForVendetta<\/p>\n<p>yoda<\/p>\n<p><init><\/p>\n<p>Provides access to fake data generators within the Movies domain.<\/p><p>Each category (generator) from this  MoviesFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/movies-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/movies/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  MoviesFaker <\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/movies-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/movies",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/movies-data-provider/io/github/serpro69/kfaker/movies"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.movies",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  MoviesFaker <\/p>\nMoviesFaker\n<p>Provides access to fake data generators within the Movies domain.<\/p><p>Each category (generator) from this  MoviesFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\nio.github.serpro69.kfaker.movies.provider\n<p>Faker<\/p>\n<p>Typealias for the  MoviesFaker <\/p>\nfaker\n<p>Applies the  block  function to  MoviesFaker.Builder \nand returns as an instance of  MoviesFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "travel-data-provider": {
          "ownKey": "travel-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"travel": {
                    "ownKey": "travel",
                    "childrenPages": {
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "nation": {
                            "ownKey": "nation",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/travel-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/travel/provider/nation",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/provider/nation"
                              },
                              "description": "",
                              "title": "Nation",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.NATION<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>flag<\/p>\n<p>nationality<\/p>\n<p>language<\/p>\n<p>capitalCity<\/p>\n"
                            }]
                          },
                          "trainstation": {
                            "ownKey": "trainstation",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/travel-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/travel/provider/trainstation",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/provider/trainstation"
                              },
                              "description": "",
                              "title": "TrainStation",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.TRAIN_STATION<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>germany<\/p>\n<p>spain<\/p>\n<p>unitedKingdom<\/p>\n<p>unitedStates<\/p>\n"
                            }]
                          },
                          "trainstationunitedstates": {
                            "ownKey": "trainstationunitedstates",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/travel-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/travel/provider/trainstationunitedstates",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/provider/trainstationunitedstates"
                              },
                              "description": "",
                              "title": "TrainStationUnitedStates",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>metro<\/p>\n<p>railway<\/p>\n"
                            }]
                          },
                          "australia": {
                            "ownKey": "australia",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/travel-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/travel/provider/australia",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/provider/australia"
                              },
                              "description": "",
                              "title": "Australia",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.AUSTRALIA<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>locations<\/p>\n<p>animals<\/p>\n<p>states<\/p>\n"
                            }]
                          },
                          "europeanunion": {
                            "ownKey": "europeanunion",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/travel-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/travel/provider/europeanunion",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/provider/europeanunion"
                              },
                              "description": "",
                              "title": "EuropeanUnion",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.AIRPORT<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>iataCode<\/p>\n<p>large<\/p>\n<p>medium<\/p>\n"
                            }]
                          },
                          "unitedstates": {
                            "ownKey": "unitedstates",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/travel-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/travel/provider/unitedstates",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/provider/unitedstates"
                              },
                              "description": "",
                              "title": "UnitedStates",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.AIRPORT<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>iataCode<\/p>\n<p>large<\/p>\n<p>medium<\/p>\n<p>small<\/p>\n"
                            }]
                          },
                          "airport": {
                            "ownKey": "airport",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/travel-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/travel/provider/airport",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/provider/airport"
                              },
                              "description": "",
                              "title": "Airport",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.AIRPORT<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>unitedStates<\/p>\n<p>europeanUnion<\/p>\n"
                            }]
                          },
                          "trainstationgermany": {
                            "ownKey": "trainstationgermany",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/travel-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/travel/provider/trainstationgermany",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/provider/trainstationgermany"
                              },
                              "description": "",
                              "title": "TrainStationGermany",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>metro<\/p>\n<p>railway<\/p>\n"
                            }]
                          },
                          "mountain": {
                            "ownKey": "mountain",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/travel-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/travel/provider/mountain",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/provider/mountain"
                              },
                              "description": "",
                              "title": "Mountain",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.MOUNTAIN<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>name<\/p>\n<p>range<\/p>\n"
                            }]
                          },
                          "compass": {
                            "ownKey": "compass",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/travel-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/travel/provider/compass",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/provider/compass"
                              },
                              "description": "",
                              "title": "Compass",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.COMPASS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n"
                            }]
                          },
                          "trainstationunitedkingdom": {
                            "ownKey": "trainstationunitedkingdom",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/travel-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/travel/provider/trainstationunitedkingdom",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/provider/trainstationunitedkingdom"
                              },
                              "description": "",
                              "title": "TrainStationUnitedKingdom",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>metro<\/p>\n<p>railway<\/p>\n"
                            }]
                          },
                          "trainstationspain": {
                            "ownKey": "trainstationspain",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/travel-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/travel/provider/trainstationspain",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/provider/trainstationspain"
                              },
                              "description": "",
                              "title": "TrainStationSpain",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>metro<\/p>\n<p>railway<\/p>\n"
                            }]
                          },
                          "iatacode": {
                            "ownKey": "iatacode",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/travel-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/travel/provider/iatacode",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/provider/iatacode"
                              },
                              "description": "",
                              "title": "IataCode",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.AIRPORT<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>large<\/p>\n<p>medium<\/p>\n<p>small<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/travel-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/travel/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.travel.provider",
                          "content": "<p>Airport<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.AIRPORT<\/a> category.<\/p>\nUnitedStates\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.AIRPORT<\/a> category.<\/p>\nEuropeanUnion\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.AIRPORT<\/a> category.<\/p>\nIataCode\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.AIRPORT<\/a> category.<\/p>\nAustralia\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.AUSTRALIA<\/a> category.<\/p>\nCompass\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.COMPASS<\/a> category.<\/p>\nMountain\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.MOUNTAIN<\/a> category.<\/p>\nNation\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.NATION<\/a> category.<\/p>\nTrainStation\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.TRAIN_STATION<\/a> category.<\/p>\nTrainStationGermany\n<p>TrainStationSpain<\/p>\n<p>TrainStationUnitedKingdom<\/p>\n<p>TrainStationUnitedStates<\/p>\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/travel-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/travel/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  TravelFaker <\/p>\n"
                        }]
                      },
                      "travelfaker": {
                        "ownKey": "travelfaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/travel-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/travel/travelfaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/travelfaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/travel-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/travel/travelfaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel/travelfaker"
                          },
                          "description": "",
                          "title": "TravelFaker",
                          "content": "<p>Provides access to fake data generators within the Travel domain.<\/p><p>Each category (generator) from this  TravelFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>airport\n<p>australia<\/p>\n<p>mountain<\/p>\n<p>nation<\/p>\n<p>trainStation<\/p>\n<p><init><\/p>\n<p>Provides access to fake data generators within the Travel domain.<\/p><p>Each category (generator) from this  TravelFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/travel-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/travel",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/travel-data-provider/io/github/serpro69/kfaker/travel"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.travel",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  TravelFaker <\/p>\nTravelFaker\n<p>Provides access to fake data generators within the Travel domain.<\/p><p>Each category (generator) from this  TravelFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\nio.github.serpro69.kfaker.travel.provider\n<p>Faker<\/p>\n<p>Typealias for the  TravelFaker <\/p>\nfaker\n<p>Applies the  block  function to  TravelFaker.Builder \nand returns as an instance of  TravelFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "music-data-provider": {
          "ownKey": "music-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"music": {
                    "ownKey": "music",
                    "childrenPages": {
                      "musicfaker": {
                        "ownKey": "musicfaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/music-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/music/musicfaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/musicfaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/music-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/music/musicfaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/musicfaker"
                          },
                          "description": "",
                          "title": "MusicFaker",
                          "content": "<p>Provides access to fake data generators within the Music domain.<\/p><p>Each category (generator) from this  MusicFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>bossaNova\n<p>gratefulDead<\/p>\n<p>hipHop<\/p>\n<p>kPop<\/p>\n<p>music<\/p>\n<p>opera<\/p>\n<p>pearlJam<\/p>\n<p>phish<\/p>\n<p>prince<\/p>\n<p>rockBand<\/p>\n<p>rush<\/p>\n<p>show<\/p>\n<p>smashingPumpkins<\/p>\n<p>umphreysMcgee<\/p>\n<p><init><\/p>\n<p>Provides access to fake data generators within the Music domain.<\/p><p>Each category (generator) from this  MusicFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\n"
                        }]
                      },
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "rockband": {
                            "ownKey": "rockband",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/rockband",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/rockband"
                              },
                              "description": "",
                              "title": "RockBand",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ROCK_BAND<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>name<\/p>\n<p>song<\/p>\n"
                            }]
                          },
                          "opera": {
                            "ownKey": "opera",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/opera",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/opera"
                              },
                              "description": "",
                              "title": "Opera",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.OPERA<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>italian<\/p>\n<p>german<\/p>\n<p>french<\/p>\n"
                            }]
                          },
                          "umphreysmcgee": {
                            "ownKey": "umphreysmcgee",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/umphreysmcgee",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/umphreysmcgee"
                              },
                              "description": "",
                              "title": "UmphreysMcgee",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.UMPHREYS_MCGEE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>song<\/p>\n"
                            }]
                          },
                          "show": {
                            "ownKey": "show",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/show",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/show"
                              },
                              "description": "",
                              "title": "Show",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SHOW<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>adultMusical<\/p>\n<p>play<\/p>\n<p>kidsMusical<\/p>\n"
                            }]
                          },
                          "pearljam": {
                            "ownKey": "pearljam",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/pearljam",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/pearljam"
                              },
                              "description": "",
                              "title": "PearlJam",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.PEARL_JAM<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>musicians<\/p>\n<p>albums<\/p>\n<p>songs<\/p>\n"
                            }]
                          },
                          "bossanova": {
                            "ownKey": "bossanova",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/bossanova",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/bossanova"
                              },
                              "description": "",
                              "title": "BossaNova",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BOSSA_NOVA<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>artists<\/p>\n<p>songs<\/p>\n"
                            }]
                          },
                          "rush": {
                            "ownKey": "rush",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/rush",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/rush"
                              },
                              "description": "",
                              "title": "Rush",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.RUSH<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>players<\/p>\n<p>albums<\/p>\n"
                            }]
                          },
                          "hiphop": {
                            "ownKey": "hiphop",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/hiphop",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/hiphop"
                              },
                              "description": "",
                              "title": "HipHop",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>subgenres<\/p>\n<p>groups<\/p>\n<p>artist<\/p>\n"
                            }]
                          },
                          "smashingpumpkins": {
                            "ownKey": "smashingpumpkins",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/smashingpumpkins",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/smashingpumpkins"
                              },
                              "description": "",
                              "title": "SmashingPumpkins",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SMASHING_PUMPKINS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>musicians<\/p>\n<p>albums<\/p>\n<p>lyric<\/p>\n<p>songs<\/p>\n"
                            }]
                          },
                          "music": {
                            "ownKey": "music",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/music",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/music"
                              },
                              "description": "",
                              "title": "Music",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.MUSIC<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>instruments<\/p>\n<p>bands<\/p>\n<p>albums<\/p>\n<p>genres<\/p>\n<p>mamboNo5<\/p>\n"
                            }]
                          },
                          "germanopera": {
                            "ownKey": "germanopera",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/germanopera",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/germanopera"
                              },
                              "description": "",
                              "title": "GermanOpera",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>byWolfgangAmadeusMozart<\/p>\n<p>byLudwigVanBeethoven<\/p>\n<p>byCarlMariaVonWeber<\/p>\n<p>byRichardStrauss<\/p>\n<p>byRichardWagner<\/p>\n<p>byRobertSchumann<\/p>\n<p>byFranzSchubert<\/p>\n<p>byAlbanBerg<\/p>\n"
                            }]
                          },
                          "kpop": {
                            "ownKey": "kpop",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/kpop",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/kpop"
                              },
                              "description": "",
                              "title": "KPop",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.KPOP<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>firstGroups<\/p>\n<p>secondGroups<\/p>\n<p>thirdGroups<\/p>\n<p>girlGroups<\/p>\n<p>boyBands<\/p>\n<p>solo<\/p>\n"
                            }]
                          },
                          "gratefuldead": {
                            "ownKey": "gratefuldead",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/gratefuldead",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/gratefuldead"
                              },
                              "description": "",
                              "title": "GratefulDead",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GRATEFUL_DEAD<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>players<\/p>\n<p>songs<\/p>\n"
                            }]
                          },
                          "italianopera": {
                            "ownKey": "italianopera",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/italianopera",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/italianopera"
                              },
                              "description": "",
                              "title": "ItalianOpera",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>byGiuseppeVerdi<\/p>\n<p>byGioacchinoRossini<\/p>\n<p>byGaetanoDonizetti<\/p>\n<p>byVincenzoBellini<\/p>\n<p>byChristophWillibaldGluck<\/p>\n<p>byWolfgangAmadeusMozart<\/p>\n"
                            }]
                          },
                          "phish": {
                            "ownKey": "phish",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/phish",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/phish"
                              },
                              "description": "",
                              "title": "Phish",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.PHISH<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>albums<\/p>\n<p>musicians<\/p>\n<p>songs<\/p>\n"
                            }]
                          },
                          "frenchopera": {
                            "ownKey": "frenchopera",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/frenchopera",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/frenchopera"
                              },
                              "description": "",
                              "title": "FrenchOpera",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>byChristophWillibaldGluck<\/p>\n<p>byMauriceRavel<\/p>\n<p>byHectorBerlioz<\/p>\n<p>byGeorgesBizet<\/p>\n<p>byCharlesGounod<\/p>\n<p>byCamilleSaintSaens<\/p>\n"
                            }]
                          },
                          "prince": {
                            "ownKey": "prince",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/music-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/music/provider/prince",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider/prince"
                              },
                              "description": "",
                              "title": "Prince",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.PRINCE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>lyric<\/p>\n<p>song<\/p>\n<p>album<\/p>\n<p>band<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/music-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/music/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.music.provider",
                          "content": "<p>BossaNova<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BOSSA_NOVA<\/a> category.<\/p>\nGratefulDead\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GRATEFUL_DEAD<\/a> category.<\/p>\nKPop\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.KPOP<\/a> category.<\/p>\nMusic\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.MUSIC<\/a> category.<\/p>\nHipHop\n<p>Opera<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.OPERA<\/a> category.<\/p>\nItalianOpera\n<p>GermanOpera<\/p>\n<p>FrenchOpera<\/p>\n<p>PearlJam<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.PEARL_JAM<\/a> category.<\/p>\nPhish\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.PHISH<\/a> category.<\/p>\nPrince\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.PRINCE<\/a> category.<\/p>\nRockBand\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ROCK_BAND<\/a> category.<\/p>\nRush\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.RUSH<\/a> category.<\/p>\nShow\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SHOW<\/a> category.<\/p>\nSmashingPumpkins\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SMASHING_PUMPKINS<\/a> category.<\/p>\nUmphreysMcgee\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.UMPHREYS_MCGEE<\/a> category.<\/p>\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/music-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/music/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  MusicFaker <\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/music-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/music",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/music-data-provider/io/github/serpro69/kfaker/music"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.music",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  MusicFaker <\/p>\nMusicFaker\n<p>Provides access to fake data generators within the Music domain.<\/p><p>Each category (generator) from this  MusicFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\nio.github.serpro69.kfaker.music.provider\n<p>Faker<\/p>\n<p>Typealias for the  MusicFaker <\/p>\nfaker\n<p>Applies the  block  function to  MusicFaker.Builder \nand returns as an instance of  MusicFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "lorem-data-provider": {
          "ownKey": "lorem-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"lorem": {
                    "ownKey": "lorem",
                    "childrenPages": {
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "lorem": {
                            "ownKey": "lorem",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/lorem-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/lorem/provider/lorem",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/lorem-data-provider/io/github/serpro69/kfaker/lorem/provider/lorem"
                              },
                              "description": "",
                              "title": "Lorem",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.LOREM<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>words<\/p>\n<p>supplemental<\/p>\n<p>multibyte<\/p>\n<p>punctuation<\/p>\n"
                            }]
                          },
                          "adjective": {
                            "ownKey": "adjective",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/lorem-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/lorem/provider/adjective",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/lorem-data-provider/io/github/serpro69/kfaker/lorem/provider/adjective"
                              },
                              "description": "",
                              "title": "Adjective",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ADJECTIVE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>positive<\/p>\n<p>negative<\/p>\n"
                            }]
                          },
                          "quote": {
                            "ownKey": "quote",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/lorem-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/lorem/provider/quote",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/lorem-data-provider/io/github/serpro69/kfaker/lorem/provider/quote"
                              },
                              "description": "",
                              "title": "Quote",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.QUOTE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>famousLastWords<\/p>\n<p>matz<\/p>\n<p>mostInterestingManInTheWorld<\/p>\n<p>robin<\/p>\n<p>singularSiegler<\/p>\n<p>yoda<\/p>\n<p>fortuneCookie<\/p>\n"
                            }]
                          },
                          "emotion": {
                            "ownKey": "emotion",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/lorem-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/lorem/provider/emotion",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/lorem-data-provider/io/github/serpro69/kfaker/lorem/provider/emotion"
                              },
                              "description": "",
                              "title": "Emotion",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.EMOTION<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>adjective<\/p>\n<p>noun<\/p>\n"
                            }]
                          },
                          "slackemoji": {
                            "ownKey": "slackemoji",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/lorem-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/lorem/provider/slackemoji",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/lorem-data-provider/io/github/serpro69/kfaker/lorem/provider/slackemoji"
                              },
                              "description": "",
                              "title": "SlackEmoji",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SLACK_EMOJI<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>people<\/p>\n<p>nature<\/p>\n<p>foodAndDrink<\/p>\n<p>celebration<\/p>\n<p>activity<\/p>\n<p>travelAndPlaces<\/p>\n<p>objectsAndSymbols<\/p>\n<p>custom<\/p>\n<p>emoji<\/p>\n"
                            }]
                          },
                          "hipster": {
                            "ownKey": "hipster",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/lorem-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/lorem/provider/hipster",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/lorem-data-provider/io/github/serpro69/kfaker/lorem/provider/hipster"
                              },
                              "description": "",
                              "title": "Hipster",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HIPSTER<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>words<\/p>\n"
                            }]
                          },
                          "markdown": {
                            "ownKey": "markdown",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/lorem-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/lorem/provider/markdown",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/lorem-data-provider/io/github/serpro69/kfaker/lorem/provider/markdown"
                              },
                              "description": "",
                              "title": "Markdown",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.MARKDOWN<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>headers<\/p>\n<p>emphasis<\/p>\n"
                            }]
                          },
                          "verbs": {
                            "ownKey": "verbs",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/lorem-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/lorem/provider/verbs",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/lorem-data-provider/io/github/serpro69/kfaker/lorem/provider/verbs"
                              },
                              "description": "",
                              "title": "Verbs",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.VERBS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>base<\/p>\n<p>past<\/p>\n<p>pastParticiple<\/p>\n<p>simplePresent<\/p>\n<p>ingForm<\/p>\n"
                            }]
                          },
                          "natophoneticalphabet": {
                            "ownKey": "natophoneticalphabet",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/lorem-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/lorem/provider/natophoneticalphabet",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/lorem-data-provider/io/github/serpro69/kfaker/lorem/provider/natophoneticalphabet"
                              },
                              "description": "",
                              "title": "NatoPhoneticAlphabet",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.NATO_PHONETIC_ALPHABET<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>codeWord<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/lorem-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/lorem/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/lorem-data-provider/io/github/serpro69/kfaker/lorem/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.lorem.provider",
                          "content": "<p>Adjective<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ADJECTIVE<\/a> category.<\/p>\nEmotion\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.EMOTION<\/a> category.<\/p>\nHipster\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HIPSTER<\/a> category.<\/p>\nLorem\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.LOREM<\/a> category.<\/p>\nMarkdown\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.MARKDOWN<\/a> category.<\/p>\nNatoPhoneticAlphabet\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.NATO_PHONETIC_ALPHABET<\/a> category.<\/p>\nQuote\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.QUOTE<\/a> category.<\/p>\nSlackEmoji\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SLACK_EMOJI<\/a> category.<\/p>\nVerbs\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.VERBS<\/a> category.<\/p>\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/lorem-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/lorem/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/lorem-data-provider/io/github/serpro69/kfaker/lorem/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  LoremFaker <\/p>\n"
                        }]
                      },
                      "loremfaker": {
                        "ownKey": "loremfaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/lorem-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/lorem/loremfaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/lorem-data-provider/io/github/serpro69/kfaker/lorem/loremfaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/lorem-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/lorem/loremfaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/lorem-data-provider/io/github/serpro69/kfaker/lorem/loremfaker"
                          },
                          "description": "",
                          "title": "LoremFaker",
                          "content": "<p>Provides access to fake data generators within the Lorem domain.<\/p><p>Each category (generator) from this  LoremFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>adjective\n<p>emotion<\/p>\n<p>hipster<\/p>\n<p>lorem<\/p>\n<p>markdown<\/p>\n<p>natoPhoneticAlphabet<\/p>\n<p>slackEmoji<\/p>\n<p>quote<\/p>\n<p>verbs<\/p>\n<p><init><\/p>\n<p>Provides access to fake data generators within the Lorem domain.<\/p><p>Each category (generator) from this  LoremFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/lorem-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/lorem",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/lorem-data-provider/io/github/serpro69/kfaker/lorem"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.lorem",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  LoremFaker <\/p>\nLoremFaker\n<p>Provides access to fake data generators within the Lorem domain.<\/p><p>Each category (generator) from this  LoremFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\nio.github.serpro69.kfaker.lorem.provider\n<p>Faker<\/p>\n<p>Typealias for the  LoremFaker <\/p>\nfaker\n<p>Applies the  block  function to  LoremFaker.Builder \nand returns as an instance of  LoremFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "blns-extension": {
          "ownKey": "blns-extension",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"blns": {
                    "ownKey": "blns",
                    "childrenPages": {
                      "blns": {
                        "ownKey": "blns",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/blns-extension",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/blns/blns/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/blns-extension/io/github/serpro69/kfaker/blns/blns/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Blns <\/p>build\n<p>Builds an instance of <a href=\"#\">Faker<\/a> with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/blns-extension",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/blns/blns",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/blns-extension/io/github/serpro69/kfaker/blns/blns"
                          },
                          "description": "",
                          "title": "Blns",
                          "content": "<p>A kotlin-faker extension that helps to use\n<a href=\"https://github.com/minimaxir/big-list-of-naughty-strings\">The Big List of Naughty Strings<\/a>\nfor various test-related inputs.<\/p>all\n<p>allBase64<\/p>\n<p><init><\/p>\n<p>A kotlin-faker extension that helps to use\n<a href=\"https://github.com/minimaxir/big-list-of-naughty-strings\">The Big List of Naughty Strings<\/a>\nfor various test-related inputs.<\/p>\nget\n<p>get<\/p>\n<p>random<\/p>\n<p>Returns a random string of  all  strings (or  allBase64  strings if  base64  is <code>true<\/code>)<\/p>\nsublist\n<p>Returns a portion of  all  strings (or  allBase64  strings if  base64  is <code>true<\/code>)\nwith pseudo-randomly generated <code>fromIndex<\/code> and (possibly) <code>toIndex<\/code> values.<\/p>\nsublist\n<p>Returns a portion of  all  strings (or  allBase64  strings if  base64  is <code>true<\/code>)\nwith pseudo-randomly generated <code>fromIndex<\/code> and (possibly) <code>toIndex<\/code> values.<\/p>\n"
                        }]
                      },
                      "category": {
                        "ownKey": "category",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/blns-extension",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/blns/category",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/blns-extension/io/github/serpro69/kfaker/blns/category"
                          },
                          "description": "",
                          "title": "Category",
                          "content": "<p>RESERVED<\/p>\n<p>NUMERIC<\/p>\n<p>SPECIAL<\/p>\n<p>C0_CONTROLS<\/p>\n<p>C1_CONTROLS<\/p>\n<p>WHITESPACE<\/p>\n<p>UNICODE_ADDITIONAL_CONTROL<\/p>\n<p>BYTE_ORDER_MARKS<\/p>\n<p>UNICODE_SYMBOLS<\/p>\n<p>UNICODE_ACCENTS<\/p>\n<p>QUOTATION_MARKS<\/p>\n<p>TWO_BYTE_CHARS<\/p>\n<p>TWO_BYTE_LETTERS<\/p>\n<p>UNICODE_SPECIAL_CHAR_UNION<\/p>\n<p>VARIABLE_CASE_LENGTH<\/p>\n<p>KAOMOJI<\/p>\n<p>EMOJI<\/p>\n<p>REGIONAL_SYMBOLS<\/p>\n<p>UNICODE_NUMBERS<\/p>\n<p>RIGHT_TO_LEFT_STRINGS<\/p>\n<p>OGHAM_TEXT<\/p>\n<p>UNICODE_TRICKS<\/p>\n<p>ZALGO_TEXT<\/p>\n<p>UNICODE_UPSIDE_DOWN<\/p>\n<p>UNICODE_FONT<\/p>\n<p>SCRIPT_INJECTION<\/p>\n<p>SQL_INJECTION<\/p>\n<p>SERVER_CODE_INJECTION<\/p>\n<p>RUBY_COMMAND_INJECTION<\/p>\n<p>XXE_INJECTION<\/p>\n<p>UNWANTED_INTERPOLATION<\/p>\n<p>FILE_INCLUSION<\/p>\n<p>KNOWN_CVE<\/p>\n<p>WIN_SPECIAL_FILENAMES<\/p>\n<p>IRC_STRINGS<\/p>\n<p>SCUNTHORPE_PROBLEM<\/p>\n<p>HUMAN_INJECTION<\/p>\n<p>TERMINAL_ESCAPE_CODES<\/p>\n<p>IOS_VULNERABILITIES<\/p>\n<p>PERSIAN_SPECIAL_CHARS<\/p>\n<p>JINJA_INJECTION<\/p>\n<p>toString<\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/blns-extension",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/blns",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/blns-extension/io/github/serpro69/kfaker/blns"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.blns",
                      "content": "<p>Blns<\/p>\n<p>A kotlin-faker extension that helps to use\n<a href=\"https://github.com/minimaxir/big-list-of-naughty-strings\">The Big List of Naughty Strings<\/a>\nfor various test-related inputs.<\/p>\nCategory\n<p>blns<\/p>\n<p>Applies the  block  function to  Blns.Builder \nand returns as an instance of  Blns  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "commerce-data-provider": {
          "ownKey": "commerce-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"commerce": {
                    "ownKey": "commerce",
                    "childrenPages": {
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "code": {
                            "ownKey": "code",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/code",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/code"
                              },
                              "description": "",
                              "title": "Code",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CODE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>asin<\/p>\n"
                            }]
                          },
                          "business": {
                            "ownKey": "business",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/business",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/business"
                              },
                              "description": "",
                              "title": "Business",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BUSINESS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>creditCardNumbers<\/p>\n<p>creditCardTypes<\/p>\n"
                            }]
                          },
                          "stockexchange": {
                            "ownKey": "stockexchange",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/stockexchange",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/stockexchange"
                              },
                              "description": "",
                              "title": "StockExchange",
                              "content": "<p>NASDAQ<\/p>\n<p>NYSE<\/p>\n"
                            }]
                          },
                          "restaurant": {
                            "ownKey": "restaurant",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/restaurant",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/restaurant"
                              },
                              "description": "",
                              "title": "Restaurant",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.RESTAURANT<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>name<\/p>\n<p>type<\/p>\n<p>description<\/p>\n<p>review<\/p>\n"
                            }]
                          },
                          "cannabis": {
                            "ownKey": "cannabis",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/cannabis",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/cannabis"
                              },
                              "description": "",
                              "title": "Cannabis",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CANNABIS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>strains<\/p>\n<p>cannabinoidAbbreviations<\/p>\n<p>cannabinoids<\/p>\n<p>terpenes<\/p>\n<p>medicalUses<\/p>\n<p>healthBenefits<\/p>\n<p>categories<\/p>\n<p>types<\/p>\n<p>brands<\/p>\n"
                            }]
                          },
                          "subscription": {
                            "ownKey": "subscription",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/subscription",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/subscription"
                              },
                              "description": "",
                              "title": "Subscription",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SUBSCRIPTION<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>plans<\/p>\n<p>statuses<\/p>\n<p>paymentMethods<\/p>\n<p>subscriptionTerms<\/p>\n<p>paymentTerms<\/p>\n"
                            }]
                          },
                          "commerce": {
                            "ownKey": "commerce",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/commerce",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/commerce"
                              },
                              "description": "",
                              "title": "Commerce",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.COMMERCE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>department<\/p>\n<p>productName<\/p>\n<p>promotionCode<\/p>\n<p>brand<\/p>\n<p>vendor<\/p>\n"
                            }]
                          },
                          "house": {
                            "ownKey": "house",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/house",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/house"
                              },
                              "description": "",
                              "title": "House",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HOUSE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>furniture<\/p>\n<p>rooms<\/p>\n"
                            }]
                          },
                          "teavariety": {
                            "ownKey": "teavariety",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/teavariety",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/teavariety"
                              },
                              "description": "",
                              "title": "TeaVariety",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>black<\/p>\n<p>oolong<\/p>\n<p>green<\/p>\n<p>white<\/p>\n<p>herbal<\/p>\n"
                            }]
                          },
                          "food": {
                            "ownKey": "food",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/food",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/food"
                              },
                              "description": "",
                              "title": "Food",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.FOOD<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>allergens<\/p>\n<p>dish<\/p>\n<p>descriptions<\/p>\n<p>ingredients<\/p>\n<p>fruits<\/p>\n<p>vegetables<\/p>\n<p>spices<\/p>\n<p>measurements<\/p>\n<p>measurementSizes<\/p>\n<p>metricMeasurements<\/p>\n<p>sushi<\/p>\n<p>ethnicCategory<\/p>\n"
                            }]
                          },
                          "tea": {
                            "ownKey": "tea",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/tea",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/tea"
                              },
                              "description": "",
                              "title": "Tea",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.TEA<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>variety<\/p>\n<p>type<\/p>\n"
                            }]
                          },
                          "marketing": {
                            "ownKey": "marketing",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/marketing",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/marketing"
                              },
                              "description": "",
                              "title": "Marketing",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.MARKETING<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>buzzwords<\/p>\n"
                            }]
                          },
                          "bank": {
                            "ownKey": "bank",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/bank",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/bank"
                              },
                              "description": "",
                              "title": "Bank",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BANK<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>name<\/p>\n<p>swiftBic<\/p>\n<p>ibanDetails<\/p>\n"
                            }]
                          },
                          "industrysegments": {
                            "ownKey": "industrysegments",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/industrysegments",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/industrysegments"
                              },
                              "description": "",
                              "title": "IndustrySegments",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.INDUSTRY_SEGMENTS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>industry<\/p>\n<p>superSector<\/p>\n<p>sector<\/p>\n<p>subSector<\/p>\n"
                            }]
                          },
                          "dessert": {
                            "ownKey": "dessert",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/dessert",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/dessert"
                              },
                              "description": "",
                              "title": "Dessert",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DESSERT<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>variety<\/p>\n<p>topping<\/p>\n<p>flavor<\/p>\n<p>dessert<\/p>\n"
                            }]
                          },
                          "coffee": {
                            "ownKey": "coffee",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/coffee",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/coffee"
                              },
                              "description": "",
                              "title": "Coffee",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.COFFEE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>country<\/p>\n<p>regions<\/p>\n<p>variety<\/p>\n<p>notes<\/p>\n<p>blendName<\/p>\n"
                            }]
                          },
                          "stripe": {
                            "ownKey": "stripe",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/stripe",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/stripe"
                              },
                              "description": "",
                              "title": "Stripe",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.STRIPE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>validCards<\/p>\n<p>validTokens<\/p>\n<p>invalidCards<\/p>\n"
                            }]
                          },
                          "construction": {
                            "ownKey": "construction",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/construction",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/construction"
                              },
                              "description": "",
                              "title": "Construction",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CONSTRUCTION<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>materials<\/p>\n"
                            }]
                          },
                          "company": {
                            "ownKey": "company",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/company",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/company"
                              },
                              "description": "",
                              "title": "Company",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.COMPANY<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>buzzwords<\/p>\n<p>bs<\/p>\n<p>name<\/p>\n<p>industry<\/p>\n<p>profession<\/p>\n<p>type<\/p>\n<p>sicCode<\/p>\n<p>department<\/p>\n"
                            }]
                          },
                          "invoice": {
                            "ownKey": "invoice",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/invoice",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/invoice"
                              },
                              "description": "",
                              "title": "Invoice",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.INVOICE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>checkDigitMethod<\/p>\n<p>pattern<\/p>\n"
                            }]
                          },
                          "barcode": {
                            "ownKey": "barcode",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/barcode",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/barcode"
                              },
                              "description": "",
                              "title": "Barcode",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BARCODE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>ean8<\/p>\n<p>ean13<\/p>\n<p>upcA<\/p>\n<p>upcE<\/p>\n<p>compositeSymbol<\/p>\n<p>isbn<\/p>\n<p>ismn<\/p>\n<p>issn<\/p>\n"
                            }]
                          },
                          "beer": {
                            "ownKey": "beer",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/beer",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/beer"
                              },
                              "description": "",
                              "title": "Beer",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BEER<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>brand<\/p>\n<p>name<\/p>\n<p>hop<\/p>\n<p>yeast<\/p>\n<p>malt<\/p>\n<p>style<\/p>\n"
                            }]
                          },
                          "finance": {
                            "ownKey": "finance",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/commerce-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/commerce/provider/finance",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider/finance"
                              },
                              "description": "",
                              "title": "Finance",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.FINANCE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>creditCard<\/p>\n<p>condominiumFiscalCode<\/p>\n<p>vatNumber<\/p>\n<p>ticker<\/p>\n<p>stockMarket<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/commerce-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/commerce/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.commerce.provider",
                          "content": "<p>Bank<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BANK<\/a> category.<\/p>\nBarcode\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BARCODE<\/a> category.<\/p>\nBeer\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BEER<\/a> category.<\/p>\nBusiness\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BUSINESS<\/a> category.<\/p>\nCannabis\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CANNABIS<\/a> category.<\/p>\nCode\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CODE<\/a> category.<\/p>\nCoffee\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.COFFEE<\/a> category.<\/p>\nCommerce\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.COMMERCE<\/a> category.<\/p>\nCompany\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.COMPANY<\/a> category.<\/p>\nConstruction\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CONSTRUCTION<\/a> category.<\/p>\nDessert\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DESSERT<\/a> category.<\/p>\nFinance\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.FINANCE<\/a> category.<\/p>\nStockExchange\n<p>Food<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.FOOD<\/a> category.<\/p>\nHouse\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HOUSE<\/a> category.<\/p>\nIndustrySegments\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.INDUSTRY_SEGMENTS<\/a> category.<\/p>\nInvoice\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.INVOICE<\/a> category.<\/p>\nMarketing\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.MARKETING<\/a> category.<\/p>\nRestaurant\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.RESTAURANT<\/a> category.<\/p>\nStripe\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.STRIPE<\/a> category.<\/p>\nSubscription\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SUBSCRIPTION<\/a> category.<\/p>\nTea\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.TEA<\/a> category.<\/p>\nTeaVariety\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/commerce-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/commerce/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  CommerceFaker <\/p>\n"
                        }]
                      },
                      "commercefaker": {
                        "ownKey": "commercefaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/commerce-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/commerce/commercefaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/commercefaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/commerce-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/commerce/commercefaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce/commercefaker"
                          },
                          "description": "",
                          "title": "CommerceFaker",
                          "content": "<p>Provides access to fake data generators within the Commerce domain.<\/p><p>Each category (generator) from this  CommerceFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>bank\n<p>barcode<\/p>\n<p>beer<\/p>\n<p>business<\/p>\n<p>cannabis<\/p>\n<p>code<\/p>\n<p>coffee<\/p>\n<p>commerce<\/p>\n<p>company<\/p>\n<p>construction<\/p>\n<p>dessert<\/p>\n<p>finance<\/p>\n<p>food<\/p>\n<p>house<\/p>\n<p>industrySegments<\/p>\n<p>marketing<\/p>\n<p>restaurant<\/p>\n<p>stripe<\/p>\n<p>subscription<\/p>\n<p>tea<\/p>\n<p><init><\/p>\n<p>Provides access to fake data generators within the Commerce domain.<\/p><p>Each category (generator) from this  CommerceFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/commerce-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/commerce",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/commerce-data-provider/io/github/serpro69/kfaker/commerce"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.commerce",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  CommerceFaker <\/p>\nCommerceFaker\n<p>Provides access to fake data generators within the Commerce domain.<\/p><p>Each category (generator) from this  CommerceFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\nio.github.serpro69.kfaker.commerce.provider\n<p>Faker<\/p>\n<p>Typealias for the  CommerceFaker <\/p>\nfaker\n<p>Applies the  block  function to  CommerceFaker.Builder \nand returns as an instance of  CommerceFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "databases-data-provider": {
          "ownKey": "databases-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"databases": {
                    "ownKey": "databases",
                    "childrenPages": {
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "mariadb": {
                            "ownKey": "mariadb",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/databases-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/databases/provider/mariadb",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/databases-data-provider/io/github/serpro69/kfaker/databases/provider/mariadb"
                              },
                              "description": "",
                              "title": "MariaDB",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DATABASE<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>dataType<\/p>\n<p>engine<\/p>\n"
                            }]
                          },
                          "database": {
                            "ownKey": "database",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/databases-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/databases/provider/database",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/databases-data-provider/io/github/serpro69/kfaker/databases/provider/database"
                              },
                              "description": "",
                              "title": "Database",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DATABASE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>columnName<\/p>\n<p>mongodbObjectId<\/p>\n"
                            }]
                          },
                          "postgresql": {
                            "ownKey": "postgresql",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/databases-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/databases/provider/postgresql",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/databases-data-provider/io/github/serpro69/kfaker/databases/provider/postgresql"
                              },
                              "description": "",
                              "title": "PostgreSQL",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DATABASE<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>dataType<\/p>\n<p>collation<\/p>\n"
                            }]
                          },
                          "mssqlserver": {
                            "ownKey": "mssqlserver",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/databases-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/databases/provider/mssqlserver",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/databases-data-provider/io/github/serpro69/kfaker/databases/provider/mssqlserver"
                              },
                              "description": "",
                              "title": "MSSQLServer",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DATABASE<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>dataType<\/p>\n"
                            }]
                          },
                          "oracledb": {
                            "ownKey": "oracledb",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/databases-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/databases/provider/oracledb",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/databases-data-provider/io/github/serpro69/kfaker/databases/provider/oracledb"
                              },
                              "description": "",
                              "title": "OracleDB",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DATABASE<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>dataType<\/p>\n"
                            }]
                          },
                          "mysql": {
                            "ownKey": "mysql",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/databases-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/databases/provider/mysql",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/databases-data-provider/io/github/serpro69/kfaker/databases/provider/mysql"
                              },
                              "description": "",
                              "title": "MySQL",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DATABASE<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>dataType<\/p>\n<p>engine<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/databases-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/databases/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/databases-data-provider/io/github/serpro69/kfaker/databases/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.databases.provider",
                          "content": "<p>Database<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DATABASE<\/a> category.<\/p>\nMSSQLServer\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DATABASE<\/a> category.<\/p>\nMariaDB\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DATABASE<\/a> category.<\/p>\nMySQL\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DATABASE<\/a> category.<\/p>\nOracleDB\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DATABASE<\/a> category.<\/p>\nPostgreSQL\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DATABASE<\/a> category.<\/p>\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/databases-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/databases/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/databases-data-provider/io/github/serpro69/kfaker/databases/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  DatabasesFaker <\/p>\n"
                        }]
                      },
                      "databasesfaker": {
                        "ownKey": "databasesfaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/databases-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/databases/databasesfaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/databases-data-provider/io/github/serpro69/kfaker/databases/databasesfaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/databases-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/databases/databasesfaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/databases-data-provider/io/github/serpro69/kfaker/databases/databasesfaker"
                          },
                          "description": "",
                          "title": "DatabasesFaker",
                          "content": "<p>database<\/p>\n<p>mariaDB<\/p>\n<p>msSQLServer<\/p>\n<p>mySQL<\/p>\n<p>oracleDB<\/p>\n<p>postgreSQL<\/p>\n<p><init><\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/databases-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/databases",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/databases-data-provider/io/github/serpro69/kfaker/databases"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.databases",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  DatabasesFaker <\/p>\nDatabasesFaker\n<p>io.github.serpro69.kfaker.databases.provider<\/p>\n<p>Faker<\/p>\n<p>Typealias for the  DatabasesFaker <\/p>\nfaker\n<p>Applies the  block  function to  DatabasesFaker.Builder \nand returns as an instance of  DatabasesFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "humor-data-provider": {
          "ownKey": "humor-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"humor": {
                    "ownKey": "humor",
                    "childrenPages": {
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "chucknorris": {
                            "ownKey": "chucknorris",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/humor-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/humor/provider/chucknorris",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/humor-data-provider/io/github/serpro69/kfaker/humor/provider/chucknorris"
                              },
                              "description": "",
                              "title": "ChuckNorris",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CHUCK_NORRIS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>fact<\/p>\n"
                            }]
                          },
                          "chiquito": {
                            "ownKey": "chiquito",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/humor-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/humor/provider/chiquito",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/humor-data-provider/io/github/serpro69/kfaker/humor/provider/chiquito"
                              },
                              "description": "",
                              "title": "Chiquito",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CHIQUITO<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>expressions<\/p>\n<p>terms<\/p>\n<p>sentences<\/p>\n<p>jokes<\/p>\n"
                            }]
                          },
                          "funnyname": {
                            "ownKey": "funnyname",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/humor-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/humor/provider/funnyname",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/humor-data-provider/io/github/serpro69/kfaker/humor/provider/funnyname"
                              },
                              "description": "",
                              "title": "FunnyName",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.FUNNY_NAME<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>name<\/p>\n"
                            }]
                          },
                          "jackhandey": {
                            "ownKey": "jackhandey",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/humor-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/humor/provider/jackhandey",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/humor-data-provider/io/github/serpro69/kfaker/humor/provider/jackhandey"
                              },
                              "description": "",
                              "title": "JackHandey",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.QUOTE<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>quote<\/p>\n"
                            }]
                          },
                          "mitchhedberg": {
                            "ownKey": "mitchhedberg",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/humor-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/humor/provider/mitchhedberg",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/humor-data-provider/io/github/serpro69/kfaker/humor/provider/mitchhedberg"
                              },
                              "description": "",
                              "title": "MitchHedberg",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.QUOTE<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>quote<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/humor-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/humor/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/humor-data-provider/io/github/serpro69/kfaker/humor/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.humor.provider",
                          "content": "<p>Chiquito<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CHIQUITO<\/a> category.<\/p>\nChuckNorris\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CHUCK_NORRIS<\/a> category.<\/p>\nFunnyName\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.FUNNY_NAME<\/a> category.<\/p>\nJackHandey\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.QUOTE<\/a> category.<\/p>\nMitchHedberg\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.QUOTE<\/a> category.<\/p>\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/humor-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/humor/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/humor-data-provider/io/github/serpro69/kfaker/humor/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  HumorFaker <\/p>\n"
                        }]
                      },
                      "humorfaker": {
                        "ownKey": "humorfaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/humor-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/humor/humorfaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/humor-data-provider/io/github/serpro69/kfaker/humor/humorfaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/humor-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/humor/humorfaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/humor-data-provider/io/github/serpro69/kfaker/humor/humorfaker"
                          },
                          "description": "",
                          "title": "HumorFaker",
                          "content": "<p>Provides access to fake data generators within the Humor domain.<\/p><p>Each category (generator) from this  HumorFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>chiquito\n<p>chuckNorris<\/p>\n<p>funnyName<\/p>\n<p>jackHandey<\/p>\n<p>mitchHedberg<\/p>\n<p><init><\/p>\n<p>Provides access to fake data generators within the Humor domain.<\/p><p>Each category (generator) from this  HumorFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/humor-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/humor",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/humor-data-provider/io/github/serpro69/kfaker/humor"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.humor",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  HumorFaker <\/p>\nHumorFaker\n<p>Provides access to fake data generators within the Humor domain.<\/p><p>Each category (generator) from this  HumorFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\nio.github.serpro69.kfaker.humor.provider\n<p>Faker<\/p>\n<p>Typealias for the  HumorFaker <\/p>\nfaker\n<p>Applies the  block  function to  HumorFaker.Builder \nand returns as an instance of  HumorFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "sports-data-provider": {
          "ownKey": "sports-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"sports": {
                    "ownKey": "sports",
                    "childrenPages": {
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "basketball": {
                            "ownKey": "basketball",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/sports-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/sports/provider/basketball",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports/provider/basketball"
                              },
                              "description": "",
                              "title": "Basketball",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BASKETBALL<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>teams<\/p>\n<p>players<\/p>\n<p>coaches<\/p>\n<p>positions<\/p>\n"
                            }]
                          },
                          "chess": {
                            "ownKey": "chess",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/sports-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/sports/provider/chess",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports/provider/chess"
                              },
                              "description": "",
                              "title": "Chess",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CHESS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>players<\/p>\n<p>tournaments<\/p>\n<p>openings<\/p>\n<p>titles<\/p>\n"
                            }]
                          },
                          "worldcup": {
                            "ownKey": "worldcup",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/sports-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/sports/provider/worldcup",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports/provider/worldcup"
                              },
                              "description": "",
                              "title": "WorldCup",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.WORLD_CUP<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>teams<\/p>\n<p>stadiums<\/p>\n<p>cities<\/p>\n<p>groups<\/p>\n<p>roosters<\/p>\n"
                            }]
                          },
                          "volleyball": {
                            "ownKey": "volleyball",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/sports-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/sports/provider/volleyball",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports/provider/volleyball"
                              },
                              "description": "",
                              "title": "Volleyball",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.VOLLEYBALL<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>team<\/p>\n<p>player<\/p>\n<p>coach<\/p>\n<p>position<\/p>\n<p>formation<\/p>\n"
                            }]
                          },
                          "team": {
                            "ownKey": "team",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/sports-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/sports/provider/team",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports/provider/team"
                              },
                              "description": "",
                              "title": "Team",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.TEAM<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>name<\/p>\n<p>sport<\/p>\n<p>mascot<\/p>\n"
                            }]
                          },
                          "football": {
                            "ownKey": "football",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/sports-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/sports/provider/football",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports/provider/football"
                              },
                              "description": "",
                              "title": "Football",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.FOOTBALL<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>teams<\/p>\n<p>players<\/p>\n<p>coaches<\/p>\n<p>competitions<\/p>\n<p>positions<\/p>\n"
                            }]
                          },
                          "mountaineering": {
                            "ownKey": "mountaineering",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/sports-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/sports/provider/mountaineering",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports/provider/mountaineering"
                              },
                              "description": "",
                              "title": "Mountaineering",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.MOUNTAINEERING<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>mountaineer<\/p>\n"
                            }]
                          },
                          "esport": {
                            "ownKey": "esport",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/sports-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/sports/provider/esport",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports/provider/esport"
                              },
                              "description": "",
                              "title": "ESport",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ESPORT<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>players<\/p>\n<p>teams<\/p>\n<p>events<\/p>\n<p>leagues<\/p>\n<p>games<\/p>\n"
                            }]
                          },
                          "sport": {
                            "ownKey": "sport",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/sports-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/sports/provider/sport",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports/provider/sport"
                              },
                              "description": "",
                              "title": "Sport",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SPORT<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>summerOlympics<\/p>\n<p>winterOlympics<\/p>\n<p>summerParalympics<\/p>\n<p>winterParalympics<\/p>\n<p>ancientOlympics<\/p>\n<p>unusual<\/p>\n"
                            }]
                          },
                          "crossfit": {
                            "ownKey": "crossfit",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/sports-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/sports/provider/crossfit",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports/provider/crossfit"
                              },
                              "description": "",
                              "title": "Crossfit",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CROSSFIT<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>competitions<\/p>\n<p>maleAthletes<\/p>\n<p>femaleAthletes<\/p>\n<p>movements<\/p>\n<p>girlWorkouts<\/p>\n<p>heroWorkouts<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/sports-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/sports/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.sports.provider",
                          "content": "<p>Basketball<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BASKETBALL<\/a> category.<\/p>\nChess\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CHESS<\/a> category.<\/p>\nCrossfit\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CROSSFIT<\/a> category.<\/p>\nESport\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ESPORT<\/a> category.<\/p>\nFootball\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.FOOTBALL<\/a> category.<\/p>\nMountaineering\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.MOUNTAINEERING<\/a> category.<\/p>\nSport\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SPORT<\/a> category.<\/p>\nTeam\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.TEAM<\/a> category.<\/p>\nVolleyball\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.VOLLEYBALL<\/a> category.<\/p>\nWorldCup\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.WORLD_CUP<\/a> category.<\/p>\n"
                        }]
                      },
                      "sportsfaker": {
                        "ownKey": "sportsfaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/sports-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/sports/sportsfaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports/sportsfaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/sports-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/sports/sportsfaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports/sportsfaker"
                          },
                          "description": "",
                          "title": "SportsFaker",
                          "content": "<p>Provides access to fake data generators within the Sports domain.<\/p><p>Each category (generator) from this  SportsFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>basketball\n<p>chess<\/p>\n<p>crossfit<\/p>\n<p>eSport<\/p>\n<p>football<\/p>\n<p>mountaineering<\/p>\n<p>sport<\/p>\n<p>team<\/p>\n<p>volleyball<\/p>\n<p>worldCup<\/p>\n<p><init><\/p>\n<p>Provides access to fake data generators within the Sports domain.<\/p><p>Each category (generator) from this  SportsFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/sports-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/sports/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  SportsFaker <\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/sports-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/sports",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/sports-data-provider/io/github/serpro69/kfaker/sports"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.sports",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  SportsFaker <\/p>\nSportsFaker\n<p>Provides access to fake data generators within the Sports domain.<\/p><p>Each category (generator) from this  SportsFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\nio.github.serpro69.kfaker.sports.provider\n<p>Faker<\/p>\n<p>Typealias for the  SportsFaker <\/p>\nfaker\n<p>Applies the  block  function to  SportsFaker.Builder \nand returns as an instance of  SportsFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "core-data-provider": {
          "ownKey": "core-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"provider": {
                    "ownKey": "provider",
                    "childrenPages": {
                      "address": {
                        "ownKey": "address",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/address",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/address"
                          },
                          "description": "",
                          "title": "Address",
                          "content": "<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.ADDRESS<\/a> category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\ncityPrefix\n<p>citySuffix<\/p>\n<p>country<\/p>\n<p>countryByCode<\/p>\n<p>countryByName<\/p>\n<p>countryCode<\/p>\n<p>countryCodeLong<\/p>\n<p>buildingNumber<\/p>\n<p>communityPrefix<\/p>\n<p>communitySuffix<\/p>\n<p>community<\/p>\n<p>streetSuffix<\/p>\n<p>secondaryAddress<\/p>\n<p>postcode<\/p>\n<p>postcodeByState<\/p>\n<p>state<\/p>\n<p>stateAbbr<\/p>\n<p>timeZone<\/p>\n<p>city<\/p>\n<p>cityWithState<\/p>\n<p>streetName<\/p>\n<p>streetAddress<\/p>\n<p>fullAddress<\/p>\n<p>mailbox<\/p>\n<p>defaultCountry<\/p>\n"
                        }]
                      },
                      "color": {
                        "ownKey": "color",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/color",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/color"
                          },
                          "description": "",
                          "title": "Color",
                          "content": "<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.COLOR<\/a> category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nname\n"
                        }]
                      },
                      "gender": {
                        "ownKey": "gender",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/gender",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/gender"
                          },
                          "description": "",
                          "title": "Gender",
                          "content": "<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.GENDER<\/a> category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\ntypes\n<p>binaryTypes<\/p>\n<p>shortBinaryTypes<\/p>\n"
                        }]
                      },
                      "idnumber": {
                        "ownKey": "idnumber",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/idnumber",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/idnumber"
                          },
                          "description": "",
                          "title": "IdNumber",
                          "content": "<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.ID_NUMBER<\/a> category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\ninvalid\n"
                        }]
                      },
                      "phonenumber": {
                        "ownKey": "phonenumber",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/phonenumber",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/phonenumber"
                          },
                          "description": "",
                          "title": "PhoneNumber",
                          "content": "<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.PHONE_NUMBER<\/a> category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\ncellPhone\n<p>areaCode<\/p>\n<p>countryCode<\/p>\n<p>exchangeCode<\/p>\n<p>phoneNumber<\/p>\n<p>extension<\/p>\n<p>subscriberNumber<\/p>\n"
                        }]
                      },
                      "source": {
                        "ownKey": "source",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/source",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/source"
                          },
                          "description": "",
                          "title": "Source",
                          "content": "<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.SOURCE<\/a> category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\n"
                        }]
                      },
                      "separator": {
                        "ownKey": "separator",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/separator",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/separator"
                          },
                          "description": "",
                          "title": "Separator",
                          "content": "<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.ADDRESS<\/a> category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nseparator\n"
                        }]
                      },
                      "measurement": {
                        "ownKey": "measurement",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/measurement",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/measurement"
                          },
                          "description": "",
                          "title": "Measurement",
                          "content": "<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.MEASUREMENT<\/a> category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nheight\n<p>length<\/p>\n<p>volume<\/p>\n<p>weight<\/p>\n<p>metricHeight<\/p>\n<p>metricLength<\/p>\n<p>metricVolume<\/p>\n<p>metricWeight<\/p>\n"
                        }]
                      },
                      "filemimetype": {
                        "ownKey": "filemimetype",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/filemimetype",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/filemimetype"
                          },
                          "description": "",
                          "title": "FileMimeType",
                          "content": "<p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\nfaker:\naddress:<\/p>\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\napplication\n<p>audio<\/p>\n<p>image<\/p>\n<p>message<\/p>\n<p>model<\/p>\n<p>multipart<\/p>\n<p>text<\/p>\n<p>video<\/p>\n"
                        }]
                      },
                      "currencysymbol": {
                        "ownKey": "currencysymbol",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/currencysymbol",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/currencysymbol"
                          },
                          "description": "",
                          "title": "CurrencySymbol",
                          "content": "<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.CURRENCY_SYMBOL<\/a> category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nsymbol\n"
                        }]
                      },
                      "file": {
                        "ownKey": "file",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/file",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/file"
                          },
                          "description": "",
                          "title": "File",
                          "content": "<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.FILE<\/a> category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nmimeType\n<p>extension<\/p>\n"
                        }]
                      },
                      "money": {
                        "ownKey": "money",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/money",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/money"
                          },
                          "description": "",
                          "title": "Money",
                          "content": "<p>category<\/p>\n<p>Category of <code>this<\/code> fake data provider class.<\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\namount\n"
                        }]
                      },
                      "person": {
                        "ownKey": "person",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/person",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/person"
                          },
                          "description": "",
                          "title": "Person",
                          "content": "<p> FakeDataProvider  implementation class for functionality not covered by the standard dictionary files.<\/p>birthDate\n<p>Returns a pseudo-random birthDate as LocalDate for the given  age  value.<\/p><p>If the  at  date parameter is not provided, then LocalDate.now is used\nto calculate the \"lower bound\" for the resulting birthDate.\nAssuming the  age  value of <code>30<\/code>, the resulting date will be in the range of:<\/p><pre><code>\nval start = LocalDate.now().minusYears(30)\nval end = LocalDate.now().minusYears(29).minusDays(1)\n<\/code><\/pre>\n"
                        }]
                      },
                      "unique": {
                        "ownKey": "unique",
                        "childrenPages": {
                          "uniquedataprovider": {
                            "ownKey": "uniquedataprovider",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/core-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/provider/unique/uniquedataprovider",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/unique/uniquedataprovider"
                              },
                              "description": "",
                              "title": "UniqueDataProvider",
                              "content": "<p><init><\/p>\n<p>disableAll<\/p>\n<p>Disables \"unique generation\" for all providers that were configured to return unique values.<\/p>\nclearAll\n<p>Clears the already returned (used) unique values so that they can again be returned.<\/p>\n"
                            }]
                          },
                          "uniqueproviderconfiguration": {
                            "ownKey": "uniqueproviderconfiguration",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/core-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/provider/unique/uniqueproviderconfiguration",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/unique/uniqueproviderconfiguration"
                              },
                              "description": "",
                              "title": "UniqueProviderConfiguration",
                              "content": "<p>Provides configuration for Unique Generation of values.<\/p>disable\n<p>Disables generation of unique values for  providerFunction  of  T  provider.<\/p>\ndisableAll\n<p>Disables unique generation of values for all providers,\nand clears all already used (returned) values and any exclusion patterns.<\/p>\nenable\n<p>Enable generation of unique values for  providerFunction  of  T  provider.<\/p>\nenable\n<p>Enable generation of unique values for  providerFunction  of  T  provider.<\/p>\nexcludeFromFunction\n<p>Exclude  values  from being generated with function  providerFunction  in provider  T .<\/p>\nexcludeFromFunction\n<p>Exclude  values  from being generated with function  funcName  in provider  T .<\/p>\nexcludeFromFunction\n<p>Exclude  values  from being generated with function  funcName  in provider  T .<\/p>\nexcludeFromFunction\n<p>Exclude a values from being generated by <a href=\"#\">Regex<\/a> patterns\nwhen a  providerFunction  in provider  T  is called<\/p>\nexcludeFromFunction\n<p>Exclude a values from being generated by <a href=\"#\">Regex<\/a> patterns\nwhen a  funcName  in provider  T  is called<\/p>\nexcludeFromFunction\n<p>Exclude a values from being generated by <a href=\"#\">Regex<\/a> patterns\nwhen a  funcName  in provider  T  is called<\/p>\nexcludeFromProvider\n<p>Exclude  values  from being generated with in provider  T .<\/p>\nexcludeFromProvider\n<p>Exclude  values  from being generated with in provider  T .<\/p>\nexcludeFromProvider\n<p>Exclude a values from being generated by <a href=\"#\">Regex<\/a> patterns in provider  T .<\/p>\nexclude\n<p>Exclude  values  from being generated.<\/p><p>This applies to ALL providers that are enabled for unique value generation.<\/p>\nexclude\n<p>Exclude a values from being generated by <a href=\"#\">Regex<\/a> patterns.<\/p><p>This applies to ALL providers that are enabled for unique value generation.<\/p>\n"
                            }]
                          },
                          "uniqueproviderdelegate": {
                            "ownKey": "uniqueproviderdelegate",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/core-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/provider/unique/uniqueproviderdelegate",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/unique/uniqueproviderdelegate"
                              },
                              "description": "",
                              "title": "UniqueProviderDelegate",
                              "content": "<p>Delegate class for  LocalUniqueDataProvider  used to return local providers that generate unique values.<\/p><init>\n<p>Delegate class for  LocalUniqueDataProvider  used to return local providers that generate unique values.<\/p>\ngetValue\n\n"
                            }]
                          },
                          "localuniquedataprovider": {
                            "ownKey": "localuniquedataprovider",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/core-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/provider/unique/localuniquedataprovider",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/unique/localuniquedataprovider"
                              },
                              "description": "",
                              "title": "LocalUniqueDataProvider",
                              "content": "<p>Local provider for unique values.<\/p><p>This provider is used in  T  implementation of  FakeDataProvider  class,\nand controls unique generation configuration of  T 's functions.<\/p><p>Example usage:<\/p><pre><code>\nFaker().address.unique().country()\n<\/code><\/pre><init>\n<p>Local provider for unique values.<\/p><p>This provider is used in  T  implementation of  FakeDataProvider  class,\nand controls unique generation configuration of  T 's functions.<\/p><p>Example usage:<\/p><pre><code>\nFaker().address.unique().country()\n<\/code><\/pre>\ndisableAll\n<p>In <code>this<\/code> class the function works the same as  clearAll  implementation.<\/p>\nclearAll\n<p>Clears the already returned (used) unique values so that they can again be returned.<\/p>\nclear\n<p>Clears the already returned (used) unique values for the function with provided  name .<\/p><p>Example usage:<\/p><pre><code>\naddress.unique.clear(\"country\") // clear (reset) unique values for 'country' function\n<\/code><\/pre>\n"
                            }]
                          },
                          "globaluniquedataprovider": {
                            "ownKey": "globaluniquedataprovider",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/core-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/provider/unique/globaluniquedataprovider",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/unique/globaluniquedataprovider"
                              },
                              "description": "",
                              "title": "GlobalUniqueDataProvider",
                              "content": "<p>Global provider for unique values.<\/p><p>This provider is used in <a href=\"#\">AbstractFaker<\/a> class implementations to control global unique generation configuration of faker providers.<\/p><p>Example usage:<\/p><pre><code>\nval faker = Faker()\nfaker.unique.configuration {\n    enable(faker::address) // enables unique generation for all functions of Address provider\n    enable(faker::name) // enables unique generation for all functions of Name provider\n    exclude(listOfValues) // exclude values from `listOfValue` collection from being generated (for all providers that are enabled for unique generation)\n    enable(faker::internet) { enables unique generation for all functions of Internet provider\n        exclude<Internet>(listOfValues) // exclude values from `listOfValue` collection from being generated with Internet provider\n        exclude(faker::internet, listOfPatterns)\n    }\n}\n<\/code><\/pre>disableAll\n<p>Disables \"unique generation\" for all providers that were configured to return unique values,\nand clears out any already returned values, so they can possibly be returned again.<\/p>\nclearAll\n<p>Clears the already returned (used) unique values and exclusion patterns so that values can again be returned.<\/p>\nclear\n<p>configuration<\/p>\n<p>Configures <code>this<\/code> Unique provider.<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/unique",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/unique"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.provider.unique",
                          "content": "<p>GlobalUniqueDataProvider\n<p>Global provider for unique values.<\/p><p>This provider is used in <a href=\"#\">AbstractFaker<\/a> class implementations to control global unique generation configuration of faker providers.<\/p><p>Example usage:<\/p><pre><code>\nval faker = Faker()\nfaker.unique.configuration {\nenable(faker::address) // enables unique generation for all functions of Address provider\nenable(faker::name) // enables unique generation for all functions of Name provider\nexclude(listOfValues) // exclude values from <code>listOfValue<\/code> collection from being generated (for all providers that are enabled for unique generation)\nenable(faker::internet) { enables unique generation for all functions of Internet provider\nexclude<Internet>(listOfValues) // exclude values from <code>listOfValue<\/code> collection from being generated with Internet provider\nexclude(faker::internet, listOfPatterns)\n}\n}<\/p>\n<\/code><\/pre>\nLocalUniqueDataProvider\n<p>Local provider for unique values.<\/p><p>This provider is used in  T  implementation of  FakeDataProvider  class,\nand controls unique generation configuration of  T 's functions.<\/p><p>Example usage:<\/p><pre><code>\nFaker().address.unique().country()\n<\/code><\/pre>\nUniqueProviderDelegate\n<p>Delegate class for  LocalUniqueDataProvider  used to return local providers that generate unique values.<\/p>\nUniqueDataProvider\n<p>UniqueProviderConfiguration<\/p>\n<p>Provides configuration for Unique Generation of values.<\/p>\n"
                        }]
                      },
                      "abstractfakedataprovider": {
                        "ownKey": "abstractfakedataprovider",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/abstractfakedataprovider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/abstractfakedataprovider"
                          },
                          "description": "",
                          "title": "AbstractFakeDataProvider",
                          "content": "<p>Abstract class for all concrete  FakeDataProvider 's that do not use yml files as data source.<\/p>category\n<p>Category of <code>this<\/code> fake data provider class.<\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nfakerService\n<p>clear<\/p>\n<p>Clears used unique values for the function  name  of this provider.<\/p>\nclearAll\n<p>Clears all used unique values of this provider.<\/p>\nresolveUniqueValue\n<p>resolveUniqueValue<\/p>\n<p>resolveUniqueValue<\/p>\n<p>resolveUniqueValue<\/p>\n"
                        }]
                      },
                      "yamlfakedataprovider": {
                        "ownKey": "yamlfakedataprovider",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/yamlfakedataprovider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/yamlfakedataprovider"
                          },
                          "description": "",
                          "title": "YamlFakeDataProvider",
                          "content": "<p>Abstract class for all concrete  FakeDataProvider 's that use yml files as data source.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nsecondaryCategory\n<p>Secondary category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the  yamlCategory  key in <code>.yml<\/code> locale file.<\/p><p>For example <code>dog.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    creature:\n      dog:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.CREATURE<\/a>, and the  secondary <a href=\"#\">Category.name<\/a> would be <code>\"dog\"<\/code><\/p><p><i>TIP: Use <a href=\"#\">Category.ofName<\/a> helper function when needed.<\/i><\/p><p><i>NB! If the  secondaryCategory  is set,the dictionary filename should match the <a href=\"#\">Category.name<\/a> of this  secondaryCategory ,i.e. the file name should be <code>dog.yml<\/code> for the <code>[Category.ofName]<\/code> dog.<\/i><\/p>\ncategory\n<p>Category of <code>this<\/code> fake data provider class.<\/p>\n<init>\n<p>Abstract class for all concrete  FakeDataProvider 's that use yml files as data source.<\/p>\nresolve\n<p>Returns resolved (unique) value for the parameter with the specified  key .<\/p><p>Will return a unique value if the call to the function is prefixed with <code>unique<\/code> property. Example:<\/p><pre><code>\nfaker.address.unique.city() => will return a unique value for the `city` parameter\n<\/code><\/pre>\nresolve\n<p>Returns resolved (unique) value for the parameter with the specified pair of  keys ,\nwhere <code>first<\/code> is the \"altKey\" and <code>second<\/code> is the \"primaryKey\".<\/p><p>This function can be used to resolve locale-specific keys that are not present in the default 'en' dictionaries.<\/p><p>An example usage (taken from  Address.countryCode ) looks something like this:<\/p><pre><code>\nfun countryCode() = resolve(\"default_country_code\" or \"country_code\")\n<\/code><\/pre><p>Here, the <code>\"default_country_code\"<\/code> is the key that is only present in the localized dictionaries,\nwhich may or may not be present in the default 'en' dictionary,\nand <code>\"country_code\"<\/code> is the default key for this function which is defined in <code>en/address.yml<\/code> dict file.<\/p><p>Will attempt to return a unique value if the call to the function is prefixed with <code>unique<\/code> property. Example:<\/p><pre><code>\nfaker.address.unique.countryCode() => will return a unique value for the `country_code` parameter.\n<\/code><\/pre>\nresolve\n<p>Returns resolved (unique) value for the parameter with the specified  primaryKey  and  secondaryKey .<\/p><p>TIP: Can be useful for providers that override this  secondaryCategory \nto use a compile-safe object instead of a string for the  primaryKey .<\/p><p>Example:<\/p><pre class=\"language-diff\"><code class=\"language-diff\">\nclass Minecraft internal constructor(fakerService: FakerService) : YamlFakeDataProvider<Minecraft>(fakerService) {\n  override val yamlCategory = YamlCategory.GAMES\n  override val secondaryCategory: Category = Category.ofName(\"MINECRAFT\")\n  override val localUniqueDataProvider = LocalUniqueDataProvider<Minecraft>()\n  override val unique by UniqueProviderDelegate(localUniqueDataProvider, fakerService)\n\n  fun achievement() = resolve(\"minecraft\", \"achievement\")\n  fun biome() = resolve(secondaryCategory, \"biome\")\n}\n<\/code><\/pre><p>Will return a unique value if the call to the function is prefixed with <code>unique<\/code> property.\nExample:<\/p><pre><code>\nfaker.address.unique.countryByCode(countryCode) => will return a unique value for the `city` parameter\n<\/code><\/pre>\nresolve\n<p>Returns resolved (unique) value for the parameter with the specified  primaryKey  and  secondaryKey .<\/p><p>Will return a unique value if the call to the function is prefixed with <code>unique<\/code> property.\nExample:<\/p><pre><code>\nfaker.address.unique.countryByCode(countryCode) => will return a unique value for the `city` parameter\n<\/code><\/pre>\nresolve\n<p>Returns resolved (unique) value for the parameter with the specified  primaryKey ,  secondaryKey  and  thirdKey <\/p><p>Will return a unique value if the call to the function is prefixed with <code>unique<\/code> property.\nExample:<\/p><pre><code>\nfaker.educator.tertiaryDegree(type) => will return a unique value for the `tertiaryDegree` parameter\n<\/code><\/pre>\nresolve\n<p>Returns resolved (unique) value for the parameter with the specified  primaryKey ,  secondaryKey  and  thirdKey <\/p><p>Will return a unique value if the call to the function is prefixed with <code>unique<\/code> property.\nExample:<\/p><pre><code>\nfaker.educator.tertiaryDegree(type) => will return a unique value for the `tertiaryDegree` parameter\n<\/code><\/pre>\n"
                        }]
                      },
                      "name": {
                        "ownKey": "name",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/name",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/name"
                          },
                          "description": "",
                          "title": "Name",
                          "content": "<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.NAME<\/a> category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nmaleFirstName\n<p>femaleFirstName<\/p>\n<p>neutralFirstName<\/p>\n<p>firstName<\/p>\n<p>lastName<\/p>\n<p>name<\/p>\n<p>nameWithMiddle<\/p>\n"
                        }]
                      },
                      "cellphone": {
                        "ownKey": "cellphone",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/cellphone",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/cellphone"
                          },
                          "description": "",
                          "title": "CellPhone",
                          "content": "<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.CELL_PHONE<\/a> category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nnumber\n"
                        }]
                      },
                      "currency": {
                        "ownKey": "currency",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/currency",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/currency"
                          },
                          "description": "",
                          "title": "Currency",
                          "content": "<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.CURRENCY<\/a> category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\ncode\n<p>name<\/p>\n<p>symbol<\/p>\n"
                        }]
                      },
                      "fakedataprovider": {
                        "ownKey": "fakedataprovider",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/fakedataprovider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/fakedataprovider"
                          },
                          "description": "",
                          "title": "FakeDataProvider",
                          "content": "<p>Interface for all fake data providers.<\/p><p>Represents a single, standalone provider (generator) of fake data.<\/p>\n"
                        }]
                      },
                      "internet": {
                        "ownKey": "internet",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/internet",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/internet"
                          },
                          "description": "",
                          "title": "Internet",
                          "content": "<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.INTERNET<\/a> category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be <a href=\"#\">YamlCategory.ADDRESS<\/a><\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the <a href=\"#\">YamlCategory.ADDRESS<\/a>.<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\ndomain\n<p>iPv4Address<\/p>\n<p>Returns a random IPv4 address<\/p>\nprivateIPv4Address\n<p>Returns a random private IPv4 address<\/p>\npublicIPv4Address\n<p>Returns a random public IPv4 address<\/p>\niPv6Address\n<p>Returns a random IPv6 address<\/p><p>Example:<\/p><pre><code>\nFaker().internet.iPv6Address() // => 176f:cfec:c73b:e0cb:534d:4b3e:db4e:3b53\n<\/code><\/pre>\nmacAddress\n<p>Returns a random mac-address with an optional  prefix <\/p><p>Examples:<\/p><pre><code>\nFaker().internet.macAddress() // => 17:12:d9:fc:fe:f6\nFaker().internet.macAddress(\"a\") // => 0a:11:ed:7c:b5:af\nFaker().internet.macAddress(\"aa\") // => aa:ec:eb:54:b9:f5\nFaker().internet.macAddress(\"aa:ce\") // => aa:ce:e3:e1:83:c4\n\n<\/code><\/pre>\nemail\n<p>safeEmail<\/p>\n<p>slug<\/p>\n<p>domainSuffix<\/p>\n<p>safeDomainSuffix<\/p>\n<p>userAgent<\/p>\n<p>botUserAgent<\/p>\n"
                        }]
                      },
                      "misc": {
                        "ownKey": "misc",
                        "childrenPages": {
                          "constructorfilterstrategy": {
                            "ownKey": "constructorfilterstrategy",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/core-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/provider/misc/constructorfilterstrategy",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/misc/constructorfilterstrategy"
                              },
                              "description": "",
                              "title": "ConstructorFilterStrategy",
                              "content": "<p>NO_ARGS<\/p>\n<p>MIN_NUM_OF_ARGS<\/p>\n<p>MAX_NUM_OF_ARGS<\/p>\n"
                            }]
                          },
                          "randomclassprovider": {
                            "ownKey": "randomclassprovider",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/core-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/provider/misc/randomclassprovider",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/misc/randomclassprovider"
                              },
                              "description": "",
                              "title": "RandomClassProvider",
                              "content": "<p>Provider functionality for generating random class instances.<\/p><p>Inspired by <a href=\"https://blog.kotlin-academy.com/creating-a-random-instance-of-any-class-in-kotlin-b6168655b64a\">Creating a random instance of any class in Kotlin blog post<\/a>.<\/p>configure\n<p>Applies  configurator  to this  RandomClassProvider .<\/p>\nnew\n<p>Creates a new instance of this  RandomClassProvider .<\/p><p>IF <a href=\"#\">FakerConfig.randomProviderConfig<\/a> was configured\nTHEN new instance will be created with a copy of that configuration,\nELSE a new instance is created with a new instance of default configuration as defined in  RandomProviderConfig .<\/p>\ncopy\n<p>Creates a copy of this  RandomClassProvider  instance with a copy of its config.<\/p>\nreset\n<p>Resets config to defaults for this  RandomClassProvider  instance.<\/p>\nrandomClassInstance\n<p>Creates an instance of  T . If  T  has a parameterless public/internal constructor then it will be used to create an instance of this class,\notherwise a constructor with minimal number of parameters will be used with randomly-generated values.<\/p>\nrandomClassInstance\n<p>Creates an instance of  T . If  T  has a parameterless public/internal constructor then it will be used to create an instance of this class,\notherwise a constructor with minimal number of parameters will be used with randomly-generated values.<\/p>\nrandomClassInstance\n<p>Creates an instance of  T  from the KClass input.\nIf  T  has a parameterless public/internal constructor then it will be used to create an instance of this class,\notherwise a constructor with minimal number of parameters will be used with randomly-generated values.<\/p>\nrandomClassInstance\n<p>Creates an instance of  T  from the KClass input.\nIf  T  has a parameterless public/internal constructor then it will be used to create an instance of this class,\notherwise a constructor with minimal number of parameters will be used with randomly-generated values.<\/p>\n"
                            }]
                          },
                          "cryptographyprovider": {
                            "ownKey": "cryptographyprovider",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/core-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/provider/misc/cryptographyprovider",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/misc/cryptographyprovider"
                              },
                              "description": "",
                              "title": "CryptographyProvider",
                              "content": "<p>Provides functions for generating random hash sum strings.<\/p>category\n<p>Category of <code>this<\/code> fake data provider class.<\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nmd5\n<p>Generates and returns a pseudo-randomly generated md5 hash value, 32 digits long.<\/p>\nsha1\n<p>Generates and returns a pseudo-randomly generated sha-1 hash value, 40 digits long.<\/p>\nsha224\n<p>Generates and returns a pseudo-randomly generated sha-224 hash value, 56 digits long.<\/p>\nsha256\n<p>Generates and returns a pseudo-randomly generated sha-256 hash value, 64 digits long.<\/p>\nsha384\n<p>Generates and returns a pseudo-randomly generated sha-384 hash value, 96 digits long.<\/p>\nsha512\n<p>Generates and returns a pseudo-randomly generated sha-512 hash value, 128 digits long.<\/p>\n"
                            }]
                          },
                          "stringprovider": {
                            "ownKey": "stringprovider",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/core-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/provider/misc/stringprovider",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/misc/stringprovider"
                              },
                              "description": "",
                              "title": "StringProvider",
                              "content": "<p>Provides functions for generating values from string expressions.<\/p>category\n<p>Category of <code>this<\/code> fake data provider class.<\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nnumerify\n<p>Replaces every <code>#<\/code> char for this  template  string with a random int from 0 to 9 inclusive,\nand returns the modified String.<\/p>\nletterify\n<p>Replaces every <code>?<\/code> char for this  template  string with a random letter from the English alphabet,\nand returns the modified String.<\/p>\nbothify\n<p>Combines applies both  numerify  and  letterify  functions to the  template  string,\nand returns the modified String.<\/p>\nregexify\n<p>Returns a string of generated values based on the regex expressions in the  template  input,\nfor example <code>regexify(\"\"\"\\d{3}\"\"\")<\/code> will return a string consisting of 3 random digits.<\/p><p><i>Refer to <a href=\"https://github.com/curious-odd-man/RgxGen?tab=readme-ov-file#supported-syntax\">RgxGen's Supported Syntax<\/a>documentation for details on what regex syntax is supported.<\/i><\/p>\nregexify\n<p>Returns a string of generated values based on the  regex ,\nfor example <code>regexify(Regex(\"\"\"\\d{3}\"\"\"))<\/code> will return a string consisting of 3 random digits.<\/p><p><i>Refer to <a href=\"https://github.com/curious-odd-man/RgxGen?tab=readme-ov-file#supported-syntax\">RgxGen's Supported Syntax<\/a>documentation for details on what regex syntax is supported.<\/i><\/p>\n"
                            }]
                          },
                          "fallbackstrategy": {
                            "ownKey": "fallbackstrategy",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/core-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/provider/misc/fallbackstrategy",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/misc/fallbackstrategy"
                              },
                              "description": "",
                              "title": "FallbackStrategy",
                              "content": "<p>USE_MIN_NUM_OF_ARGS<\/p>\n<p>USE_MAX_NUM_OF_ARGS<\/p>\n<p>FAIL_IF_NOT_FOUND<\/p>\n"
                            }]
                          },
                          "randomprovider": {
                            "ownKey": "randomprovider",
                            "childrenPages": {"key": {
                              "ownKey": "key",
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-data-provider",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/misc/randomprovider/key",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/misc/randomprovider/key"
                                },
                                "description": "",
                                "title": "Key",
                                "content": "<p>Keys for unique data provider to simplify resetting unique values via  RandomProvider.clear  function.<\/p>NEXT_INT\n<p>Key for  nextInt  function<\/p>\nRANDOM_VALUE\n<p>Key for  randomValue  function<\/p>\nNEXT_LETTER\n<p>Key for  nextLetter  function<\/p>\nRANDOM_STRING\n<p>Key for  randomString  function<\/p>\nNEXT_LONG\n<p>Key for  nextLong  function<\/p>\nNEXT_FLOAT\n<p>Key for  nextFloat  function<\/p>\nNEXT_DOUBLE\n<p>Key for  nextDouble  function<\/p>\nNEXT_CHAR\n<p>Key for  nextChar  function<\/p>\nNEXT_ENUM\n<p>Key for  nextEnum  function<\/p>\nNEXT_UUID\n<p>Key for  nextUUID  function<\/p>\nRANDOM_SUBLIST\n<p>Key for  randomSublist  function<\/p>\nRANDOM_SUBSET\n<p>Key for  randomSubset  function<\/p>\nRANDOM_DATE\n<p>Key for  randomDate  function<\/p>\n"
                              }]
                            }},
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/core-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/provider/misc/randomprovider",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/misc/randomprovider"
                              },
                              "description": "",
                              "title": "RandomProvider",
                              "content": "<p>Provides data-generator-like functionality for the functions of <a href=\"#\">RandomService<\/a>.<\/p>category\n<p>Category of <code>this<\/code> fake data provider class.<\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this unique provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nconfig\n<p>clear<\/p>\n<p>Clears used unique values for the function  key  of this provider.<\/p>\nnextInt\n<p>nextInt<\/p>\n<p>nextInt<\/p>\n<p>nextInt<\/p>\n<p>randomValue<\/p>\n<p>randomValue<\/p>\n<p>nextLetter<\/p>\n<p>randomString<\/p>\n<p>randomString<\/p>\n<p>randomString<\/p>\n<p>nextBoolean<\/p>\n<p>Returns the next pseudorandom, uniformly distributed Boolean value\nfrom this random number generator's sequence.<\/p><p>The values <code>true<\/code> and <code>false<\/code> are produced with (approximately) equal probability.<\/p><p><i>NB! this method does not try to produce \"unique\" values via unique data provider.<\/i><\/p>\nnextLong\n<p>nextLong<\/p>\n<p>nextLong<\/p>\n<p>nextLong<\/p>\n<p>nextFloat<\/p>\n<p>nextDouble<\/p>\n<p>nextChar<\/p>\n<p>nextEnum<\/p>\n<p>Returns a randomly selected enum entry of type  E .<\/p><p><i>NB! when used with unique, the  nextInt , which is used to get a random index of the enumValues of  E will also use unique generation and will need to be reset via  clear  as well when needed.<\/i><\/p>\nnextEnum\n<p>nextEnum<\/p>\n<p>nextEnum<\/p>\n<p>nextEnum<\/p>\n<p>Returns a randomly selected enum entry of type  E  excluding a particular enum class by its name.<\/p><p><i>NB! when used with unique, the  nextInt , which is used to get a random index of the enumValues of  E will also use unique generation and will need to be reset via  clear  as well when needed.<\/i><\/p>\nnextUUID\n<p>randomSublist<\/p>\n<p>randomSublist<\/p>\n<p>randomSubset<\/p>\n<p>randomSubset<\/p>\n<p>randomPastDate<\/p>\n<p>randomPastDate<\/p>\n<p>randomFutureDate<\/p>\n<p>randomFutureDate<\/p>\n<p>randomDate<\/p>\n"
                            }]
                          },
                          "randomproviderconfig": {
                            "ownKey": "randomproviderconfig",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/core-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/provider/misc/randomproviderconfig",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/misc/randomproviderconfig"
                              },
                              "description": "",
                              "title": "RandomProviderConfig",
                              "content": "<p>Configuration for  RandomClassProvider.randomClassInstance .<\/p>collectionsSize\n<p>the size of the generated Collection type arguments.\nDefaults to <code>1<\/code>.<\/p>\nconstructorParamSize\n<p>will try to look up the constructor with specified number of arguments,\nand use that to create the instance of the class.\nDefaults to <code>-1<\/code>, which ignores this configuration property.\nThis takes precedence over  constructorFilterStrategy  configuration.<\/p>\nconstructorFilterStrategy\n<p>default strategy for looking up a constructor\nthat is used to create the instance of a class.\nBy default, a zero-args constructor will be used.<\/p>\nfallbackStrategy\n<p>fallback strategy that is used to look up a constructor\nif no constructor with  constructorParamSize  or  constructorFilterStrategy  was found.<\/p>\ndefaultValuesStrategy\n<p>strategy for choosing how to handle default constructor parameters' values.\nBy default, generates random values for all constructor parameters.<\/p>\nnamedParameterGenerator\n<p>Configures generation for a specific named constructor parameter.\nOverrides all other generators.<\/p>\ntypeGenerator\n<p>Configures generation for a specific type of constructor parameter.\nIt can override internal generators (for primitives, for example)<\/p>\nnullableTypeGenerator\n<p>Configures generation for a specific nullable type of constructor parameter.\nIt can override internal generators (for primitives, for example)<\/p>\ncollectionElementTypeGenerator\n<p>Configures generation of elements of constructor parameters of Collection types.<\/p>\nmapEntryKeyTypeGenerator\n<p>Configures generation of non-null keys of constructor parameters of Map types.<\/p>\nmapEntryValueTypeGenerator\n<p>Configures generation of values of constructor parameters of Map types.<\/p>\n"
                            }]
                          },
                          "parameterinfo": {
                            "ownKey": "parameterinfo",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/core-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/provider/misc/parameterinfo",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/misc/parameterinfo"
                              },
                              "description": "",
                              "title": "ParameterInfo",
                              "content": "<p>Provides additional information about Class parameter to custom defined generators.\nThe reason why KParameter is not used is that you will want to provide\nadditional information about parameter that is not available in KParameter class.<\/p>index\n<p>0-based index of this parameter in the parameter list of its containing callable.<\/p>\nname\n<p>Name of this parameter as it was declared in the source code,\nor <code>null<\/code> if the parameter has no name or its name is not available at runtime.\nExamples of nameless parameters include <code>this<\/code> instance for member functions,\nextension receiver for extension functions or properties, parameters of Java methods\ncompiled without the debug information, and others.<\/p>\nisOptional\n<p><code>true<\/code> if this parameter is optional and can be omitted when making a call via KCallable.callBy, or <code>false<\/code> otherwise.<\/p><p>A parameter is optional in any of the two cases:<\/p><ol><li>The default value is provided at the declaration of this parameter.<\/li><li>The parameter is declared in a member function and one of the corresponding parameters in the super functions is optional.<\/li><\/ol>\nisVararg\n<p><code>true<\/code> if this parameter is <code>vararg<\/code>.\nSee the <a href=\"https://kotlinlang.org/docs/reference/functions.html#variable-number-of-arguments-varargs\">Kotlin language documentation<\/a>\nfor more information.<\/p>\ntype\n<p>Type of this parameter. For a <code>vararg<\/code> parameter, this is the type of the corresponding array,\nnot the individual element.<\/p>\nkind\n<p>Kind of this parameter.\nKind represents a particular position of the parameter declaration in the source code,\nsuch as an instance, an extension receiver parameter or a value parameter.<\/p>\n<init>\n<p>Provides additional information about Class parameter to custom defined generators.\nThe reason why KParameter is not used is that you will want to provide\nadditional information about parameter that is not available in KParameter class.<\/p>\n"
                            }]
                          },
                          "defaultvaluesstrategy": {
                            "ownKey": "defaultvaluesstrategy",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/core-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/provider/misc/defaultvaluesstrategy",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/misc/defaultvaluesstrategy"
                              },
                              "description": "",
                              "title": "DefaultValuesStrategy",
                              "content": "<p>USE_DEFAULTS<\/p>\n<p>Uses default values of constructor parameters.<\/p>\nPICK_RANDOMLY\n<p>Randomly picks either a default or a randomly-generated value of constructor parameters.<\/p>\nALL_RANDOM\n<p>Uses randomly-generated values of constructor parameters.<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/provider/misc",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider/misc"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.provider.misc",
                          "content": "<p>CryptographyProvider<\/p>\n<p>Provides functions for generating random hash sum strings.<\/p>\nParameterInfo\n<p>Provides additional information about Class parameter to custom defined generators.\nThe reason why KParameter is not used is that you will want to provide\nadditional information about parameter that is not available in KParameter class.<\/p>\nRandomClassProvider\n<p>Provider functionality for generating random class instances.<\/p><p>Inspired by <a href=\"https://blog.kotlin-academy.com/creating-a-random-instance-of-any-class-in-kotlin-b6168655b64a\">Creating a random instance of any class in Kotlin blog post<\/a>.<\/p>\nRandomProviderConfig\n<p>Configuration for  RandomClassProvider.randomClassInstance .<\/p>\nFallbackStrategy\n<p>ConstructorFilterStrategy<\/p>\n<p>DefaultValuesStrategy<\/p>\n<p>RandomProvider<\/p>\n<p>Provides data-generator-like functionality for the functions of <a href=\"#\">RandomService<\/a>.<\/p>\nStringProvider\n<p>Provides functions for generating values from string expressions.<\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/core-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/provider",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-data-provider/io/github/serpro69/kfaker/provider"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.provider",
                      "content": "<p>AbstractFakeDataProvider<\/p>\n<p>Abstract class for all concrete  FakeDataProvider 's that do not use yml files as data source.<\/p>\nAddress\n<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.ADDRESS<\/a> category.<\/p>\nColor\n<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.COLOR<\/a> category.<\/p>\nCurrency\n<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.CURRENCY<\/a> category.<\/p>\nCurrencySymbol\n<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.CURRENCY_SYMBOL<\/a> category.<\/p>\nFakeDataProvider\n<p>Interface for all fake data providers.<\/p><p>Represents a single, standalone provider (generator) of fake data.<\/p>\nFile\n<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.FILE<\/a> category.<\/p>\nFileMimeType\n<p>Gender<\/p>\n<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.GENDER<\/a> category.<\/p>\nIdNumber\n<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.ID_NUMBER<\/a> category.<\/p>\nInternet\n<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.INTERNET<\/a> category.<\/p>\nMeasurement\n<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.MEASUREMENT<\/a> category.<\/p>\nMoney\n<p>Name<\/p>\n<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.NAME<\/a> category.<\/p>\nPerson\n<p> FakeDataProvider  implementation class for functionality not covered by the standard dictionary files.<\/p>\nPhoneNumber\n<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.PHONE_NUMBER<\/a> category.<\/p>\nCellPhone\n<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.CELL_PHONE<\/a> category.<\/p>\nSeparator\n<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.ADDRESS<\/a> category.<\/p>\nSource\n<p> FakeDataProvider  implementation for <a href=\"#\">YamlCategory.SOURCE<\/a> category.<\/p>\nYamlFakeDataProvider\n<p>Abstract class for all concrete  FakeDataProvider 's that use yml files as data source.<\/p>\nio.github.serpro69.kfaker.provider.misc\n<p>io.github.serpro69.kfaker.provider.unique<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "books-data-provider": {
          "ownKey": "books-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"books": {
                    "ownKey": "books",
                    "childrenPages": {
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "tolkienlordoftherings": {
                            "ownKey": "tolkienlordoftherings",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/books-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/books/provider/tolkienlordoftherings",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider/tolkienlordoftherings"
                              },
                              "description": "",
                              "title": "TolkienLordOfTheRings",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>locations<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "tolkienhobbit": {
                            "ownKey": "tolkienhobbit",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/books-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/books/provider/tolkienhobbit",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider/tolkienhobbit"
                              },
                              "description": "",
                              "title": "TolkienHobbit",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>character<\/p>\n<p>thorinsCompany<\/p>\n<p>quote<\/p>\n<p>location<\/p>\n"
                            }]
                          },
                          "bible": {
                            "ownKey": "bible",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/books-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/books/provider/bible",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider/bible"
                              },
                              "description": "",
                              "title": "Bible",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BIBLE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>character<\/p>\n<p>location<\/p>\n<p>quote<\/p>\n"
                            }]
                          },
                          "cultureseries": {
                            "ownKey": "cultureseries",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/books-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/books/provider/cultureseries",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider/cultureseries"
                              },
                              "description": "",
                              "title": "CultureSeries",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CULTURE_SERIES<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>books<\/p>\n<p>cultureShips<\/p>\n<p>cultureShipClasses<\/p>\n<p>cultureShipClassAbvs<\/p>\n<p>civs<\/p>\n<p>planets<\/p>\n"
                            }]
                          },
                          "book": {
                            "ownKey": "book",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/books-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/books/provider/book",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider/book"
                              },
                              "description": "",
                              "title": "Book",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BOOK<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>title<\/p>\n<p>author<\/p>\n<p>publisher<\/p>\n<p>genre<\/p>\n"
                            }]
                          },
                          "dune": {
                            "ownKey": "dune",
                            "childrenPages": {
                              "quotecharacter": {
                                "ownKey": "quotecharacter",
                                "ownPages": [{
                                  "reference": {
                                    "path": "kotlindoc/books-data-provider",
                                    "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                    "fileName": "io/github/serpro69/kfaker/books/provider/dune/quotecharacter",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider/dune/quotecharacter"
                                  },
                                  "description": "",
                                  "title": "QuoteCharacter",
                                  "content": "<p>GUILD_NAVIGATOR<\/p>\n<p>EMPEROR<\/p>\n<p>PAUL<\/p>\n<p>THUFIR<\/p>\n<p>JESSICA<\/p>\n<p>IRULAN<\/p>\n<p>MOHIAM<\/p>\n<p>GURNEY<\/p>\n<p>LETO<\/p>\n<p>STILGAR<\/p>\n<p>LIET_KYNES<\/p>\n<p>PARDOT_KYNES<\/p>\n<p>BARON_HARKONNEN<\/p>\n<p>PITER<\/p>\n<p>ALIA<\/p>\n<p>MAPES<\/p>\n<p>DUNCAN<\/p>\n<p>YUEH<\/p>\n"
                                }]
                              },
                              "sayingorigin": {
                                "ownKey": "sayingorigin",
                                "ownPages": [{
                                  "reference": {
                                    "path": "kotlindoc/books-data-provider",
                                    "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                    "fileName": "io/github/serpro69/kfaker/books/provider/dune/sayingorigin",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider/dune/sayingorigin"
                                  },
                                  "description": "",
                                  "title": "SayingOrigin",
                                  "content": "<p>BENE_GESSERIT<\/p>\n<p>FREMEN<\/p>\n<p>MENTAT<\/p>\n<p>MUADDIB<\/p>\n<p>ORANGE_CATHOLIC_BIBLE<\/p>\n"
                                }]
                              }
                            },
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/books-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/books/provider/dune",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider/dune"
                              },
                              "description": "",
                              "title": "Dune",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DUNE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>titles<\/p>\n<p>planets<\/p>\n<p>cities<\/p>\n<p>quotes<\/p>\n<p>sayings<\/p>\n"
                            }]
                          },
                          "tolkien": {
                            "ownKey": "tolkien",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/books-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/books/provider/tolkien",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider/tolkien"
                              },
                              "description": "",
                              "title": "Tolkien",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.TOLKIEN<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>lordOfTheRings<\/p>\n<p>hobbit<\/p>\n<p>poems<\/p>\n<p>locations<\/p>\n<p>races<\/p>\n<p>characters<\/p>\n"
                            }]
                          },
                          "shakespeare": {
                            "ownKey": "shakespeare",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/books-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/books/provider/shakespeare",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider/shakespeare"
                              },
                              "description": "",
                              "title": "Shakespeare",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SHAKESPEARE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>hamlet<\/p>\n<p>asYouLikeIt<\/p>\n<p>kingRichardTheThird<\/p>\n<p>romeoAndJuliet<\/p>\n"
                            }]
                          },
                          "cosmere": {
                            "ownKey": "cosmere",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/books-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/books/provider/cosmere",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider/cosmere"
                              },
                              "description": "",
                              "title": "Cosmere",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.COSMERE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>aons<\/p>\n<p>shardWorlds<\/p>\n<p>shards<\/p>\n<p>surges<\/p>\n<p>knightsRadiant<\/p>\n<p>metals<\/p>\n<p>allomancers<\/p>\n<p>feruchemists<\/p>\n"
                            }]
                          },
                          "thekingkillerchronicle": {
                            "ownKey": "thekingkillerchronicle",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/books-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/books/provider/thekingkillerchronicle",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider/thekingkillerchronicle"
                              },
                              "description": "",
                              "title": "TheKingkillerChronicle",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BOOKS<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>books<\/p>\n<p>characters<\/p>\n<p>creatures<\/p>\n<p>locations<\/p>\n"
                            }]
                          },
                          "dccomics": {
                            "ownKey": "dccomics",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/books-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/books/provider/dccomics",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider/dccomics"
                              },
                              "description": "",
                              "title": "DcComics",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DC_COMICS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>hero<\/p>\n<p>heroine<\/p>\n<p>villain<\/p>\n<p>name<\/p>\n<p>title<\/p>\n"
                            }]
                          },
                          "lovecraft": {
                            "ownKey": "lovecraft",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/books-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/books/provider/lovecraft",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider/lovecraft"
                              },
                              "description": "",
                              "title": "Lovecraft",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.LOVECRAFT<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>fhtagn<\/p>\n<p>deity<\/p>\n<p>location<\/p>\n<p>tome<\/p>\n<p>words<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/books-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/books/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.books.provider",
                          "content": "<p>Bible<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BIBLE<\/a> category.<\/p>\nBook\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BOOK<\/a> category.<\/p>\nCosmere\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.COSMERE<\/a> category.<\/p>\nCultureSeries\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CULTURE_SERIES<\/a> category.<\/p>\nDcComics\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DC_COMICS<\/a> category.<\/p>\nDune\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DUNE<\/a> category.<\/p>\nLovecraft\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.LOVECRAFT<\/a> category.<\/p>\nShakespeare\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SHAKESPEARE<\/a> category.<\/p>\nTheKingkillerChronicle\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BOOKS<\/a> category.<\/p>\nTolkien\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.TOLKIEN<\/a> category.<\/p>\nTolkienLordOfTheRings\n<p>TolkienHobbit<\/p>\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/books-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/books/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  BooksFaker <\/p>\n"
                        }]
                      },
                      "booksfaker": {
                        "ownKey": "booksfaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/books-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/books/booksfaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/booksfaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/books-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/books/booksfaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books/booksfaker"
                          },
                          "description": "",
                          "title": "BooksFaker",
                          "content": "<p>Provides access to fake data generators within the Books domain.<\/p><p>Each category (generator) from this  BooksFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>bible\n<p>book<\/p>\n<p>cosmere<\/p>\n<p>cultureSeries<\/p>\n<p>dcComics<\/p>\n<p>dune<\/p>\n<p>lovecraft<\/p>\n<p>shakespeare<\/p>\n<p>theKingkillerChronicle<\/p>\n<p>tolkien<\/p>\n<p><init><\/p>\n<p>Provides access to fake data generators within the Books domain.<\/p><p>Each category (generator) from this  BooksFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/books-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/books",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/books-data-provider/io/github/serpro69/kfaker/books"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.books",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  BooksFaker <\/p>\nBooksFaker\n<p>Provides access to fake data generators within the Books domain.<\/p><p>Each category (generator) from this  BooksFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\nio.github.serpro69.kfaker.books.provider\n<p>Faker<\/p>\n<p>Typealias for the  BooksFaker <\/p>\nfaker\n<p>Applies the  block  function to  BooksFaker.Builder \nand returns as an instance of  BooksFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "misc-data-provider": {
          "ownKey": "misc-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"misc": {
                    "ownKey": "misc",
                    "childrenPages": {
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "artist": {
                            "ownKey": "artist",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/misc-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/misc/provider/artist",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/misc-data-provider/io/github/serpro69/kfaker/misc/provider/artist"
                              },
                              "description": "",
                              "title": "Artist",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ARTIST<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>names<\/p>\n"
                            }]
                          },
                          "drivinglicense": {
                            "ownKey": "drivinglicense",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/misc-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/misc/provider/drivinglicense",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/misc-data-provider/io/github/serpro69/kfaker/misc/provider/drivinglicense"
                              },
                              "description": "",
                              "title": "DrivingLicense",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DRIVING_LICENSE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>license<\/p>\n<p>licenseByState<\/p>\n"
                            }]
                          },
                          "military": {
                            "ownKey": "military",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/misc-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/misc/provider/military",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/misc-data-provider/io/github/serpro69/kfaker/misc/provider/military"
                              },
                              "description": "",
                              "title": "Military",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.MILITARY<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>armyRank<\/p>\n<p>marinesRank<\/p>\n<p>navyRank<\/p>\n<p>coastGuardRank<\/p>\n<p>airForceRank<\/p>\n<p>spaceForceRank<\/p>\n<p>dodPaygrade<\/p>\n"
                            }]
                          },
                          "greekphilosophers": {
                            "ownKey": "greekphilosophers",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/misc-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/misc/provider/greekphilosophers",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/misc-data-provider/io/github/serpro69/kfaker/misc/provider/greekphilosophers"
                              },
                              "description": "",
                              "title": "GreekPhilosophers",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GREEK_PHILOSOPHERS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>names<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "relationship": {
                            "ownKey": "relationship",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/misc-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/misc/provider/relationship",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/misc-data-provider/io/github/serpro69/kfaker/misc/provider/relationship"
                              },
                              "description": "",
                              "title": "Relationship",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.RELATIONSHIP<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>familialDirect<\/p>\n<p>familialExtended<\/p>\n<p>familial<\/p>\n<p>inLaw<\/p>\n<p>spouse<\/p>\n<p>parent<\/p>\n<p>sibling<\/p>\n"
                            }]
                          },
                          "blood": {
                            "ownKey": "blood",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/misc-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/misc/provider/blood",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/misc-data-provider/io/github/serpro69/kfaker/misc/provider/blood"
                              },
                              "description": "",
                              "title": "Blood",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BLOOD<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>type<\/p>\n<p>rhFactor<\/p>\n<p>group<\/p>\n"
                            }]
                          },
                          "demographic": {
                            "ownKey": "demographic",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/misc-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/misc/provider/demographic",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/misc-data-provider/io/github/serpro69/kfaker/misc/provider/demographic"
                              },
                              "description": "",
                              "title": "Demographic",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DEMOGRAPHIC<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>race<\/p>\n<p>sex<\/p>\n<p>demonym<\/p>\n<p>educationalAttainment<\/p>\n<p>maritalStatus<\/p>\n"
                            }]
                          },
                          "hobby": {
                            "ownKey": "hobby",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/misc-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/misc/provider/hobby",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/misc-data-provider/io/github/serpro69/kfaker/misc/provider/hobby"
                              },
                              "description": "",
                              "title": "Hobby",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HOBBY<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>activity<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/misc-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/misc/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/misc-data-provider/io/github/serpro69/kfaker/misc/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.misc.provider",
                          "content": "<p>Artist<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ARTIST<\/a> category.<\/p>\nBlood\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.BLOOD<\/a> category.<\/p>\nDemographic\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DEMOGRAPHIC<\/a> category.<\/p>\nDrivingLicense\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DRIVING_LICENSE<\/a> category.<\/p>\nGreekPhilosophers\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GREEK_PHILOSOPHERS<\/a> category.<\/p>\nHobby\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HOBBY<\/a> category.<\/p>\nMilitary\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.MILITARY<\/a> category.<\/p>\nRelationship\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.RELATIONSHIP<\/a> category.<\/p>\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/misc-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/misc/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/misc-data-provider/io/github/serpro69/kfaker/misc/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  MiscFaker <\/p>\n"
                        }]
                      },
                      "miscfaker": {
                        "ownKey": "miscfaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/misc-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/misc/miscfaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/misc-data-provider/io/github/serpro69/kfaker/misc/miscfaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/misc-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/misc/miscfaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/misc-data-provider/io/github/serpro69/kfaker/misc/miscfaker"
                          },
                          "description": "",
                          "title": "MiscFaker",
                          "content": "<p>Provides access to fake data generators that don't belong in the <a href=\"#\">CoreFaker<\/a>\nbut also don't fit into any of the existing providers.<\/p><p>Each category (generator) from this  MiscFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>artist\n<p>blood<\/p>\n<p>demographic<\/p>\n<p>drivingLicense<\/p>\n<p>greekPhilosophers<\/p>\n<p>hobby<\/p>\n<p>military<\/p>\n<p>relationship<\/p>\n<p><init><\/p>\n<p>Provides access to fake data generators that don't belong in the <a href=\"#\">CoreFaker<\/a>\nbut also don't fit into any of the existing providers.<\/p><p>Each category (generator) from this  MiscFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/misc-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/misc",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/misc-data-provider/io/github/serpro69/kfaker/misc"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.misc",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  MiscFaker <\/p>\nMiscFaker\n<p>Provides access to fake data generators that don't belong in the <a href=\"#\">CoreFaker<\/a>\nbut also don't fit into any of the existing providers.<\/p><p>Each category (generator) from this  MiscFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\nio.github.serpro69.kfaker.misc.provider\n<p>Faker<\/p>\n<p>Typealias for the  MiscFaker <\/p>\nfaker\n<p>Applies the  block  function to  MiscFaker.Builder \nand returns as an instance of  MiscFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "games-data-provider": {
          "ownKey": "games-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"games": {
                    "ownKey": "games",
                    "childrenPages": {
                      "gamesfaker": {
                        "ownKey": "gamesfaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/games-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/games/gamesfaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/gamesfaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/games-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/games/gamesfaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/gamesfaker"
                          },
                          "description": "",
                          "title": "GamesFaker",
                          "content": "<p>Provides access to fake data generators within the Games domain.<\/p><p>Each category (generator) from this  GamesFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>clashOfClans\n<p>coin<\/p>\n<p>control<\/p>\n<p>dnd<\/p>\n<p>dota<\/p>\n<p>elderScrolls<\/p>\n<p>fallout<\/p>\n<p>finalFantasyXIV<\/p>\n<p>game<\/p>\n<p>halfLife<\/p>\n<p>heroes<\/p>\n<p>heroesOfTheStorm<\/p>\n<p>leagueOfLegends<\/p>\n<p>minecraft<\/p>\n<p>myst<\/p>\n<p>overwatch<\/p>\n<p>pokemon<\/p>\n<p>sonicTheHedgehog<\/p>\n<p>streetFighter<\/p>\n<p>superhero<\/p>\n<p>superMario<\/p>\n<p>superSmashBros<\/p>\n<p>tarkov<\/p>\n<p>touhou<\/p>\n<p>warhammerFantasy<\/p>\n<p>witcher<\/p>\n<p>worldOfWarcraft<\/p>\n<p>zelda<\/p>\n<p><init><\/p>\n<p>Provides access to fake data generators within the Games domain.<\/p><p>Each category (generator) from this  GamesFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\n"
                        }]
                      },
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "minecraft": {
                            "ownKey": "minecraft",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/minecraft",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/minecraft"
                              },
                              "description": "",
                              "title": "Minecraft",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>achievement<\/p>\n<p>biome<\/p>\n<p>blocks<\/p>\n<p>enchantment<\/p>\n<p>gameMode<\/p>\n<p>items<\/p>\n<p>mobs<\/p>\n<p>statusEffect<\/p>\n"
                            }]
                          },
                          "game": {
                            "ownKey": "game",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/game",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/game"
                              },
                              "description": "",
                              "title": "Game",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAME<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>title<\/p>\n"
                            }]
                          },
                          "superhero": {
                            "ownKey": "superhero",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/superhero",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/superhero"
                              },
                              "description": "",
                              "title": "Superhero",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SUPERHERO<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>power<\/p>\n<p>name<\/p>\n"
                            }]
                          },
                          "warhammerfantasy": {
                            "ownKey": "warhammerfantasy",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/warhammerfantasy",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/warhammerfantasy"
                              },
                              "description": "",
                              "title": "WarhammerFantasy",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>heroes<\/p>\n<p>quotes<\/p>\n<p>locations<\/p>\n<p>factions<\/p>\n<p>creatures<\/p>\n"
                            }]
                          },
                          "heroes": {
                            "ownKey": "heroes",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/heroes",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/heroes"
                              },
                              "description": "",
                              "title": "Heroes",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HEROES<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>names<\/p>\n<p>specialties<\/p>\n<p>klasses<\/p>\n<p>artifacts<\/p>\n"
                            }]
                          },
                          "fallout": {
                            "ownKey": "fallout",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/fallout",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/fallout"
                              },
                              "description": "",
                              "title": "Fallout",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>factions<\/p>\n<p>locations<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "dota": {
                            "ownKey": "dota",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/dota",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/dota"
                              },
                              "description": "",
                              "title": "Dota",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>building<\/p>\n<p>hero<\/p>\n<p>abaddon<\/p>\n<p>alchemist<\/p>\n<p>axe<\/p>\n<p>beastmaster<\/p>\n<p>brewmaster<\/p>\n<p>bristleback<\/p>\n<p>centaur<\/p>\n<p>chaosKnight<\/p>\n<p>clockwerk<\/p>\n<p>doom<\/p>\n<p>dragonKnight<\/p>\n<p>earthSpirit<\/p>\n<p>earthshaker<\/p>\n<p>elderTitan<\/p>\n<p>huskar<\/p>\n<p>io<\/p>\n<p>kunkka<\/p>\n<p>legionCommander<\/p>\n<p>lifestealer<\/p>\n<p>lycan<\/p>\n<p>magnus<\/p>\n<p>meepo<\/p>\n<p>nightStalker<\/p>\n<p>omniknight<\/p>\n<p>phoenix<\/p>\n<p>pudge<\/p>\n<p>sandKing<\/p>\n<p>slardar<\/p>\n<p>spiritBreaker<\/p>\n<p>sven<\/p>\n<p>tidehunter<\/p>\n<p>timbersaw<\/p>\n<p>tiny<\/p>\n<p>treantProtector<\/p>\n<p>tusk<\/p>\n<p>underlord<\/p>\n<p>undying<\/p>\n<p>wraithKing<\/p>\n<p>item<\/p>\n<p>team<\/p>\n<p>player<\/p>\n"
                            }]
                          },
                          "clashofclans": {
                            "ownKey": "clashofclans",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/clashofclans",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/clashofclans"
                              },
                              "description": "",
                              "title": "ClashOfClans",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>troops<\/p>\n<p>ranks<\/p>\n<p>defensiveBuildings<\/p>\n"
                            }]
                          },
                          "dnd": {
                            "ownKey": "dnd",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/dnd",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/dnd"
                              },
                              "description": "",
                              "title": "DnD",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DND<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>name<\/p>\n<p>alignments<\/p>\n<p>backgrounds<\/p>\n<p>cities<\/p>\n<p>klasses<\/p>\n<p>languages<\/p>\n<p>meleeWeapons<\/p>\n<p>monsters<\/p>\n<p>races<\/p>\n<p>rangedWeapons<\/p>\n"
                            }]
                          },
                          "heroesofthestorm": {
                            "ownKey": "heroesofthestorm",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/heroesofthestorm",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/heroesofthestorm"
                              },
                              "description": "",
                              "title": "HeroesOfTheStorm",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HEROES_OF_THE_STORM<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>battlegrounds<\/p>\n<p>classNames<\/p>\n<p>heroes<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "worldofwarcraft": {
                            "ownKey": "worldofwarcraft",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/worldofwarcraft",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/worldofwarcraft"
                              },
                              "description": "",
                              "title": "WorldOfWarcraft",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>hero<\/p>\n<p>quotes<\/p>\n<p>classNames<\/p>\n<p>races<\/p>\n"
                            }]
                          },
                          "supersmashbros": {
                            "ownKey": "supersmashbros",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/supersmashbros",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/supersmashbros"
                              },
                              "description": "",
                              "title": "SuperSmashBros",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>fighter<\/p>\n<p>stage<\/p>\n"
                            }]
                          },
                          "finalfantasyxiv": {
                            "ownKey": "finalfantasyxiv",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/finalfantasyxiv",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/finalfantasyxiv"
                              },
                              "description": "",
                              "title": "FinalFantasyXIV",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>jobs<\/p>\n<p>races<\/p>\n<p>dataCenters<\/p>\n<p>zones<\/p>\n"
                            }]
                          },
                          "elderscrolls": {
                            "ownKey": "elderscrolls",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/elderscrolls",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/elderscrolls"
                              },
                              "description": "",
                              "title": "ElderScrolls",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>race<\/p>\n<p>creature<\/p>\n<p>region<\/p>\n<p>dragon<\/p>\n<p>city<\/p>\n<p>firstName<\/p>\n<p>lastName<\/p>\n<p>weapon<\/p>\n<p>jewelry<\/p>\n"
                            }]
                          },
                          "streetfighter": {
                            "ownKey": "streetfighter",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/streetfighter",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/streetfighter"
                              },
                              "description": "",
                              "title": "StreetFighter",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>stages<\/p>\n<p>quotes<\/p>\n<p>moves<\/p>\n"
                            }]
                          },
                          "pokemon": {
                            "ownKey": "pokemon",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/pokemon",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/pokemon"
                              },
                              "description": "",
                              "title": "Pokemon",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>names<\/p>\n<p>locations<\/p>\n<p>moves<\/p>\n"
                            }]
                          },
                          "leagueoflegends": {
                            "ownKey": "leagueoflegends",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/leagueoflegends",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/leagueoflegends"
                              },
                              "description": "",
                              "title": "LeagueOfLegends",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>champion<\/p>\n<p>location<\/p>\n<p>quote<\/p>\n<p>summonerSpell<\/p>\n<p>masteries<\/p>\n<p>rank<\/p>\n"
                            }]
                          },
                          "control": {
                            "ownKey": "control",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/control",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/control"
                              },
                              "description": "",
                              "title": "Control",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>character<\/p>\n<p>location<\/p>\n<p>objectOfPower<\/p>\n<p>alteredItem<\/p>\n<p>alteredWorldEvent<\/p>\n<p>hiss<\/p>\n<p>theBoard<\/p>\n<p>quote<\/p>\n"
                            }]
                          },
                          "sonicthehedgehog": {
                            "ownKey": "sonicthehedgehog",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/sonicthehedgehog",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/sonicthehedgehog"
                              },
                              "description": "",
                              "title": "SonicTheHedgehog",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>zone<\/p>\n<p>character<\/p>\n<p>game<\/p>\n"
                            }]
                          },
                          "touhou": {
                            "ownKey": "touhou",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/touhou",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/touhou"
                              },
                              "description": "",
                              "title": "Touhou",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>games<\/p>\n<p>characters<\/p>\n<p>spellCards<\/p>\n<p>locations<\/p>\n<p>songs<\/p>\n"
                            }]
                          },
                          "tarkov": {
                            "ownKey": "tarkov",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/tarkov",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/tarkov"
                              },
                              "description": "",
                              "title": "Tarkov",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.TARKOV<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>quests<\/p>\n<p>locations<\/p>\n<p>traders<\/p>\n<p>weapons<\/p>\n<p>items<\/p>\n<p>factions<\/p>\n<p>bosses<\/p>\n"
                            }]
                          },
                          "overwatch": {
                            "ownKey": "overwatch",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/overwatch",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/overwatch"
                              },
                              "description": "",
                              "title": "Overwatch",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>heroes<\/p>\n<p>locations<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "tarkovquests": {
                            "ownKey": "tarkovquests",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/tarkovquests",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/tarkovquests"
                              },
                              "description": "",
                              "title": "TarkovQuests",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>prapor<\/p>\n<p>therapist<\/p>\n<p>skier<\/p>\n<p>peacekeeper<\/p>\n<p>mechanic<\/p>\n<p>ragman<\/p>\n<p>jaeger<\/p>\n<p>fence<\/p>\n"
                            }]
                          },
                          "witcher": {
                            "ownKey": "witcher",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/witcher",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/witcher"
                              },
                              "description": "",
                              "title": "Witcher",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>witchers<\/p>\n<p>schools<\/p>\n<p>locations<\/p>\n<p>quotes<\/p>\n<p>monsters<\/p>\n<p>signs<\/p>\n<p>potions<\/p>\n<p>books<\/p>\n"
                            }]
                          },
                          "zelda": {
                            "ownKey": "zelda",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/zelda",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/zelda"
                              },
                              "description": "",
                              "title": "Zelda",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>games<\/p>\n<p>characters<\/p>\n<p>locations<\/p>\n<p>items<\/p>\n"
                            }]
                          },
                          "supermario": {
                            "ownKey": "supermario",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/supermario",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/supermario"
                              },
                              "description": "",
                              "title": "SuperMario",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>games<\/p>\n<p>locations<\/p>\n"
                            }]
                          },
                          "dndname": {
                            "ownKey": "dndname",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/dndname",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/dndname"
                              },
                              "description": "",
                              "title": "DndName",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DND<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>firstName<\/p>\n<p>lastName<\/p>\n<p>title<\/p>\n"
                            }]
                          },
                          "halflife": {
                            "ownKey": "halflife",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/halflife",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/halflife"
                              },
                              "description": "",
                              "title": "HalfLife",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>character<\/p>\n<p>enemy<\/p>\n<p>location<\/p>\n"
                            }]
                          },
                          "myst": {
                            "ownKey": "myst",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/myst",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/myst"
                              },
                              "description": "",
                              "title": "Myst",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>games<\/p>\n<p>creatures<\/p>\n<p>characters<\/p>\n<p>ages<\/p>\n<p>quotes<\/p>\n"
                            }]
                          },
                          "coin": {
                            "ownKey": "coin",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/games-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/games/provider/coin",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider/coin"
                              },
                              "description": "",
                              "title": "Coin",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.COIN<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>flip<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/games-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/games/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.games.provider",
                          "content": "<p>ClashOfClans<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nCoin\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.COIN<\/a> category.<\/p>\nControl\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nDnD\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DND<\/a> category.<\/p>\nDndName\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DND<\/a> category.<\/p>\nDota\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nElderScrolls\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nFallout\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nFinalFantasyXIV\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nGame\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAME<\/a> category.<\/p>\nHalfLife\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nHeroes\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HEROES<\/a> category.<\/p>\nHeroesOfTheStorm\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HEROES_OF_THE_STORM<\/a> category.<\/p>\nLeagueOfLegends\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nMinecraft\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nMyst\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nOverwatch\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nPokemon\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nSonicTheHedgehog\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nStreetFighter\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nSuperMario\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nSuperSmashBros\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nSuperhero\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SUPERHERO<\/a> category.<\/p>\nTarkov\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.TARKOV<\/a> category.<\/p>\nTarkovQuests\n<p>Touhou<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nWarhammerFantasy\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nWitcher\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nWorldOfWarcraft\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\nZelda\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.GAMES<\/a> category.<\/p>\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/games-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/games/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  GamesFaker <\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/games-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/games",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/games-data-provider/io/github/serpro69/kfaker/games"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.games",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  GamesFaker <\/p>\nGamesFaker\n<p>Provides access to fake data generators within the Games domain.<\/p><p>Each category (generator) from this  GamesFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\nio.github.serpro69.kfaker.games.provider\n<p>Faker<\/p>\n<p>Typealias for the  GamesFaker <\/p>\nfaker\n<p>Applies the  block  function to  GamesFaker.Builder \nand returns as an instance of  GamesFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "core-api": {
          "ownKey": "core-api",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {
                    "exception": {
                      "ownKey": "exception",
                      "childrenPages": {
                        "retrylimitexception": {
                          "ownKey": "retrylimitexception",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/exception/retrylimitexception",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/exception/retrylimitexception"
                            },
                            "description": "",
                            "title": "RetryLimitException",
                            "content": "<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n"
                          }]
                        },
                        "dictionarykeynotfoundexception": {
                          "ownKey": "dictionarykeynotfoundexception",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/exception/dictionarykeynotfoundexception",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/exception/dictionarykeynotfoundexception"
                            },
                            "description": "",
                            "title": "DictionaryKeyNotFoundException",
                            "content": "<p><init><\/p>\n<p><init><\/p>\n<p><init><\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc/core-api",
                          "baseUrl": "https://serpro69.github.io/kotlin-faker",
                          "fileName": "io/github/serpro69/kfaker/exception",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/exception"
                        },
                        "description": "",
                        "title": "io.github.serpro69.kfaker.exception",
                        "content": "<p>DictionaryKeyNotFoundException<\/p>\n<p>RetryLimitException<\/p>\n"
                      }]
                    },
                    "abstractfaker": {
                      "ownKey": "abstractfaker",
                      "childrenPages": {"builder": {
                        "ownKey": "builder",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-api",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/abstractfaker/builder",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/abstractfaker/builder"
                          },
                          "description": "",
                          "title": "Builder",
                          "content": "<p>DSL builder for creating instances of  AbstractFaker <\/p>config\n<p><init><\/p>\n<p>DSL builder for creating instances of  AbstractFaker <\/p>\nfakerConfig\n<p>Sets  config  configuration for this  AbstractFaker.Builder \nusing the results of the  block  function.<\/p><p>This  config  will then be used when an instance of  AbstractFaker  is created using this  AbstractFaker.Builder <\/p>\nbuild\n<p>Builds an instance of  AbstractFaker  with this  config .<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc/core-api",
                          "baseUrl": "https://serpro69.github.io/kotlin-faker",
                          "fileName": "io/github/serpro69/kfaker/abstractfaker",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/abstractfaker"
                        },
                        "description": "",
                        "title": "AbstractFaker",
                        "content": "<p>fakerService<\/p>\n<p>randomService<\/p>\n<p>unique<\/p>\n<p><init><\/p>\n"
                      }]
                    },
                    "extension": {
                      "ownKey": "extension",
                      "childrenPages": {"altkey": {
                        "ownKey": "altkey",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-api",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/extension/altkey",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/extension/altkey"
                          },
                          "description": "",
                          "title": "AltKey",
                          "content": ""
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc/core-api",
                          "baseUrl": "https://serpro69.github.io/kotlin-faker",
                          "fileName": "io/github/serpro69/kfaker/extension",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/extension"
                        },
                        "description": "",
                        "title": "io.github.serpro69.kfaker.extension",
                        "content": "<p>AltKey<\/p>\n<p>AltKey<\/p>\n"
                      }]
                    },
                    "irandom": {
                      "ownKey": "irandom",
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc/core-api",
                          "baseUrl": "https://serpro69.github.io/kotlin-faker",
                          "fileName": "io/github/serpro69/kfaker/irandom",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/irandom"
                        },
                        "description": "",
                        "title": "IRandom",
                        "content": "<p>Provides functionality similar to <a href=\"https://docs.oracle.com/javase/6/docs/api/java/util/Random.html\">Random<\/a><\/p>config\n<p>nextInt<\/p>\n<p>Returns the next pseudorandom, uniformly distributed Int value from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextInt\n<p>Returns a pseudorandom, uniformly distributed Int value between <code>0<\/code> (inclusive)\nand the specified  bound  (exclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextInt\n<p>Returns a pseudorandom, uniformly distributed Int value within the specified int <a href=\"#\">range<\/a> (inclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextInt\n<p>Returns a pseudorandom, uniformly distributed Int value between  min  (inclusive) and  max  (inclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nrandomValue\n<p>Returns a pseudo-randomly selected value from the  list  of values.<\/p>\nrandomValue\n<p>Returns a pseudo-randomly selected value from the  array  of values.<\/p>\nnextLetter\n<p>Returns the next pseudorandom, uniformly distributed Char value\nthat corresponds to a letter in the English alphabet.<\/p>\nrandomString\n<p>Returns String with the specified  length  consisting of a pseudo-randomly generated\nEnglish alphabet letters and optional  numericalChars ,\nor an empty string for a <code>length < 1<\/code>.<\/p>\nrandomString\n<p>Returns String with the specified  length  (or an empty string for a <code>length < 1<\/code>)\nconsisting of pseudo-randomly generated characters\nin a given  locale  with optional  auxiliaryChars  and  numericalChars <\/p>\nrandomString\n<p>Returns String with a randomLength withing the specified  min  and  max  boundaries\n(or an empty string for if <code>randomLength < 1<\/code>)\nconsisting of pseudo-randomly generated characters\nin a given  locale  with optional  auxiliaryChars  and  numericalChars <\/p>\nnextBoolean\n<p>Returns the next pseudorandom, uniformly distributed Boolean value\nfrom this random number generator's sequence.<\/p><p>The values <code>true<\/code> and <code>false<\/code> are produced with (approximately) equal probability.<\/p>\nnextLong\n<p>Returns the next pseudorandom, uniformly distributed Long value from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextLong\n<p>Returns a pseudorandom, uniformly distributed Long value between <code>0<\/code> (inclusive),\nand the specified  bound  value (exclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextLong\n<p>Returns a pseudorandom, uniformly distributed Long value within the specified  longRange  (inclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextLong\n<p>Returns a pseudorandom, uniformly distributed Long value between  min  (inclusive) and  max  (inclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextFloat\n<p>Returns the next pseudorandom, uniformly distributed Float value between <code>0.0<\/code> and <code>1.0<\/code>\nfrom this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextDouble\n<p>Returns the next pseudorandom, uniformly distributed Double value between <code>0.0<\/code> and <code>1.0<\/code>\nfrom this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextChar\n<p>Returns the next pseudorandom, uniformly distributed Char value,\nfrom this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextEnum\n<p>Returns a pseudo-randomly selected enum entry of type  E .<\/p>\nnextEnum\n<p>Returns a pseudo-randomly selected enum entry from an Array of  E  type  values .<\/p>\nnextEnum\n<p>Returns a pseudo-randomly selected  enum  class of type  E  based on  predicate  for  E .<\/p>\nnextUUID\n<p>Returns the next pseudorandom <a href=\"https://docs.oracle.com/javase/6/docs/api/java/util/UUID.html\">UUID<\/a> as String taking the seed of this <a href=\"#\">random<\/a>.<\/p>\nrandomSublist\n<p>Returns a view of the portion of the  list \nwith pseudo-randomly generated <code>fromIndex<\/code> and (possibly) <code>toIndex<\/code> values.<\/p>\nrandomSublist\n<p>Returns a view of the portion of the  list \nwith pseudo-randomly generated <code>fromIndex<\/code> and (possibly) <code>toIndex<\/code> values.<\/p>\nrandomSubset\n<p>Returns a portion of the  set \nwith pseudo-randomly generated <code>fromIndex<\/code> and (possibly) <code>toIndex<\/code> values.<\/p>\nrandomSubset\n<p>Returns a portion of the  set \nwith pseudo-randomly generated <code>fromIndex<\/code> and (possibly) <code>toIndex<\/code> values.<\/p>\nrandomPastDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween Unix epoch (1970-01-01T00:00:00Z) (inclusive) and now (exclusive) using UTC zone offset<\/p>\nrandomPastDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween  min  (inclusive) and now (exclusive) using UTC zone offset<\/p>\nrandomFutureDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween now (exclusive) and now + 50 years (inclusive) using UTC zone offset<\/p>\nrandomFutureDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween now (exclusive) and  max  (inclusive) using UTC zone offset<\/p>\nrandomDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween  min  (inclusive) and  max  (inclusive) using the defined  zoneOffset <\/p>\n"
                      }]
                    },
                    "fakerdsl": {
                      "ownKey": "fakerdsl",
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc/core-api",
                          "baseUrl": "https://serpro69.github.io/kotlin-faker",
                          "fileName": "io/github/serpro69/kfaker/fakerdsl",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/fakerdsl"
                        },
                        "description": "",
                        "title": "FakerDsl",
                        "content": "<p><init><\/p>\n"
                      }]
                    },
                    "configbuilder": {
                      "ownKey": "configbuilder",
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc/core-api",
                          "baseUrl": "https://serpro69.github.io/kotlin-faker",
                          "fileName": "io/github/serpro69/kfaker/configbuilder",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/configbuilder"
                        },
                        "description": "",
                        "title": "ConfigBuilder",
                        "content": "<p>Lambda with  FakerConfig.Builder  receiver type that returns a Unit.<\/p><p>Used with DSL functions to construct an instance of  FakerConfig \nby applying the results of the function to the  FakerConfig.Builder .<\/p>\n"
                      }]
                    },
                    "dictionary": {
                      "ownKey": "dictionary",
                      "childrenPages": {
                        "yamlcategory": {
                          "ownKey": "yamlcategory",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/dictionary/yamlcategory",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/dictionary/yamlcategory"
                            },
                            "description": "",
                            "title": "YamlCategory",
                            "content": "<p>This enum contains all default categories and matches with the names of the .yml files for 'en' locale.<\/p><p>If any new category is added to .yml file(s) a new class has to be added to this enum as well.<\/p>CUSTOM\n<p> YamlCategory  for custom yml-based data providers<\/p>\nSEPARATOR\n<p>CURRENCY_SYMBOL<\/p>\n<p>ADDRESS<\/p>\n<p>ADJECTIVE<\/p>\n<p>AIRPORT<\/p>\n<p>ANCIENT<\/p>\n<p>APP<\/p>\n<p>APPLIANCE<\/p>\n<p>AQUA_TEEN_HUNGER_FORCE<\/p>\n<p>ARCHER<\/p>\n<p>ARTIST<\/p>\n<p>AUSTRALIA<\/p>\n<p>AVATAR<\/p>\n<p>BACK_TO_THE_FUTURE<\/p>\n<p>BANK<\/p>\n<p>BARCODE<\/p>\n<p>BASKETBALL<\/p>\n<p>BEER<\/p>\n<p>BIBLE<\/p>\n<p>BIG_BANG_THEORY<\/p>\n<p>BLOOD<\/p>\n<p>BOJACK_HORSEMAN<\/p>\n<p>BOOK<\/p>\n<p>BOOKS<\/p>\n<p>BOSSA_NOVA<\/p>\n<p>BREAKING_BAD<\/p>\n<p>BROOKLYN_NINE_NINE<\/p>\n<p>BUFFY<\/p>\n<p>BUSINESS<\/p>\n<p>CAMERA<\/p>\n<p>CANNABIS<\/p>\n<p>CELL_PHONE<\/p>\n<p>CHESS<\/p>\n<p>CHIQUITO<\/p>\n<p>CHUCK_NORRIS<\/p>\n<p>CODE<\/p>\n<p>COFFEE<\/p>\n<p>COIN<\/p>\n<p>COLOR<\/p>\n<p>COMMERCE<\/p>\n<p>COMMUNITY<\/p>\n<p>COMPANY<\/p>\n<p>COMPASS<\/p>\n<p>COMPUTER<\/p>\n<p>CONAN<\/p>\n<p>CONSTRUCTION<\/p>\n<p>COSMERE<\/p>\n<p>COWBOY_BEBOP<\/p>\n<p>CREATURE<\/p>\n<p>CROSSFIT<\/p>\n<p>CRYPTO_COIN<\/p>\n<p>CULTURE_SERIES<\/p>\n<p>CURRENCY<\/p>\n<p>DATABASE<\/p>\n<p>DC_COMICS<\/p>\n<p>DEMOGRAPHIC<\/p>\n<p>DEPARTED<\/p>\n<p>DESSERT<\/p>\n<p>DEVICE<\/p>\n<p>DND<\/p>\n<p>DORAEMON<\/p>\n<p>GAMES<\/p>\n<p>DRAGON_BALL<\/p>\n<p>DRIVING_LICENSE<\/p>\n<p>DRONE<\/p>\n<p>DR_WHO<\/p>\n<p>DUMB_AND_DUMBER<\/p>\n<p>DUNE<\/p>\n<p>EDUCATOR<\/p>\n<p>ELECTRICAL_COMPONENTS<\/p>\n<p>EMOTION<\/p>\n<p>ESPORT<\/p>\n<p>FAMILY_GUY<\/p>\n<p>FILE<\/p>\n<p>FINAL_SPACE<\/p>\n<p>FINANCE<\/p>\n<p>FMA_BROTHERHOOD<\/p>\n<p>FOOD<\/p>\n<p>FOOTBALL<\/p>\n<p>FRIENDS<\/p>\n<p>FUNNY_NAME<\/p>\n<p>FUTURAMA<\/p>\n<p>GAME<\/p>\n<p>GAME_OF_THRONES<\/p>\n<p>GENDER<\/p>\n<p>GHOSTBUSTERS<\/p>\n<p>GRATEFUL_DEAD<\/p>\n<p>GREEK_PHILOSOPHERS<\/p>\n<p>HACKER<\/p>\n<p>HACKERS<\/p>\n<p>HARRY_POTTER<\/p>\n<p>HEROES<\/p>\n<p>HEROES_OF_THE_STORM<\/p>\n<p>HEY_ARNOLD<\/p>\n<p>HIPSTER<\/p>\n<p>HITCHHIKERS_GUIDE_TO_THE_GALAXY<\/p>\n<p>HOBBIT<\/p>\n<p>HOBBY<\/p>\n<p>HOUSE<\/p>\n<p>HOW_I_MET_YOUR_MOTHER<\/p>\n<p>HOW_TO_TRAIN_YOUR_DRAGON<\/p>\n<p>ID_NUMBER<\/p>\n<p>INDUSTRY_SEGMENTS<\/p>\n<p>INTERNET<\/p>\n<p>INVOICE<\/p>\n<p>JOB<\/p>\n<p>KAMEN_RIDER<\/p>\n<p>KPOP<\/p>\n<p>LEBOWSKI<\/p>\n<p>LORD_OF_THE_RINGS<\/p>\n<p>LOREM<\/p>\n<p>LOVECRAFT<\/p>\n<p>MARKDOWN<\/p>\n<p>MARKETING<\/p>\n<p>MEASUREMENT<\/p>\n<p>MICHAEL_SCOTT<\/p>\n<p>MILITARY<\/p>\n<p>MONEY<\/p>\n<p>MOUNTAIN<\/p>\n<p>MOUNTAINEERING<\/p>\n<p>MOVIE<\/p>\n<p>MUSIC<\/p>\n<p>NAME<\/p>\n<p>NARUTO<\/p>\n<p>NATION<\/p>\n<p>NATO_PHONETIC_ALPHABET<\/p>\n<p>NEW_GIRL<\/p>\n<p>ONE_PIECE<\/p>\n<p>OPERA<\/p>\n<p>PARKS_AND_REC<\/p>\n<p>PEARL_JAM<\/p>\n<p>PHISH<\/p>\n<p>PHONE_NUMBER<\/p>\n<p>PRINCE<\/p>\n<p>PRINCESS_BRIDE<\/p>\n<p>PROGRAMMING_LANGUAGE<\/p>\n<p>QUOTE<\/p>\n<p>RAJNIKANTH<\/p>\n<p>RELATIONSHIP<\/p>\n<p>RESTAURANT<\/p>\n<p>RICK_AND_MORTY<\/p>\n<p>ROCK_BAND<\/p>\n<p>RUPAUL<\/p>\n<p>RUSH<\/p>\n<p>SCIENCE<\/p>\n<p>SEINFELD<\/p>\n<p>SHAKESPEARE<\/p>\n<p>SHOW<\/p>\n<p>SILICON_VALLEY<\/p>\n<p>SIMPSONS<\/p>\n<p>SMASHING_PUMPKINS<\/p>\n<p>SLACK_EMOJI<\/p>\n<p>SOURCE<\/p>\n<p>SOUTH_PARK<\/p>\n<p>SPACE<\/p>\n<p>SPONGEBOB<\/p>\n<p>SPORT<\/p>\n<p>STARGATE<\/p>\n<p>STAR_TREK<\/p>\n<p>STAR_WARS<\/p>\n<p>STRANGER_THINGS<\/p>\n<p>STRIPE<\/p>\n<p>STUDIO_GHIBLI<\/p>\n<p>SUBSCRIPTION<\/p>\n<p>SUITS<\/p>\n<p>SUPERHERO<\/p>\n<p>SUPERNATURAL<\/p>\n<p>SWORD_ART_ONLINE<\/p>\n<p>TARKOV<\/p>\n<p>TEA<\/p>\n<p>TEAM<\/p>\n<p>THE_EXPANSE<\/p>\n<p>FRESH_PRINCE_OF_BEL_AIR<\/p>\n<p>THE_IT_CROWD<\/p>\n<p>THE_OFFICE<\/p>\n<p>THE_ROOM<\/p>\n<p>THE_THICK_OF_IT<\/p>\n<p>TOLKIEN<\/p>\n<p>TRAIN_STATION<\/p>\n<p>TRON<\/p>\n<p>TWIN_PEAKS<\/p>\n<p>UMPHREYS_MCGEE<\/p>\n<p>UNIVERSITY<\/p>\n<p>VEHICLE<\/p>\n<p>VENTURE_BROS<\/p>\n<p>VERBS<\/p>\n<p>VOLLEYBALL<\/p>\n<p>V_FOR_VENDETTA<\/p>\n<p>WORLD_CUP<\/p>\n<p>YODA<\/p>\n"
                          }]
                        },
                        "rawexpression": {
                          "ownKey": "rawexpression",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/dictionary/rawexpression",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/dictionary/rawexpression"
                            },
                            "description": "",
                            "title": "RawExpression",
                            "content": "<p>value<\/p>\n<p><init><\/p>\n"
                          }]
                        },
                        "category": {
                          "ownKey": "category",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/dictionary/category",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/dictionary/category"
                            },
                            "description": "",
                            "title": "Category",
                            "content": "<p>A generic data category of a given  name <\/p>name\n<p>the name of this data category<\/p>\nCategory\n<p>A generic data category of a given  name <\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc/core-api",
                          "baseUrl": "https://serpro69.github.io/kotlin-faker",
                          "fileName": "io/github/serpro69/kfaker/dictionary",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/dictionary"
                        },
                        "description": "",
                        "title": "io.github.serpro69.kfaker.dictionary",
                        "content": "<p>Category<\/p>\n<p>A generic data category of a given  name <\/p>\nRawExpression\n<p>YamlCategory<\/p>\n<p>This enum contains all default categories and matches with the names of the .yml files for 'en' locale.<\/p><p>If any new category is added to .yml file(s) a new class has to be added to this enum as well.<\/p>\n"
                      }]
                    },
                    "fakerservice": {
                      "ownKey": "fakerservice",
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc/core-api",
                          "baseUrl": "https://serpro69.github.io/kotlin-faker",
                          "fileName": "io/github/serpro69/kfaker/fakerservice",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/fakerservice"
                        },
                        "description": "",
                        "title": "FakerService",
                        "content": "<p>Internal class used for resolving yaml expressions into values.<\/p>numerify\n<p>Replaces every <code>#<\/code> char for this String receiver with a random int from 0 to 9 inclusive\nand returns the modified String.<\/p>\nletterify\n<p>Replaces every <code>?<\/code> char for this String receiver with a random letter from the English alphabet\nand returns the modified String.<\/p>\nregexify\n<p>Returns a random string generated from this String receiver pattern.<\/p>\nload\n<p>Reads values of the default 'en' locale files into this dictionary.<\/p><p>Additionally, <code>if (locale != null && locale.isValid)<\/code>, reads the contents of the specified locale file\ninto this dictionary (Will overwrite all matching keys with values from specified locale file.)<\/p>\ngetRawValue\n<p>getRawValue<\/p>\n<p>Returns raw value as  RawExpression  from a given  category  fetched by its  key <\/p>\ngetRawValue\n<p>Returns raw value as  RawExpression  from a given  category  fetched by its  key  and  secondaryKey <\/p>\ngetRawValue\n<p>Returns raw value as  RawExpression  for a given  category  fetched from the dictionary by its  key ,  secondaryKey , and  thirdKey .<\/p>\nresolve\n<p>Resolves  RawExpression  value of the  key  in this  category .<\/p>\nresolve\n<p>Resolves  RawExpression  value of the  key  and  secondaryKey  in this  category .<\/p>\nresolve\n<p>Resolves  RawExpression  value of the  key ,  secondaryKey , and  thirdKey  in this  category .<\/p>\nletterify\n<p>Replaces every <code>?<\/code> char for this String receiver with a random upper-case letter from the English alphabet\nand returns the modified String.<\/p>\n"
                      }]
                    },
                    "helper": {
                      "ownKey": "helper",
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc/core-api",
                          "baseUrl": "https://serpro69.github.io/kotlin-faker",
                          "fileName": "io/github/serpro69/kfaker/helper",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/helper"
                        },
                        "description": "",
                        "title": "io.github.serpro69.kfaker.helper",
                        "content": ""
                      }]
                    },
                    "provider": {
                      "ownKey": "provider",
                      "childrenPages": {
                        "address": {
                          "ownKey": "address",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/address",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/address"
                            },
                            "description": "",
                            "title": "Address",
                            "content": "<p> FakeDataProvider  implementation for  YamlCategory.ADDRESS  category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\ncityPrefix\n<p>citySuffix<\/p>\n<p>country<\/p>\n<p>countryByCode<\/p>\n<p>countryByName<\/p>\n<p>countryCode<\/p>\n<p>countryCodeLong<\/p>\n<p>buildingNumber<\/p>\n<p>communityPrefix<\/p>\n<p>communitySuffix<\/p>\n<p>community<\/p>\n<p>streetSuffix<\/p>\n<p>secondaryAddress<\/p>\n<p>postcode<\/p>\n<p>postcodeByState<\/p>\n<p>state<\/p>\n<p>stateAbbr<\/p>\n<p>timeZone<\/p>\n<p>city<\/p>\n<p>cityWithState<\/p>\n<p>streetName<\/p>\n<p>streetAddress<\/p>\n<p>fullAddress<\/p>\n<p>mailbox<\/p>\n<p>defaultCountry<\/p>\n"
                          }]
                        },
                        "color": {
                          "ownKey": "color",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/color",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/color"
                            },
                            "description": "",
                            "title": "Color",
                            "content": "<p> FakeDataProvider  implementation for  YamlCategory.COLOR  category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nname\n"
                          }]
                        },
                        "gender": {
                          "ownKey": "gender",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/gender",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/gender"
                            },
                            "description": "",
                            "title": "Gender",
                            "content": "<p> FakeDataProvider  implementation for  YamlCategory.GENDER  category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\ntypes\n<p>binaryTypes<\/p>\n<p>shortBinaryTypes<\/p>\n"
                          }]
                        },
                        "idnumber": {
                          "ownKey": "idnumber",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/idnumber",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/idnumber"
                            },
                            "description": "",
                            "title": "IdNumber",
                            "content": "<p> FakeDataProvider  implementation for  YamlCategory.ID_NUMBER  category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\ninvalid\n"
                          }]
                        },
                        "phonenumber": {
                          "ownKey": "phonenumber",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/phonenumber",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/phonenumber"
                            },
                            "description": "",
                            "title": "PhoneNumber",
                            "content": "<p> FakeDataProvider  implementation for  YamlCategory.PHONE_NUMBER  category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\ncellPhone\n<p>areaCode<\/p>\n<p>countryCode<\/p>\n<p>exchangeCode<\/p>\n<p>phoneNumber<\/p>\n<p>extension<\/p>\n<p>subscriberNumber<\/p>\n"
                          }]
                        },
                        "source": {
                          "ownKey": "source",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/source",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/source"
                            },
                            "description": "",
                            "title": "Source",
                            "content": "<p> FakeDataProvider  implementation for  YamlCategory.SOURCE  category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\n"
                          }]
                        },
                        "separator": {
                          "ownKey": "separator",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/separator",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/separator"
                            },
                            "description": "",
                            "title": "Separator",
                            "content": "<p> FakeDataProvider  implementation for  YamlCategory.ADDRESS  category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nseparator\n"
                          }]
                        },
                        "measurement": {
                          "ownKey": "measurement",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/measurement",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/measurement"
                            },
                            "description": "",
                            "title": "Measurement",
                            "content": "<p> FakeDataProvider  implementation for  YamlCategory.MEASUREMENT  category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nheight\n<p>length<\/p>\n<p>volume<\/p>\n<p>weight<\/p>\n<p>metricHeight<\/p>\n<p>metricLength<\/p>\n<p>metricVolume<\/p>\n<p>metricWeight<\/p>\n"
                          }]
                        },
                        "filemimetype": {
                          "ownKey": "filemimetype",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/filemimetype",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/filemimetype"
                            },
                            "description": "",
                            "title": "FileMimeType",
                            "content": "<p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\nfaker:\naddress:<\/p>\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\napplication\n<p>audio<\/p>\n<p>image<\/p>\n<p>message<\/p>\n<p>model<\/p>\n<p>multipart<\/p>\n<p>text<\/p>\n<p>video<\/p>\n"
                          }]
                        },
                        "currencysymbol": {
                          "ownKey": "currencysymbol",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/currencysymbol",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/currencysymbol"
                            },
                            "description": "",
                            "title": "CurrencySymbol",
                            "content": "<p> FakeDataProvider  implementation for  YamlCategory.CURRENCY_SYMBOL  category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nsymbol\n"
                          }]
                        },
                        "file": {
                          "ownKey": "file",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/file",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/file"
                            },
                            "description": "",
                            "title": "File",
                            "content": "<p> FakeDataProvider  implementation for  YamlCategory.FILE  category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nmimeType\n<p>extension<\/p>\n"
                          }]
                        },
                        "money": {
                          "ownKey": "money",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/money",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/money"
                            },
                            "description": "",
                            "title": "Money",
                            "content": "<p>category<\/p>\n<p>Category of <code>this<\/code> fake data provider class.<\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\namount\n"
                          }]
                        },
                        "person": {
                          "ownKey": "person",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/person",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/person"
                            },
                            "description": "",
                            "title": "Person",
                            "content": "<p> FakeDataProvider  implementation class for functionality not covered by the standard dictionary files.<\/p>birthDate\n<p>Returns a pseudo-random birthDate as LocalDate for the given  age  value.<\/p><p>If the  at  date parameter is not provided, then LocalDate.now is used\nto calculate the \"lower bound\" for the resulting birthDate.\nAssuming the  age  value of <code>30<\/code>, the resulting date will be in the range of:<\/p><pre><code>\nval start = LocalDate.now().minusYears(30)\nval end = LocalDate.now().minusYears(29).minusDays(1)\n<\/code><\/pre>\n"
                          }]
                        },
                        "unique": {
                          "ownKey": "unique",
                          "childrenPages": {
                            "uniquedataprovider": {
                              "ownKey": "uniquedataprovider",
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-api",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/unique/uniquedataprovider",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/unique/uniquedataprovider"
                                },
                                "description": "",
                                "title": "UniqueDataProvider",
                                "content": "<p><init><\/p>\n<p>disableAll<\/p>\n<p>Disables \"unique generation\" for all providers that were configured to return unique values.<\/p>\nclearAll\n<p>Clears the already returned (used) unique values so that they can again be returned.<\/p>\n"
                              }]
                            },
                            "uniqueproviderconfiguration": {
                              "ownKey": "uniqueproviderconfiguration",
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-api",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/unique/uniqueproviderconfiguration",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/unique/uniqueproviderconfiguration"
                                },
                                "description": "",
                                "title": "UniqueProviderConfiguration",
                                "content": "<p>Provides configuration for Unique Generation of values.<\/p>disable\n<p>Disables generation of unique values for  providerFunction  of  T  provider.<\/p>\ndisableAll\n<p>Disables unique generation of values for all providers,\nand clears all already used (returned) values and any exclusion patterns.<\/p>\nenable\n<p>Enable generation of unique values for  providerFunction  of  T  provider.<\/p>\nenable\n<p>Enable generation of unique values for  providerFunction  of  T  provider.<\/p>\nexcludeFromFunction\n<p>Exclude  values  from being generated with function  providerFunction  in provider  T .<\/p>\nexcludeFromFunction\n<p>Exclude  values  from being generated with function  funcName  in provider  T .<\/p>\nexcludeFromFunction\n<p>Exclude  values  from being generated with function  funcName  in provider  T .<\/p>\nexcludeFromFunction\n<p>Exclude a values from being generated by <a href=\"#\">Regex<\/a> patterns\nwhen a  providerFunction  in provider  T  is called<\/p>\nexcludeFromFunction\n<p>Exclude a values from being generated by <a href=\"#\">Regex<\/a> patterns\nwhen a  funcName  in provider  T  is called<\/p>\nexcludeFromFunction\n<p>Exclude a values from being generated by <a href=\"#\">Regex<\/a> patterns\nwhen a  funcName  in provider  T  is called<\/p>\nexcludeFromProvider\n<p>Exclude  values  from being generated with in provider  T .<\/p>\nexcludeFromProvider\n<p>Exclude  values  from being generated with in provider  T .<\/p>\nexcludeFromProvider\n<p>Exclude a values from being generated by <a href=\"#\">Regex<\/a> patterns in provider  T .<\/p>\nexclude\n<p>Exclude  values  from being generated.<\/p><p>This applies to ALL providers that are enabled for unique value generation.<\/p>\nexclude\n<p>Exclude a values from being generated by <a href=\"#\">Regex<\/a> patterns.<\/p><p>This applies to ALL providers that are enabled for unique value generation.<\/p>\n"
                              }]
                            },
                            "uniqueproviderdelegate": {
                              "ownKey": "uniqueproviderdelegate",
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-api",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/unique/uniqueproviderdelegate",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/unique/uniqueproviderdelegate"
                                },
                                "description": "",
                                "title": "UniqueProviderDelegate",
                                "content": "<p>Delegate class for  LocalUniqueDataProvider  used to return local providers that generate unique values.<\/p><init>\n<p>Delegate class for  LocalUniqueDataProvider  used to return local providers that generate unique values.<\/p>\ngetValue\n\n"
                              }]
                            },
                            "localuniquedataprovider": {
                              "ownKey": "localuniquedataprovider",
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-api",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/unique/localuniquedataprovider",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/unique/localuniquedataprovider"
                                },
                                "description": "",
                                "title": "LocalUniqueDataProvider",
                                "content": "<p>Local provider for unique values.<\/p><p>This provider is used in  T  implementation of  FakeDataProvider  class,\nand controls unique generation configuration of  T 's functions.<\/p><p>Example usage:<\/p><pre><code>\nFaker().address.unique().country()\n<\/code><\/pre><init>\n<p>Local provider for unique values.<\/p><p>This provider is used in  T  implementation of  FakeDataProvider  class,\nand controls unique generation configuration of  T 's functions.<\/p><p>Example usage:<\/p><pre><code>\nFaker().address.unique().country()\n<\/code><\/pre>\ndisableAll\n<p>In <code>this<\/code> class the function works the same as  clearAll  implementation.<\/p>\nclearAll\n<p>Clears the already returned (used) unique values so that they can again be returned.<\/p>\nclear\n<p>Clears the already returned (used) unique values for the function with provided  name .<\/p><p>Example usage:<\/p><pre><code>\naddress.unique.clear(\"country\") // clear (reset) unique values for 'country' function\n<\/code><\/pre>\n"
                              }]
                            },
                            "globaluniquedataprovider": {
                              "ownKey": "globaluniquedataprovider",
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-api",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/unique/globaluniquedataprovider",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/unique/globaluniquedataprovider"
                                },
                                "description": "",
                                "title": "GlobalUniqueDataProvider",
                                "content": "<p>Global provider for unique values.<\/p><p>This provider is used in  AbstractFaker  class implementations to control global unique generation configuration of faker providers.<\/p><p>Example usage:<\/p><pre><code>\nval faker = Faker()\nfaker.unique.configuration {\n    enable(faker::address) // enables unique generation for all functions of Address provider\n    enable(faker::name) // enables unique generation for all functions of Name provider\n    exclude(listOfValues) // exclude values from `listOfValue` collection from being generated (for all providers that are enabled for unique generation)\n    enable(faker::internet) { enables unique generation for all functions of Internet provider\n        exclude<Internet>(listOfValues) // exclude values from `listOfValue` collection from being generated with Internet provider\n        exclude(faker::internet, listOfPatterns)\n    }\n}\n<\/code><\/pre>disableAll\n<p>Disables \"unique generation\" for all providers that were configured to return unique values,\nand clears out any already returned values, so they can possibly be returned again.<\/p>\nclearAll\n<p>Clears the already returned (used) unique values and exclusion patterns so that values can again be returned.<\/p>\nclear\n<p>configuration<\/p>\n<p>Configures <code>this<\/code> Unique provider.<\/p>\n"
                              }]
                            }
                          },
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/unique",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/unique"
                            },
                            "description": "",
                            "title": "io.github.serpro69.kfaker.provider.unique",
                            "content": "<p>GlobalUniqueDataProvider\n<p>Global provider for unique values.<\/p><p>This provider is used in  AbstractFaker  class implementations to control global unique generation configuration of faker providers.<\/p><p>Example usage:<\/p><pre><code>\nval faker = Faker()\nfaker.unique.configuration {\nenable(faker::address) // enables unique generation for all functions of Address provider\nenable(faker::name) // enables unique generation for all functions of Name provider\nexclude(listOfValues) // exclude values from <code>listOfValue<\/code> collection from being generated (for all providers that are enabled for unique generation)\nenable(faker::internet) { enables unique generation for all functions of Internet provider\nexclude<Internet>(listOfValues) // exclude values from <code>listOfValue<\/code> collection from being generated with Internet provider\nexclude(faker::internet, listOfPatterns)\n}\n}<\/p>\n<\/code><\/pre>\nLocalUniqueDataProvider\n<p>Local provider for unique values.<\/p><p>This provider is used in  T  implementation of  FakeDataProvider  class,\nand controls unique generation configuration of  T 's functions.<\/p><p>Example usage:<\/p><pre><code>\nFaker().address.unique().country()\n<\/code><\/pre>\nUniqueProviderDelegate\n<p>Delegate class for  LocalUniqueDataProvider  used to return local providers that generate unique values.<\/p>\nUniqueDataProvider\n<p>UniqueProviderConfiguration<\/p>\n<p>Provides configuration for Unique Generation of values.<\/p>\n"
                          }]
                        },
                        "abstractfakedataprovider": {
                          "ownKey": "abstractfakedataprovider",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/abstractfakedataprovider",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/abstractfakedataprovider"
                            },
                            "description": "",
                            "title": "AbstractFakeDataProvider",
                            "content": "<p>Abstract class for all concrete  FakeDataProvider 's that do not use yml files as data source.<\/p>category\n<p>Category of <code>this<\/code> fake data provider class.<\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nfakerService\n<p>clear<\/p>\n<p>Clears used unique values for the function  name  of this provider.<\/p>\nclearAll\n<p>Clears all used unique values of this provider.<\/p>\nresolveUniqueValue\n<p>resolveUniqueValue<\/p>\n<p>resolveUniqueValue<\/p>\n<p>resolveUniqueValue<\/p>\n"
                          }]
                        },
                        "yamlfakedataprovider": {
                          "ownKey": "yamlfakedataprovider",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/yamlfakedataprovider",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/yamlfakedataprovider"
                            },
                            "description": "",
                            "title": "YamlFakeDataProvider",
                            "content": "<p>Abstract class for all concrete  FakeDataProvider 's that use yml files as data source.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nsecondaryCategory\n<p>Secondary category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the  yamlCategory  key in <code>.yml<\/code> locale file.<\/p><p>For example <code>dog.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    creature:\n      dog:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.CREATURE , and the  secondary  Category.name  would be <code>\"dog\"<\/code><\/p><p><i>TIP: Use  Category.ofName  helper function when needed.<\/i><\/p><p><i>NB! If the  secondaryCategory  is set,the dictionary filename should match the  Category.name  of this  secondaryCategory ,i.e. the file name should be <code>dog.yml<\/code> for the <code>[Category.ofName]<\/code> dog.<\/i><\/p>\ncategory\n<p>Category of <code>this<\/code> fake data provider class.<\/p>\n<init>\n<p>Abstract class for all concrete  FakeDataProvider 's that use yml files as data source.<\/p>\nresolve\n<p>Returns resolved (unique) value for the parameter with the specified  key .<\/p><p>Will return a unique value if the call to the function is prefixed with <code>unique<\/code> property. Example:<\/p><pre><code>\nfaker.address.unique.city() => will return a unique value for the `city` parameter\n<\/code><\/pre>\nresolve\n<p>Returns resolved (unique) value for the parameter with the specified pair of  keys ,\nwhere <code>first<\/code> is the \"altKey\" and <code>second<\/code> is the \"primaryKey\".<\/p><p>This function can be used to resolve locale-specific keys that are not present in the default 'en' dictionaries.<\/p><p>An example usage (taken from  Address.countryCode ) looks something like this:<\/p><pre><code>\nfun countryCode() = resolve(\"default_country_code\" or \"country_code\")\n<\/code><\/pre><p>Here, the <code>\"default_country_code\"<\/code> is the key that is only present in the localized dictionaries,\nwhich may or may not be present in the default 'en' dictionary,\nand <code>\"country_code\"<\/code> is the default key for this function which is defined in <code>en/address.yml<\/code> dict file.<\/p><p>Will attempt to return a unique value if the call to the function is prefixed with <code>unique<\/code> property. Example:<\/p><pre><code>\nfaker.address.unique.countryCode() => will return a unique value for the `country_code` parameter.\n<\/code><\/pre>\nresolve\n<p>Returns resolved (unique) value for the parameter with the specified  primaryKey  and  secondaryKey .<\/p><p>TIP: Can be useful for providers that override this  secondaryCategory \nto use a compile-safe object instead of a string for the  primaryKey .<\/p><p>Example:<\/p><pre class=\"language-diff\"><code class=\"language-diff\">\nclass Minecraft internal constructor(fakerService: FakerService) : YamlFakeDataProvider<Minecraft>(fakerService) {\n  override val yamlCategory = YamlCategory.GAMES\n  override val secondaryCategory: Category = Category.ofName(\"MINECRAFT\")\n  override val localUniqueDataProvider = LocalUniqueDataProvider<Minecraft>()\n  override val unique by UniqueProviderDelegate(localUniqueDataProvider, fakerService)\n\n  fun achievement() = resolve(\"minecraft\", \"achievement\")\n  fun biome() = resolve(secondaryCategory, \"biome\")\n}\n<\/code><\/pre><p>Will return a unique value if the call to the function is prefixed with <code>unique<\/code> property.\nExample:<\/p><pre><code>\nfaker.address.unique.countryByCode(countryCode) => will return a unique value for the `city` parameter\n<\/code><\/pre>\nresolve\n<p>Returns resolved (unique) value for the parameter with the specified  primaryKey  and  secondaryKey .<\/p><p>Will return a unique value if the call to the function is prefixed with <code>unique<\/code> property.\nExample:<\/p><pre><code>\nfaker.address.unique.countryByCode(countryCode) => will return a unique value for the `city` parameter\n<\/code><\/pre>\nresolve\n<p>Returns resolved (unique) value for the parameter with the specified  primaryKey ,  secondaryKey  and  thirdKey <\/p><p>Will return a unique value if the call to the function is prefixed with <code>unique<\/code> property.\nExample:<\/p><pre><code>\nfaker.educator.tertiaryDegree(type) => will return a unique value for the `tertiaryDegree` parameter\n<\/code><\/pre>\nresolve\n<p>Returns resolved (unique) value for the parameter with the specified  primaryKey ,  secondaryKey  and  thirdKey <\/p><p>Will return a unique value if the call to the function is prefixed with <code>unique<\/code> property.\nExample:<\/p><pre><code>\nfaker.educator.tertiaryDegree(type) => will return a unique value for the `tertiaryDegree` parameter\n<\/code><\/pre>\n"
                          }]
                        },
                        "name": {
                          "ownKey": "name",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/name",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/name"
                            },
                            "description": "",
                            "title": "Name",
                            "content": "<p> FakeDataProvider  implementation for  YamlCategory.NAME  category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nmaleFirstName\n<p>femaleFirstName<\/p>\n<p>neutralFirstName<\/p>\n<p>firstName<\/p>\n<p>lastName<\/p>\n<p>name<\/p>\n<p>nameWithMiddle<\/p>\n"
                          }]
                        },
                        "cellphone": {
                          "ownKey": "cellphone",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/cellphone",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/cellphone"
                            },
                            "description": "",
                            "title": "CellPhone",
                            "content": "<p> FakeDataProvider  implementation for  YamlCategory.CELL_PHONE  category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nnumber\n"
                          }]
                        },
                        "currency": {
                          "ownKey": "currency",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/currency",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/currency"
                            },
                            "description": "",
                            "title": "Currency",
                            "content": "<p> FakeDataProvider  implementation for  YamlCategory.CURRENCY  category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\ncode\n<p>name<\/p>\n<p>symbol<\/p>\n"
                          }]
                        },
                        "fakedataprovider": {
                          "ownKey": "fakedataprovider",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/fakedataprovider",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/fakedataprovider"
                            },
                            "description": "",
                            "title": "FakeDataProvider",
                            "content": "<p>Interface for all fake data providers.<\/p><p>Represents a single, standalone provider (generator) of fake data.<\/p>\n"
                          }]
                        },
                        "internet": {
                          "ownKey": "internet",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/internet",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/internet"
                            },
                            "description": "",
                            "title": "Internet",
                            "content": "<p> FakeDataProvider  implementation for  YamlCategory.INTERNET  category.<\/p>yamlCategory\n<p>Category for <code>this<\/code> fake yaml data provider class.<\/p><p>This is the key entry after the <code>faker<\/code> key in <code>.yml<\/code> locale file.<\/p><p>For example <code>address.yml<\/code> file has the following structure:<\/p><pre><code>\nen:\n  faker:\n    address:\n<\/code><\/pre><p>then the  yamlCategory  would be  YamlCategory.ADDRESS <\/p><p><i>NB! If the  secondaryCategory  is NOT set,the dictionary filename should match the  yamlCategory  name,i.e. the file name should be <code>address.yml<\/code> for the  YamlCategory.ADDRESS .<\/i><\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\ndomain\n<p>iPv4Address<\/p>\n<p>Returns a random IPv4 address<\/p>\nprivateIPv4Address\n<p>Returns a random private IPv4 address<\/p>\npublicIPv4Address\n<p>Returns a random public IPv4 address<\/p>\niPv6Address\n<p>Returns a random IPv6 address<\/p><p>Example:<\/p><pre><code>\nFaker().internet.iPv6Address() // => 176f:cfec:c73b:e0cb:534d:4b3e:db4e:3b53\n<\/code><\/pre>\nmacAddress\n<p>Returns a random mac-address with an optional  prefix <\/p><p>Examples:<\/p><pre><code>\nFaker().internet.macAddress() // => 17:12:d9:fc:fe:f6\nFaker().internet.macAddress(\"a\") // => 0a:11:ed:7c:b5:af\nFaker().internet.macAddress(\"aa\") // => aa:ec:eb:54:b9:f5\nFaker().internet.macAddress(\"aa:ce\") // => aa:ce:e3:e1:83:c4\n\n<\/code><\/pre>\nemail\n<p>safeEmail<\/p>\n<p>slug<\/p>\n<p>domainSuffix<\/p>\n<p>safeDomainSuffix<\/p>\n<p>userAgent<\/p>\n<p>botUserAgent<\/p>\n"
                          }]
                        },
                        "misc": {
                          "ownKey": "misc",
                          "childrenPages": {
                            "constructorfilterstrategy": {
                              "ownKey": "constructorfilterstrategy",
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-api",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/misc/constructorfilterstrategy",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/misc/constructorfilterstrategy"
                                },
                                "description": "",
                                "title": "ConstructorFilterStrategy",
                                "content": "<p>NO_ARGS<\/p>\n<p>MIN_NUM_OF_ARGS<\/p>\n<p>MAX_NUM_OF_ARGS<\/p>\n"
                              }]
                            },
                            "randomclassprovider": {
                              "ownKey": "randomclassprovider",
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-api",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/misc/randomclassprovider",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/misc/randomclassprovider"
                                },
                                "description": "",
                                "title": "RandomClassProvider",
                                "content": "<p>Provider functionality for generating random class instances.<\/p><p>Inspired by <a href=\"https://blog.kotlin-academy.com/creating-a-random-instance-of-any-class-in-kotlin-b6168655b64a\">Creating a random instance of any class in Kotlin blog post<\/a>.<\/p>configure\n<p>Applies  configurator  to this  RandomClassProvider .<\/p>\nnew\n<p>Creates a new instance of this  RandomClassProvider .<\/p><p>IF FakerConfig.randomProviderConfig was configured\nTHEN new instance will be created with a copy of that configuration,\nELSE a new instance is created with a new instance of default configuration as defined in  RandomProviderConfig .<\/p>\ncopy\n<p>Creates a copy of this  RandomClassProvider  instance with a copy of its config.<\/p>\nreset\n<p>Resets config to defaults for this  RandomClassProvider  instance.<\/p>\nrandomClassInstance\n<p>Creates an instance of  T . If  T  has a parameterless public/internal constructor then it will be used to create an instance of this class,\notherwise a constructor with minimal number of parameters will be used with randomly-generated values.<\/p>\nrandomClassInstance\n<p>Creates an instance of  T . If  T  has a parameterless public/internal constructor then it will be used to create an instance of this class,\notherwise a constructor with minimal number of parameters will be used with randomly-generated values.<\/p>\nrandomClassInstance\n<p>Creates an instance of  T  from the KClass input.\nIf  T  has a parameterless public/internal constructor then it will be used to create an instance of this class,\notherwise a constructor with minimal number of parameters will be used with randomly-generated values.<\/p>\nrandomClassInstance\n<p>Creates an instance of  T  from the KClass input.\nIf  T  has a parameterless public/internal constructor then it will be used to create an instance of this class,\notherwise a constructor with minimal number of parameters will be used with randomly-generated values.<\/p>\n"
                              }]
                            },
                            "cryptographyprovider": {
                              "ownKey": "cryptographyprovider",
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-api",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/misc/cryptographyprovider",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/misc/cryptographyprovider"
                                },
                                "description": "",
                                "title": "CryptographyProvider",
                                "content": "<p>Provides functions for generating random hash sum strings.<\/p>category\n<p>Category of <code>this<\/code> fake data provider class.<\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nmd5\n<p>Generates and returns a pseudo-randomly generated md5 hash value, 32 digits long.<\/p>\nsha1\n<p>Generates and returns a pseudo-randomly generated sha-1 hash value, 40 digits long.<\/p>\nsha224\n<p>Generates and returns a pseudo-randomly generated sha-224 hash value, 56 digits long.<\/p>\nsha256\n<p>Generates and returns a pseudo-randomly generated sha-256 hash value, 64 digits long.<\/p>\nsha384\n<p>Generates and returns a pseudo-randomly generated sha-384 hash value, 96 digits long.<\/p>\nsha512\n<p>Generates and returns a pseudo-randomly generated sha-512 hash value, 128 digits long.<\/p>\n"
                              }]
                            },
                            "stringprovider": {
                              "ownKey": "stringprovider",
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-api",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/misc/stringprovider",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/misc/stringprovider"
                                },
                                "description": "",
                                "title": "StringProvider",
                                "content": "<p>Provides functions for generating values from string expressions.<\/p>category\n<p>Category of <code>this<\/code> fake data provider class.<\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nnumerify\n<p>Replaces every <code>#<\/code> char for this  template  string with a random int from 0 to 9 inclusive,\nand returns the modified String.<\/p>\nletterify\n<p>Replaces every <code>?<\/code> char for this  template  string with a random letter from the English alphabet,\nand returns the modified String.<\/p>\nbothify\n<p>Combines applies both  numerify  and  letterify  functions to the  template  string,\nand returns the modified String.<\/p>\nregexify\n<p>Returns a string of generated values based on the regex expressions in the  template  input,\nfor example <code>regexify(\"\"\"\\d{3}\"\"\")<\/code> will return a string consisting of 3 random digits.<\/p><p><i>Refer to <a href=\"https://github.com/curious-odd-man/RgxGen?tab=readme-ov-file#supported-syntax\">RgxGen's Supported Syntax<\/a>documentation for details on what regex syntax is supported.<\/i><\/p>\nregexify\n<p>Returns a string of generated values based on the  regex ,\nfor example <code>regexify(Regex(\"\"\"\\d{3}\"\"\"))<\/code> will return a string consisting of 3 random digits.<\/p><p><i>Refer to <a href=\"https://github.com/curious-odd-man/RgxGen?tab=readme-ov-file#supported-syntax\">RgxGen's Supported Syntax<\/a>documentation for details on what regex syntax is supported.<\/i><\/p>\n"
                              }]
                            },
                            "fallbackstrategy": {
                              "ownKey": "fallbackstrategy",
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-api",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/misc/fallbackstrategy",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/misc/fallbackstrategy"
                                },
                                "description": "",
                                "title": "FallbackStrategy",
                                "content": "<p>USE_MIN_NUM_OF_ARGS<\/p>\n<p>USE_MAX_NUM_OF_ARGS<\/p>\n<p>FAIL_IF_NOT_FOUND<\/p>\n"
                              }]
                            },
                            "randomprovider": {
                              "ownKey": "randomprovider",
                              "childrenPages": {"key": {
                                "ownKey": "key",
                                "ownPages": [{
                                  "reference": {
                                    "path": "kotlindoc/core-api",
                                    "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                    "fileName": "io/github/serpro69/kfaker/provider/misc/randomprovider/key",
                                    "extension": "html",
                                    "usePrettyUrl": true,
                                    "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/misc/randomprovider/key"
                                  },
                                  "description": "",
                                  "title": "Key",
                                  "content": "<p>Keys for  unique  data provider to simplify resetting unique values via  RandomProvider.clear  function.<\/p>NEXT_INT\n<p>Key for  nextInt  function<\/p>\nRANDOM_VALUE\n<p>Key for  randomValue  function<\/p>\nNEXT_LETTER\n<p>Key for  nextLetter  function<\/p>\nRANDOM_STRING\n<p>Key for  randomString  function<\/p>\nNEXT_LONG\n<p>Key for  nextLong  function<\/p>\nNEXT_FLOAT\n<p>Key for  nextFloat  function<\/p>\nNEXT_DOUBLE\n<p>Key for  nextDouble  function<\/p>\nNEXT_CHAR\n<p>Key for  nextChar  function<\/p>\nNEXT_ENUM\n<p>Key for  nextEnum  function<\/p>\nNEXT_UUID\n<p>Key for  nextUUID  function<\/p>\nRANDOM_SUBLIST\n<p>Key for  randomSublist  function<\/p>\nRANDOM_SUBSET\n<p>Key for  randomSubset  function<\/p>\nRANDOM_DATE\n<p>Key for  randomDate  function<\/p>\n"
                                }]
                              }},
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-api",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/misc/randomprovider",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/misc/randomprovider"
                                },
                                "description": "",
                                "title": "RandomProvider",
                                "content": "<p>Provides data-generator-like functionality for the functions of  RandomService .<\/p>category\n<p>Category of <code>this<\/code> fake data provider class.<\/p>\nlocalUniqueDataProvider\n<p>A  LocalUniqueDataProvider  instance that is used with this  unique  provider.<\/p>\nunique\n<p>An instance of  T  for generating unique values<\/p>\nconfig\n<p>clear<\/p>\n<p>Clears used unique values for the function  key  of this provider.<\/p>\nnextInt\n<p>Returns the next pseudorandom, uniformly distributed Int value from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextInt\n<p>Returns a pseudorandom, uniformly distributed Int value between <code>0<\/code> (inclusive)\nand the specified  bound  (exclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextInt\n<p>Returns a pseudorandom, uniformly distributed Int value within the specified int <a href=\"#\">range<\/a> (inclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextInt\n<p>Returns a pseudorandom, uniformly distributed Int value between  min  (inclusive) and  max  (inclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nrandomValue\n<p>Returns a pseudo-randomly selected value from the  list  of values.<\/p>\nrandomValue\n<p>Returns a pseudo-randomly selected value from the  array  of values.<\/p>\nnextLetter\n<p>Returns the next pseudorandom, uniformly distributed Char value\nthat corresponds to a letter in the English alphabet.<\/p>\nrandomString\n<p>Returns String with the specified  length  consisting of a pseudo-randomly generated\nEnglish alphabet letters and optional  numericalChars ,\nor an empty string for a <code>length < 1<\/code>.<\/p>\nrandomString\n<p>Returns String with the specified  length  (or an empty string for a <code>length < 1<\/code>)\nconsisting of pseudo-randomly generated characters\nin a given  locale  with optional  auxiliaryChars  and  numericalChars <\/p>\nrandomString\n<p>Returns String with a randomLength withing the specified  min  and  max  boundaries\n(or an empty string for if <code>randomLength < 1<\/code>)\nconsisting of pseudo-randomly generated characters\nin a given  locale  with optional  auxiliaryChars  and  numericalChars <\/p>\nnextBoolean\n<p>Returns the next pseudorandom, uniformly distributed Boolean value\nfrom this random number generator's sequence.<\/p><p>The values <code>true<\/code> and <code>false<\/code> are produced with (approximately) equal probability.<\/p><p><i>NB! this method does not try to produce \"unique\" values via  unique  data provider.<\/i><\/p>\nnextLong\n<p>Returns the next pseudorandom, uniformly distributed Long value from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextLong\n<p>Returns a pseudorandom, uniformly distributed Long value between <code>0<\/code> (inclusive),\nand the specified  bound  value (exclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextLong\n<p>Returns a pseudorandom, uniformly distributed Long value within the specified  longRange  (inclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextLong\n<p>Returns a pseudorandom, uniformly distributed Long value between  min  (inclusive) and  max  (inclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextFloat\n<p>Returns the next pseudorandom, uniformly distributed Float value between <code>0.0<\/code> and <code>1.0<\/code>\nfrom this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextDouble\n<p>Returns the next pseudorandom, uniformly distributed Double value between <code>0.0<\/code> and <code>1.0<\/code>\nfrom this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextChar\n<p>Returns the next pseudorandom, uniformly distributed Char value,\nfrom this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextEnum\n<p>Returns a randomly selected enum entry of type  E .<\/p><p><i>NB! when used with  unique , the  nextInt , which is used to get a random index of the enumValues of  E will also use unique generation and will need to be reset via  clear  as well when needed.<\/i><\/p>\nnextEnum\n<p>Returns a pseudo-randomly selected enum entry of type  E .<\/p>\nnextEnum\n<p>Returns a pseudo-randomly selected enum entry from an Array of  E  type  values .<\/p>\nnextEnum\n<p>Returns a pseudo-randomly selected  enum  class of type  E  based on  predicate  for  E .<\/p>\nnextEnum\n<p>Returns a randomly selected enum entry of type  E  excluding a particular enum class by its name.<\/p><p><i>NB! when used with  unique , the  nextInt , which is used to get a random index of the enumValues of  E will also use unique generation and will need to be reset via  clear  as well when needed.<\/i><\/p>\nnextUUID\n<p>Returns the next pseudorandom <a href=\"https://docs.oracle.com/javase/6/docs/api/java/util/UUID.html\">UUID<\/a> as String taking the seed of this <a href=\"#\">random<\/a>.<\/p>\nrandomSublist\n<p>Returns a view of the portion of the  list \nwith pseudo-randomly generated <code>fromIndex<\/code> and (possibly) <code>toIndex<\/code> values.<\/p>\nrandomSublist\n<p>Returns a view of the portion of the  list \nwith pseudo-randomly generated <code>fromIndex<\/code> and (possibly) <code>toIndex<\/code> values.<\/p>\nrandomSubset\n<p>Returns a portion of the  set \nwith pseudo-randomly generated <code>fromIndex<\/code> and (possibly) <code>toIndex<\/code> values.<\/p>\nrandomSubset\n<p>Returns a portion of the  set \nwith pseudo-randomly generated <code>fromIndex<\/code> and (possibly) <code>toIndex<\/code> values.<\/p>\nrandomPastDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween Unix epoch (1970-01-01T00:00:00Z) (inclusive) and now (exclusive) using UTC zone offset<\/p>\nrandomPastDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween  min  (inclusive) and now (exclusive) using UTC zone offset<\/p>\nrandomFutureDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween now (exclusive) and now + 50 years (inclusive) using UTC zone offset<\/p>\nrandomFutureDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween now (exclusive) and  max  (inclusive) using UTC zone offset<\/p>\nrandomDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween  min  (inclusive) and  max  (inclusive) using the defined  zoneOffset <\/p>\n"
                              }]
                            },
                            "randomproviderconfig": {
                              "ownKey": "randomproviderconfig",
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-api",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/misc/randomproviderconfig",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/misc/randomproviderconfig"
                                },
                                "description": "",
                                "title": "RandomProviderConfig",
                                "content": "<p>Configuration for  RandomClassProvider.randomClassInstance .<\/p>collectionsSize\n<p>the size of the generated Collection type arguments.\nDefaults to <code>1<\/code>.<\/p>\nconstructorParamSize\n<p>will try to look up the constructor with specified number of arguments,\nand use that to create the instance of the class.\nDefaults to <code>-1<\/code>, which ignores this configuration property.\nThis takes precedence over  constructorFilterStrategy  configuration.<\/p>\nconstructorFilterStrategy\n<p>default strategy for looking up a constructor\nthat is used to create the instance of a class.\nBy default, a zero-args constructor will be used.<\/p>\nfallbackStrategy\n<p>fallback strategy that is used to look up a constructor\nif no constructor with  constructorParamSize  or  constructorFilterStrategy  was found.<\/p>\ndefaultValuesStrategy\n<p>strategy for choosing how to handle default constructor parameters' values.\nBy default, generates random values for all constructor parameters.<\/p>\nnamedParameterGenerator\n<p>Configures generation for a specific named constructor parameter.\nOverrides all other generators.<\/p>\ntypeGenerator\n<p>Configures generation for a specific type of constructor parameter.\nIt can override internal generators (for primitives, for example)<\/p>\nnullableTypeGenerator\n<p>Configures generation for a specific nullable type of constructor parameter.\nIt can override internal generators (for primitives, for example)<\/p>\ncollectionElementTypeGenerator\n<p>Configures generation of elements of constructor parameters of Collection types.<\/p>\nmapEntryKeyTypeGenerator\n<p>Configures generation of non-null keys of constructor parameters of Map types.<\/p>\nmapEntryValueTypeGenerator\n<p>Configures generation of values of constructor parameters of Map types.<\/p>\n"
                              }]
                            },
                            "parameterinfo": {
                              "ownKey": "parameterinfo",
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-api",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/misc/parameterinfo",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/misc/parameterinfo"
                                },
                                "description": "",
                                "title": "ParameterInfo",
                                "content": "<p>Provides additional information about Class parameter to custom defined generators.\nThe reason why KParameter is not used is that you will want to provide\nadditional information about parameter that is not available in KParameter class.<\/p>index\n<p>0-based index of this parameter in the parameter list of its containing callable.<\/p>\nname\n<p>Name of this parameter as it was declared in the source code,\nor <code>null<\/code> if the parameter has no name or its name is not available at runtime.\nExamples of nameless parameters include <code>this<\/code> instance for member functions,\nextension receiver for extension functions or properties, parameters of Java methods\ncompiled without the debug information, and others.<\/p>\nisOptional\n<p><code>true<\/code> if this parameter is optional and can be omitted when making a call via KCallable.callBy, or <code>false<\/code> otherwise.<\/p><p>A parameter is optional in any of the two cases:<\/p><ol><li>The default value is provided at the declaration of this parameter.<\/li><li>The parameter is declared in a member function and one of the corresponding parameters in the super functions is optional.<\/li><\/ol>\nisVararg\n<p><code>true<\/code> if this parameter is <code>vararg<\/code>.\nSee the <a href=\"https://kotlinlang.org/docs/reference/functions.html#variable-number-of-arguments-varargs\">Kotlin language documentation<\/a>\nfor more information.<\/p>\ntype\n<p>Type of this parameter. For a <code>vararg<\/code> parameter, this is the type of the corresponding array,\nnot the individual element.<\/p>\nkind\n<p>Kind of this parameter.\nKind represents a particular position of the parameter declaration in the source code,\nsuch as an instance, an extension receiver parameter or a value parameter.<\/p>\n<init>\n<p>Provides additional information about Class parameter to custom defined generators.\nThe reason why KParameter is not used is that you will want to provide\nadditional information about parameter that is not available in KParameter class.<\/p>\n"
                              }]
                            },
                            "defaultvaluesstrategy": {
                              "ownKey": "defaultvaluesstrategy",
                              "ownPages": [{
                                "reference": {
                                  "path": "kotlindoc/core-api",
                                  "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                  "fileName": "io/github/serpro69/kfaker/provider/misc/defaultvaluesstrategy",
                                  "extension": "html",
                                  "usePrettyUrl": true,
                                  "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/misc/defaultvaluesstrategy"
                                },
                                "description": "",
                                "title": "DefaultValuesStrategy",
                                "content": "<p>USE_DEFAULTS<\/p>\n<p>Uses default values of constructor parameters.<\/p>\nPICK_RANDOMLY\n<p>Randomly picks either a default or a randomly-generated value of constructor parameters.<\/p>\nALL_RANDOM\n<p>Uses randomly-generated values of constructor parameters.<\/p>\n"
                              }]
                            }
                          },
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/core-api",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/provider/misc",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider/misc"
                            },
                            "description": "",
                            "title": "io.github.serpro69.kfaker.provider.misc",
                            "content": "<p>CryptographyProvider<\/p>\n<p>Provides functions for generating random hash sum strings.<\/p>\nParameterInfo\n<p>Provides additional information about Class parameter to custom defined generators.\nThe reason why KParameter is not used is that you will want to provide\nadditional information about parameter that is not available in KParameter class.<\/p>\nRandomClassProvider\n<p>Provider functionality for generating random class instances.<\/p><p>Inspired by <a href=\"https://blog.kotlin-academy.com/creating-a-random-instance-of-any-class-in-kotlin-b6168655b64a\">Creating a random instance of any class in Kotlin blog post<\/a>.<\/p>\nRandomProviderConfig\n<p>Configuration for  RandomClassProvider.randomClassInstance .<\/p>\nFallbackStrategy\n<p>ConstructorFilterStrategy<\/p>\n<p>DefaultValuesStrategy<\/p>\n<p>RandomProvider<\/p>\n<p>Provides data-generator-like functionality for the functions of  RandomService .<\/p>\nStringProvider\n<p>Provides functions for generating values from string expressions.<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc/core-api",
                          "baseUrl": "https://serpro69.github.io/kotlin-faker",
                          "fileName": "io/github/serpro69/kfaker/provider",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/provider"
                        },
                        "description": "",
                        "title": "io.github.serpro69.kfaker.provider",
                        "content": "<p>AbstractFakeDataProvider<\/p>\n<p>Abstract class for all concrete  FakeDataProvider 's that do not use yml files as data source.<\/p>\nAddress\n<p> FakeDataProvider  implementation for  YamlCategory.ADDRESS  category.<\/p>\nColor\n<p> FakeDataProvider  implementation for  YamlCategory.COLOR  category.<\/p>\nCurrency\n<p> FakeDataProvider  implementation for  YamlCategory.CURRENCY  category.<\/p>\nCurrencySymbol\n<p> FakeDataProvider  implementation for  YamlCategory.CURRENCY_SYMBOL  category.<\/p>\nFakeDataProvider\n<p>Interface for all fake data providers.<\/p><p>Represents a single, standalone provider (generator) of fake data.<\/p>\nFile\n<p> FakeDataProvider  implementation for  YamlCategory.FILE  category.<\/p>\nFileMimeType\n<p>Gender<\/p>\n<p> FakeDataProvider  implementation for  YamlCategory.GENDER  category.<\/p>\nIdNumber\n<p> FakeDataProvider  implementation for  YamlCategory.ID_NUMBER  category.<\/p>\nInternet\n<p> FakeDataProvider  implementation for  YamlCategory.INTERNET  category.<\/p>\nMeasurement\n<p> FakeDataProvider  implementation for  YamlCategory.MEASUREMENT  category.<\/p>\nMoney\n<p>Name<\/p>\n<p> FakeDataProvider  implementation for  YamlCategory.NAME  category.<\/p>\nPerson\n<p> FakeDataProvider  implementation class for functionality not covered by the standard dictionary files.<\/p>\nPhoneNumber\n<p> FakeDataProvider  implementation for  YamlCategory.PHONE_NUMBER  category.<\/p>\nCellPhone\n<p> FakeDataProvider  implementation for  YamlCategory.CELL_PHONE  category.<\/p>\nSeparator\n<p> FakeDataProvider  implementation for  YamlCategory.ADDRESS  category.<\/p>\nSource\n<p> FakeDataProvider  implementation for  YamlCategory.SOURCE  category.<\/p>\nYamlFakeDataProvider\n<p>Abstract class for all concrete  FakeDataProvider 's that use yml files as data source.<\/p>\nio.github.serpro69.kfaker.provider.misc\n<p>io.github.serpro69.kfaker.provider.unique<\/p>\n"
                      }]
                    },
                    "fakerconfig": {
                      "ownKey": "fakerconfig",
                      "childrenPages": {"builder": {
                        "ownKey": "builder",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-api",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/fakerconfig/builder",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/fakerconfig/builder"
                          },
                          "description": "",
                          "title": "Builder",
                          "content": "<p>locale<\/p>\n<p>Sets the  FakerConfig.locale  when creating an instance of  FakerConfig  with this  Builder .\nDefault: <code>\"en\"<\/code>.<\/p>\nrandom\n<p>Sets the  FakerConfig.random  when creating an instance of  FakerConfig  with this  Builder .\nDefault: <code>\"en\"<\/code>.<\/p>\nrandomSeed\n<p>Sets the seed for  FakerConfig.random .\nIf specified, the  random  property will be ignored\nwhen creating an instance of  FakerConfig  with this  Builder .\nDefault: <code>null<\/code>.<\/p>\nuniqueGeneratorRetryLimit\n<p>Sets the  FakerConfig.uniqueGeneratorRetryLimit \nwhen creating an instance of  FakerConfig  with this  Builder .\nDefault: <code>100<\/code>.<\/p>\nwithLocale\n<p>withRandom<\/p>\n<p>withRandomSeed<\/p>\n<p>withUniqueGeneratorRetryLimit<\/p>\n<p>build<\/p>\n<p>randomClassInstance<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc/core-api",
                          "baseUrl": "https://serpro69.github.io/kotlin-faker",
                          "fileName": "io/github/serpro69/kfaker/fakerconfig",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/fakerconfig"
                        },
                        "description": "",
                        "title": "FakerConfig",
                        "content": "<p>Configuration for implementations of  AbstractFaker .<\/p>locale\n<p>random<\/p>\n<p>uniqueGeneratorRetryLimit<\/p>\n<p>FakerConfig<\/p>\n<p>Configuration for implementations of  AbstractFaker .<\/p>\n"
                      }]
                    },
                    "faker": {
                      "ownKey": "faker",
                      "childrenPages": {"builder": {
                        "ownKey": "builder",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/core-api",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/faker/builder",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/faker/builder"
                          },
                          "description": "",
                          "title": "Builder",
                          "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this  config .<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc/core-api",
                          "baseUrl": "https://serpro69.github.io/kotlin-faker",
                          "fileName": "io/github/serpro69/kfaker/faker",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/faker"
                        },
                        "description": "",
                        "title": "Faker",
                        "content": "<p>Provides access to 'core' fake data generators.<\/p><p>Each category (generator) from this  Faker  is represented by a property that has the same name as the <code>.yml<\/code> file.<\/p>crypto\n<p>random<\/p>\n<p>provides data-generator-like functionality for the functions of  RandomService .<\/p>\nrandomClass\n<p>provides additional functionality that is not covered by other data providers\nsuch as  address ,  name ,  internet , and so on. See  RandomClassProvider  for more details.<\/p>\nstring\n<p>provides functionality to generate strings from expressions/templates<\/p>\naddress\n<p>color<\/p>\n<p>currency<\/p>\n<p>currencySymbol<\/p>\n<p>file<\/p>\n<p>gender<\/p>\n<p>idNumber<\/p>\n<p>internet<\/p>\n<p>measurement<\/p>\n<p>money<\/p>\n<p>name<\/p>\n<p>person<\/p>\n<p>phoneNumber<\/p>\n<p>separator<\/p>\n<p><init><\/p>\n<p>Provides access to 'core' fake data generators.<\/p><p>Each category (generator) from this  Faker  is represented by a property that has the same name as the <code>.yml<\/code> file.<\/p>\n"
                      }]
                    },
                    "functionalutil": {
                      "ownKey": "functionalutil",
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc/core-api",
                          "baseUrl": "https://serpro69.github.io/kotlin-faker",
                          "fileName": "io/github/serpro69/kfaker/functionalutil",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/functionalutil"
                        },
                        "description": "",
                        "title": "FunctionalUtil",
                        "content": "<p><init><\/p>\n<p>fromConsumer<\/p>\n"
                      }]
                    },
                    "randomservice": {
                      "ownKey": "randomservice",
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc/core-api",
                          "baseUrl": "https://serpro69.github.io/kotlin-faker",
                          "fileName": "io/github/serpro69/kfaker/randomservice",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker/randomservice"
                        },
                        "description": "",
                        "title": "RandomService",
                        "content": "<p>Wrapper around <a href=\"#\">Random<\/a> that also contains some additional functions not covered by <a href=\"#\">Random<\/a>.<\/p><p>If two instances of this  RandomService  are created with the same seed,\nand the same sequence of method calls is made for each,\nthen they will generate and return identical sequences of values.<\/p><p>Instances of  RandomService  are not cryptographically secure by default.\nConsider passing <a href=\"https://docs.oracle.com/javase/6/docs/api/java/security/SecureRandom.html\">java.security.SecureRandom<\/a> to the constructor of this  RandomService \nto get a cryptographically secure pseudo-random generator.<\/p>config\n<p>nextInt<\/p>\n<p>Returns the next pseudorandom, uniformly distributed Int value from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextInt\n<p>Returns a pseudorandom, uniformly distributed Int value between <code>0<\/code> (inclusive)\nand the specified  bound  (exclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextInt\n<p>Returns a pseudorandom, uniformly distributed Int value within the specified int <a href=\"#\">range<\/a> (inclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextInt\n<p>Returns a pseudorandom, uniformly distributed Int value between  min  (inclusive) and  max  (inclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nrandomValue\n<p>Returns a pseudo-randomly selected value from the  list  of values.<\/p>\nrandomValue\n<p>Returns a pseudo-randomly selected value from the  array  of values.<\/p>\nnextLetter\n<p>Returns the next pseudorandom, uniformly distributed Char value\nthat corresponds to a letter in the English alphabet.<\/p>\nrandomString\n<p>Returns String with the specified  length  consisting of a pseudo-randomly generated\nEnglish alphabet letters and optional  numericalChars ,\nor an empty string for a <code>length < 1<\/code>.<\/p>\nrandomString\n<p>Returns String with the specified  length  (or an empty string for a <code>length < 1<\/code>)\nconsisting of pseudo-randomly generated characters\nin a given  locale  with optional  auxiliaryChars  and  numericalChars <\/p>\nrandomString\n<p>Returns String with a randomLength withing the specified  min  and  max  boundaries\n(or an empty string for if <code>randomLength < 1<\/code>)\nconsisting of pseudo-randomly generated characters\nin a given  locale  with optional  auxiliaryChars  and  numericalChars <\/p>\nnextBoolean\n<p>Returns the next pseudorandom, uniformly distributed Boolean value\nfrom this random number generator's sequence.<\/p><p>The values <code>true<\/code> and <code>false<\/code> are produced with (approximately) equal probability.<\/p>\nnextLong\n<p>Returns the next pseudorandom, uniformly distributed Long value from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextLong\n<p>Returns a pseudorandom, uniformly distributed Long value between <code>0<\/code> (inclusive),\nand the specified  bound  value (exclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextLong\n<p>Returns a pseudorandom, uniformly distributed Long value within the specified  longRange  (inclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextLong\n<p>Returns a pseudorandom, uniformly distributed Long value between  min  (inclusive) and  max  (inclusive),\ndrawn from this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextFloat\n<p>Returns the next pseudorandom, uniformly distributed Float value between <code>0.0<\/code> and <code>1.0<\/code>\nfrom this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextDouble\n<p>Returns the next pseudorandom, uniformly distributed Double value between <code>0.0<\/code> and <code>1.0<\/code>\nfrom this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextChar\n<p>Returns the next pseudorandom, uniformly distributed Char value,\nfrom this <a href=\"#\">random<\/a> number generator's sequence.<\/p>\nnextEnum\n<p>Returns a randomly selected enum entry of type  E .<\/p>\nnextEnum\n<p>Returns a pseudo-randomly selected enum entry of type  E .<\/p>\nnextEnum\n<p>Returns a pseudo-randomly selected enum entry from an Array of  E  type  values .<\/p>\nnextEnum\n<p>Returns a pseudo-randomly selected  enum  class of type  E  based on  predicate  for  E .<\/p>\nnextEnum\n<p>Returns a randomly selected enum entry of type  E  excluding a particular enum class by its name.<\/p>\nnextUUID\n<p>Returns the next pseudorandom <a href=\"https://docs.oracle.com/javase/6/docs/api/java/util/UUID.html\">UUID<\/a> as String taking the seed of this <a href=\"#\">random<\/a>.<\/p>\nrandomSublist\n<p>Returns a view of the portion of the  list \nwith pseudo-randomly generated <code>fromIndex<\/code> and (possibly) <code>toIndex<\/code> values.<\/p>\nrandomSublist\n<p>Returns a view of the portion of the  list \nwith pseudo-randomly generated <code>fromIndex<\/code> and (possibly) <code>toIndex<\/code> values.<\/p>\nrandomSubset\n<p>Returns a portion of the  set \nwith pseudo-randomly generated <code>fromIndex<\/code> and (possibly) <code>toIndex<\/code> values.<\/p>\nrandomSubset\n<p>Returns a portion of the  set \nwith pseudo-randomly generated <code>fromIndex<\/code> and (possibly) <code>toIndex<\/code> values.<\/p>\nrandomPastDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween Unix epoch (1970-01-01T00:00:00Z) (inclusive) and now (exclusive) using UTC zone offset<\/p>\nrandomPastDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween  min  (inclusive) and now (exclusive) using UTC zone offset<\/p>\nrandomFutureDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween now (exclusive) and now + 50 years (inclusive) using UTC zone offset<\/p>\nrandomFutureDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween now (exclusive) and  max  (inclusive) using UTC zone offset<\/p>\nrandomDate\n<p>Returns a pseudorandom, uniformly distributed OffsetDateTime value\nbetween  min  (inclusive) and  max  (inclusive) using the defined  zoneOffset <\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "kotlindoc/core-api",
                      "baseUrl": "https://serpro69.github.io/kotlin-faker",
                      "fileName": "io/github/serpro69/kfaker",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/core-api/io/github/serpro69/kfaker"
                    },
                    "description": "",
                    "title": "io.github.serpro69.kfaker",
                    "content": "<p>AbstractFaker<\/p>\n<p>Faker<\/p>\n<p>Provides access to 'core' fake data generators.<\/p><p>Each category (generator) from this  Faker  is represented by a property that has the same name as the <code>.yml<\/code> file.<\/p>\nFakerConfig\n<p>Configuration for implementations of  AbstractFaker .<\/p>\nConfigBuilder\n<p>Lambda with  FakerConfig.Builder  receiver type that returns a Unit.<\/p><p>Used with DSL functions to construct an instance of  FakerConfig \nby applying the results of the function to the  FakerConfig.Builder .<\/p>\nFakerDsl\n<p>FakerService<\/p>\n<p>Internal class used for resolving yaml expressions into values.<\/p>\nIRandom\n<p>Provides functionality similar to <a href=\"https://docs.oracle.com/javase/6/docs/api/java/util/Random.html\">Random<\/a><\/p>\nRandomService\n<p>Wrapper around <a href=\"#\">Random<\/a> that also contains some additional functions not covered by <a href=\"#\">Random<\/a>.<\/p><p>If two instances of this  RandomService  are created with the same seed,\nand the same sequence of method calls is made for each,\nthen they will generate and return identical sequences of values.<\/p><p>Instances of  RandomService  are not cryptographically secure by default.\nConsider passing <a href=\"https://docs.oracle.com/javase/6/docs/api/java/security/SecureRandom.html\">java.security.SecureRandom<\/a> to the constructor of this  RandomService \nto get a cryptographically secure pseudo-random generator.<\/p>\nFunctionalUtil\n<p>io.github.serpro69.kfaker.dictionary<\/p>\n<p>io.github.serpro69.kfaker.exception<\/p>\n<p>io.github.serpro69.kfaker.extension<\/p>\n<p>io.github.serpro69.kfaker.helper<\/p>\n<p>io.github.serpro69.kfaker.provider<\/p>\n<p>ConfigBuilder<\/p>\n<p>Lambda with  FakerConfig.Builder  receiver type that returns a Unit.<\/p><p>Used with DSL functions to construct an instance of  FakerConfig \nby applying the results of the function to the  FakerConfig.Builder .<\/p>\nfaker\n<p>Applies the  block  function to  Faker.Builder \nand returns as an instance of  Faker  from that builder.<\/p>\nfakerConfig\n<p>Applies the the  block  function to  ConfigBuilder \nand returns as an instance of  FakerConfig  from that builder.<\/p>\nrandomClassInstance\n<p>Creates an instance of  T . If  T  has a parameterless public/internal constructor then it will be used to create an instance of this class,\notherwise a constructor with minimal number of parameters will be used with randomly-generated values.<\/p>\nrandomClassInstance\n<p>Creates an instance of  T . If  T  has a parameterless public/internal constructor then it will be used to create an instance of this class,\notherwise a constructor with minimal number of parameters will be used with randomly-generated values.<\/p>\nrandomClassInstance\n<p>Creates an instance of  T  from the KClass input.\nIf  T  has a parameterless public/internal constructor then it will be used to create an instance of this class,\notherwise a constructor with minimal number of parameters will be used with randomly-generated values.<\/p>\nrandomClassInstance\n<p>Creates an instance of  T  from the KClass input.\nIf  T  has a parameterless public/internal constructor then it will be used to create an instance of this class,\notherwise a constructor with minimal number of parameters will be used with randomly-generated values.<\/p>\n"
                  }]
                }}
              }}
            }}
          }}
        },
        "japmedia-data-provider": {
          "ownKey": "japmedia-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"japmedia": {
                    "ownKey": "japmedia",
                    "childrenPages": {
                      "japanesemediafaker": {
                        "ownKey": "japanesemediafaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/japmedia-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/japmedia/japanesemediafaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/japanesemediafaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/japmedia-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/japmedia/japanesemediafaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/japanesemediafaker"
                          },
                          "description": "",
                          "title": "JapaneseMediaFaker",
                          "content": "<p>Provides access to fake data generators within the JapaneseMedia domain.<\/p><p>Each category (generator) from this  JapaneseMediaFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>conan\n<p>cowboyBebop<\/p>\n<p>doraemon<\/p>\n<p>dragonBall<\/p>\n<p>fmaBrotherhood<\/p>\n<p>kamenRider<\/p>\n<p>naruto<\/p>\n<p>onePiece<\/p>\n<p>studioGhibli<\/p>\n<p>swordArtOnline<\/p>\n<p><init><\/p>\n<p>Provides access to fake data generators within the JapaneseMedia domain.<\/p><p>Each category (generator) from this  JapaneseMediaFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\n"
                        }]
                      },
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "fmabrotherhood": {
                            "ownKey": "fmabrotherhood",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/japmedia-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/japmedia/provider/fmabrotherhood",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/provider/fmabrotherhood"
                              },
                              "description": "",
                              "title": "FmaBrotherhood",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.FMA_BROTHERHOOD<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>cities<\/p>\n<p>countries<\/p>\n"
                            }]
                          },
                          "kamenridershowa": {
                            "ownKey": "kamenridershowa",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/japmedia-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/japmedia/provider/kamenridershowa",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/provider/kamenridershowa"
                              },
                              "description": "",
                              "title": "KamenRiderShowa",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>series<\/p>\n<p>kamenRiders<\/p>\n<p>users<\/p>\n<p>transformationDevices<\/p>\n"
                            }]
                          },
                          "conan": {
                            "ownKey": "conan",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/japmedia-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/japmedia/provider/conan",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/provider/conan"
                              },
                              "description": "",
                              "title": "Conan",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CONAN<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>gadgets<\/p>\n<p>vehicles<\/p>\n"
                            }]
                          },
                          "onepiece": {
                            "ownKey": "onepiece",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/japmedia-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/japmedia/provider/onepiece",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/provider/onepiece"
                              },
                              "description": "",
                              "title": "OnePiece",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ONE_PIECE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>seas<\/p>\n<p>islands<\/p>\n<p>locations<\/p>\n<p>quotes<\/p>\n<p>akumaNoMi<\/p>\n"
                            }]
                          },
                          "swordartonline": {
                            "ownKey": "swordartonline",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/japmedia-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/japmedia/provider/swordartonline",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/provider/swordartonline"
                              },
                              "description": "",
                              "title": "SwordArtOnline",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SWORD_ART_ONLINE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>realName<\/p>\n<p>gameName<\/p>\n<p>location<\/p>\n<p>item<\/p>\n"
                            }]
                          },
                          "naruto": {
                            "ownKey": "naruto",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/japmedia-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/japmedia/provider/naruto",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/provider/naruto"
                              },
                              "description": "",
                              "title": "Naruto",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.NARUTO<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>villages<\/p>\n<p>eyes<\/p>\n<p>demons<\/p>\n"
                            }]
                          },
                          "cowboybebop": {
                            "ownKey": "cowboybebop",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/japmedia-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/japmedia/provider/cowboybebop",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/provider/cowboybebop"
                              },
                              "description": "",
                              "title": "CowboyBebop",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.COWBOY_BEBOP<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>character<\/p>\n<p>episode<\/p>\n<p>song<\/p>\n<p>quote<\/p>\n"
                            }]
                          },
                          "dragonball": {
                            "ownKey": "dragonball",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/japmedia-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/japmedia/provider/dragonball",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/provider/dragonball"
                              },
                              "description": "",
                              "title": "DragonBall",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DRAGON_BALL<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>races<\/p>\n<p>planets<\/p>\n"
                            }]
                          },
                          "kamenriderreiwa": {
                            "ownKey": "kamenriderreiwa",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/japmedia-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/japmedia/provider/kamenriderreiwa",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/provider/kamenriderreiwa"
                              },
                              "description": "",
                              "title": "KamenRiderReiwa",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>series<\/p>\n<p>kamenRiders<\/p>\n<p>users<\/p>\n<p>collectibleDevices<\/p>\n<p>transformationDevices<\/p>\n"
                            }]
                          },
                          "kamenrider": {
                            "ownKey": "kamenrider",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/japmedia-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/japmedia/provider/kamenrider",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/provider/kamenrider"
                              },
                              "description": "",
                              "title": "KamenRider",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.KAMEN_RIDER<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>showa<\/p>\n<p>heisei<\/p>\n<p>reiwa<\/p>\n"
                            }]
                          },
                          "doraemon": {
                            "ownKey": "doraemon",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/japmedia-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/japmedia/provider/doraemon",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/provider/doraemon"
                              },
                              "description": "",
                              "title": "Doraemon",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DORAEMON<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>gadgets<\/p>\n<p>locations<\/p>\n"
                            }]
                          },
                          "studioghibli": {
                            "ownKey": "studioghibli",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/japmedia-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/japmedia/provider/studioghibli",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/provider/studioghibli"
                              },
                              "description": "",
                              "title": "StudioGhibli",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.STUDIO_GHIBLI<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>characters<\/p>\n<p>quotes<\/p>\n<p>movies<\/p>\n"
                            }]
                          },
                          "kamenriderheisei": {
                            "ownKey": "kamenriderheisei",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/japmedia-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/japmedia/provider/kamenriderheisei",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/provider/kamenriderheisei"
                              },
                              "description": "",
                              "title": "KamenRiderHeisei",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>series<\/p>\n<p>kamenRiders<\/p>\n<p>users<\/p>\n<p>collectibleDevices<\/p>\n<p>transformationDevices<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/japmedia-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/japmedia/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.japmedia.provider",
                          "content": "<p>Conan<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CONAN<\/a> category.<\/p>\nCowboyBebop\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.COWBOY_BEBOP<\/a> category.<\/p>\nDoraemon\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DORAEMON<\/a> category.<\/p>\nDragonBall\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DRAGON_BALL<\/a> category.<\/p>\nFmaBrotherhood\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.FMA_BROTHERHOOD<\/a> category.<\/p>\nKamenRider\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.KAMEN_RIDER<\/a> category.<\/p>\nKamenRiderShowa\n<p>KamenRiderHeisei<\/p>\n<p>KamenRiderReiwa<\/p>\n<p>Naruto<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.NARUTO<\/a> category.<\/p>\nOnePiece\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ONE_PIECE<\/a> category.<\/p>\nStudioGhibli\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.STUDIO_GHIBLI<\/a> category.<\/p>\nSwordArtOnline\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SWORD_ART_ONLINE<\/a> category.<\/p>\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/japmedia-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/japmedia/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  JapaneseMediaFaker <\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/japmedia-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/japmedia",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/japmedia-data-provider/io/github/serpro69/kfaker/japmedia"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.japmedia",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  JapaneseMediaFaker <\/p>\nJapaneseMediaFaker\n<p>Provides access to fake data generators within the JapaneseMedia domain.<\/p><p>Each category (generator) from this  JapaneseMediaFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\nio.github.serpro69.kfaker.japmedia.provider\n<p>Faker<\/p>\n<p>Typealias for the  JapaneseMediaFaker <\/p>\nfaker\n<p>Applies the  block  function to  JapaneseMediaFaker.Builder \nand returns as an instance of  JapaneseMediaFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "kotest-property-extension": {
          "ownKey": "kotest-property-extension",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"kotest": {
                    "ownKey": "kotest",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/kotest-property-extension",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/kotest",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/kotest-property-extension/io/github/serpro69/kfaker/kotest"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.kotest",
                      "content": "<p>of\n<p>Creates a new <a href=\"#\">Arb<\/a> that generates values from the given  block  function.<\/p><p>Example for fake generators:<\/p><pre><code>\nval f = Faker()\nforAll(Arb.of(f.address::city)) { c -&gt; c.isNotBlank() }\n<\/code><\/pre><p>Example using random class instances:<\/p><pre><code>\nval f = Faker()\nforAll(Arb.of(f.randomClass::randomClassInstance)) { foo: Foo -&gt; foo.bar.s.isNotBlank() }<\/p>\n<\/code><\/pre>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "tech-data-provider": {
          "ownKey": "tech-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"tech": {
                    "ownKey": "tech",
                    "childrenPages": {
                      "techfaker": {
                        "ownKey": "techfaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/tech-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/tech/techfaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/techfaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/tech-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/tech/techfaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/techfaker"
                          },
                          "description": "",
                          "title": "TechFaker",
                          "content": "<p>Provides access to fake data generators within the Tech domain.<\/p><p>Each category (generator) from this  TechFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>app\n<p>appliance<\/p>\n<p>camera<\/p>\n<p>computer<\/p>\n<p>cryptoCoin<\/p>\n<p>device<\/p>\n<p>drone<\/p>\n<p>electricalComponents<\/p>\n<p>hacker<\/p>\n<p>programmingLanguage<\/p>\n<p>space<\/p>\n<p>vehicle<\/p>\n<p><init><\/p>\n<p>Provides access to fake data generators within the Tech domain.<\/p><p>Each category (generator) from this  TechFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\n"
                        }]
                      },
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "app": {
                            "ownKey": "app",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/tech-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/tech/provider/app",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/provider/app"
                              },
                              "description": "",
                              "title": "App",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.APP<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>name<\/p>\n<p>version<\/p>\n<p>author<\/p>\n"
                            }]
                          },
                          "appliance": {
                            "ownKey": "appliance",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/tech-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/tech/provider/appliance",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/provider/appliance"
                              },
                              "description": "",
                              "title": "Appliance",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.APPLIANCE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>brand<\/p>\n<p>equipment<\/p>\n"
                            }]
                          },
                          "programminglanguage": {
                            "ownKey": "programminglanguage",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/tech-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/tech/provider/programminglanguage",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/provider/programminglanguage"
                              },
                              "description": "",
                              "title": "ProgrammingLanguage",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.PROGRAMMING_LANGUAGE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>name<\/p>\n<p>creator<\/p>\n"
                            }]
                          },
                          "space": {
                            "ownKey": "space",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/tech-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/tech/provider/space",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/provider/space"
                              },
                              "description": "",
                              "title": "Space",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SPACE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>planet<\/p>\n<p>moon<\/p>\n<p>galaxy<\/p>\n<p>nebula<\/p>\n<p>starCluster<\/p>\n<p>constellation<\/p>\n<p>star<\/p>\n<p>agency<\/p>\n<p>agencyAbv<\/p>\n<p>nasaSpaceCraft<\/p>\n<p>company<\/p>\n<p>distanceMeasurement<\/p>\n<p>meteorite<\/p>\n<p>launchVehicle<\/p>\n"
                            }]
                          },
                          "drone": {
                            "ownKey": "drone",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/tech-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/tech/provider/drone",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/provider/drone"
                              },
                              "description": "",
                              "title": "Drone",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DRONE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>name<\/p>\n<p>weight<\/p>\n<p>maxAscentSpeed<\/p>\n<p>maxDescentSpeed<\/p>\n<p>flightTime<\/p>\n<p>maxAltitude<\/p>\n<p>maxFlightDistance<\/p>\n<p>maxSpeed<\/p>\n<p>maxWindResistance<\/p>\n<p>maxAngularVelocity<\/p>\n<p>maxTiltAngle<\/p>\n<p>operatingTemperature<\/p>\n<p>batteryCapacity<\/p>\n<p>batteryVoltage<\/p>\n<p>batteryType<\/p>\n<p>batteryWeight<\/p>\n<p>chargingTemperature<\/p>\n<p>maxChargingPower<\/p>\n<p>iso<\/p>\n<p>maxResolution<\/p>\n<p>photoFormat<\/p>\n<p>videoFormat<\/p>\n<p>maxShutterSpeed<\/p>\n<p>minShutterSpeed<\/p>\n<p>shutterSpeedUnits<\/p>\n"
                            }]
                          },
                          "vehicle": {
                            "ownKey": "vehicle",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/tech-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/tech/provider/vehicle",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/provider/vehicle"
                              },
                              "description": "",
                              "title": "Vehicle",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.VEHICLE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>manufacture<\/p>\n<p>makes<\/p>\n<p>modelsByMake<\/p>\n<p>colors<\/p>\n<p>transmissions<\/p>\n<p>driveTypes<\/p>\n<p>fuelTypes<\/p>\n<p>styles<\/p>\n<p>carTypes<\/p>\n<p>carOptions<\/p>\n<p>standardSpecs<\/p>\n<p>doors<\/p>\n<p>engineSizes<\/p>\n<p>licensePlate<\/p>\n<p>licencePlateByState<\/p>\n<p>cylinderEngine<\/p>\n"
                            }]
                          },
                          "computer": {
                            "ownKey": "computer",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/tech-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/tech/provider/computer",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/provider/computer"
                              },
                              "description": "",
                              "title": "Computer",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ANCIENT<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>os<\/p>\n<p>type<\/p>\n<p>platform<\/p>\n"
                            }]
                          },
                          "hacker": {
                            "ownKey": "hacker",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/tech-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/tech/provider/hacker",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/provider/hacker"
                              },
                              "description": "",
                              "title": "Hacker",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HACKER<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>abbreviation<\/p>\n<p>adjective<\/p>\n<p>noun<\/p>\n<p>verb<\/p>\n<p>ingverb<\/p>\n"
                            }]
                          },
                          "electricalcomponents": {
                            "ownKey": "electricalcomponents",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/tech-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/tech/provider/electricalcomponents",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/provider/electricalcomponents"
                              },
                              "description": "",
                              "title": "ElectricalComponents",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ELECTRICAL_COMPONENTS<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>active<\/p>\n<p>passive<\/p>\n<p>electromechanical<\/p>\n"
                            }]
                          },
                          "cryptocoin": {
                            "ownKey": "cryptocoin",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/tech-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/tech/provider/cryptocoin",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/provider/cryptocoin"
                              },
                              "description": "",
                              "title": "CryptoCoin",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CRYPTO_COIN<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>coin<\/p>\n"
                            }]
                          },
                          "computeros": {
                            "ownKey": "computeros",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/tech-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/tech/provider/computeros",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/provider/computeros"
                              },
                              "description": "",
                              "title": "ComputerOS",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>linux<\/p>\n<p>openBsd<\/p>\n<p>templeOS<\/p>\n<p>plan9<\/p>\n<p>macOS<\/p>\n<p>windows<\/p>\n"
                            }]
                          },
                          "camera": {
                            "ownKey": "camera",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/tech-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/tech/provider/camera",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/provider/camera"
                              },
                              "description": "",
                              "title": "Camera",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CAMERA<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>brand<\/p>\n<p>model<\/p>\n<p>brandWithModel<\/p>\n"
                            }]
                          },
                          "device": {
                            "ownKey": "device",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/tech-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/tech/provider/device",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/provider/device"
                              },
                              "description": "",
                              "title": "Device",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DEVICE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>modelName<\/p>\n<p>platform<\/p>\n<p>manufacturer<\/p>\n<p>serial<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/tech-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/tech/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.tech.provider",
                          "content": "<p>App<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.APP<\/a> category.<\/p>\nAppliance\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.APPLIANCE<\/a> category.<\/p>\nCamera\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CAMERA<\/a> category.<\/p>\nComputer\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ANCIENT<\/a> category.<\/p>\nComputerOS\n<p>CryptoCoin<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CRYPTO_COIN<\/a> category.<\/p>\nDevice\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DEVICE<\/a> category.<\/p>\nDrone\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.DRONE<\/a> category.<\/p>\nElectricalComponents\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ELECTRICAL_COMPONENTS<\/a> category.<\/p>\nHacker\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.HACKER<\/a> category.<\/p>\nProgrammingLanguage\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.PROGRAMMING_LANGUAGE<\/a> category.<\/p>\nSpace\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SPACE<\/a> category.<\/p>\nVehicle\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.VEHICLE<\/a> category.<\/p>\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/tech-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/tech/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  TechFaker <\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/tech-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/tech",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/tech-data-provider/io/github/serpro69/kfaker/tech"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.tech",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  TechFaker <\/p>\nTechFaker\n<p>Provides access to fake data generators within the Tech domain.<\/p><p>Each category (generator) from this  TechFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\nio.github.serpro69.kfaker.tech.provider\n<p>Faker<\/p>\n<p>Typealias for the  TechFaker <\/p>\nfaker\n<p>Applies the  block  function to  TechFaker.Builder \nand returns as an instance of  TechFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "edu-data-provider": {
          "ownKey": "edu-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"edu": {
                    "ownKey": "edu",
                    "childrenPages": {
                      "edufaker": {
                        "ownKey": "edufaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/edu-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/edu/edufaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/edu-data-provider/io/github/serpro69/kfaker/edu/edufaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/edu-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/edu/edufaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/edu-data-provider/io/github/serpro69/kfaker/edu/edufaker"
                          },
                          "description": "",
                          "title": "EduFaker",
                          "content": "<p>Provides access to fake data generators within the Education domain.<\/p><p>Each category (generator) from this  EduFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>job\n<p>educator<\/p>\n<p>science<\/p>\n<p>university<\/p>\n<p><init><\/p>\n<p>Provides access to fake data generators within the Education domain.<\/p><p>Each category (generator) from this  EduFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\n"
                        }]
                      },
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "sciencebranch": {
                            "ownKey": "sciencebranch",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/edu-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/edu/provider/sciencebranch",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/edu-data-provider/io/github/serpro69/kfaker/edu/provider/sciencebranch"
                              },
                              "description": "",
                              "title": "ScienceBranch",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>empiricalNaturalBasic<\/p>\n<p>empiricalNaturalApplied<\/p>\n<p>empiricalSocialBasic<\/p>\n<p>empiricalSocialApplied<\/p>\n<p>formalBasic<\/p>\n<p>formalApplied<\/p>\n"
                            }]
                          },
                          "university": {
                            "ownKey": "university",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/edu-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/edu/provider/university",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/edu-data-provider/io/github/serpro69/kfaker/edu/provider/university"
                              },
                              "description": "",
                              "title": "University",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.UNIVERSITY<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>prefix<\/p>\n<p>suffix<\/p>\n<p>name<\/p>\n"
                            }]
                          },
                          "science": {
                            "ownKey": "science",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/edu-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/edu/provider/science",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/edu-data-provider/io/github/serpro69/kfaker/edu/provider/science"
                              },
                              "description": "",
                              "title": "Science",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SCIENCE<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>branch<\/p>\n<p>element<\/p>\n<p>elementSymbol<\/p>\n<p>elementState<\/p>\n<p>elementSubcategory<\/p>\n<p>modifier<\/p>\n<p>scientist<\/p>\n<p>tool<\/p>\n"
                            }]
                          },
                          "degree": {
                            "ownKey": "degree",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/edu-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/edu/provider/degree",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/edu-data-provider/io/github/serpro69/kfaker/edu/provider/degree"
                              },
                              "description": "",
                              "title": "Degree",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>type<\/p>\n<p>courseNumber<\/p>\n"
                            }]
                          },
                          "tertiary": {
                            "ownKey": "tertiary",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/edu-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/edu/provider/tertiary",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/edu-data-provider/io/github/serpro69/kfaker/edu/provider/tertiary"
                              },
                              "description": "",
                              "title": "Tertiary",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>degree<\/p>\n<p>universityType<\/p>\n"
                            }]
                          },
                          "job": {
                            "ownKey": "job",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/edu-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/edu/provider/job",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/edu-data-provider/io/github/serpro69/kfaker/edu/provider/job"
                              },
                              "description": "",
                              "title": "Job",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.JOB<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>field<\/p>\n<p>seniority<\/p>\n<p>position<\/p>\n<p>keySkills<\/p>\n<p>employmentType<\/p>\n<p>educationLevel<\/p>\n<p>title<\/p>\n"
                            }]
                          },
                          "educator": {
                            "ownKey": "educator",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/edu-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/edu/provider/educator",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/edu-data-provider/io/github/serpro69/kfaker/edu/provider/educator"
                              },
                              "description": "",
                              "title": "Educator",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.EDUCATOR<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>tertiary<\/p>\n<p>schoolName<\/p>\n<p>secondary<\/p>\n<p>primary<\/p>\n<p>university<\/p>\n<p>secondarySchool<\/p>\n<p>primarySchool<\/p>\n<p>campus<\/p>\n<p>subject<\/p>\n<p>degree<\/p>\n<p>courseName<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/edu-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/edu/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/edu-data-provider/io/github/serpro69/kfaker/edu/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.edu.provider",
                          "content": "<p>Educator<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.EDUCATOR<\/a> category.<\/p>\nTertiary\n<p>Degree<\/p>\n<p>Job<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.JOB<\/a> category.<\/p>\nScience\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.SCIENCE<\/a> category.<\/p>\nScienceBranch\n<p>University<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.UNIVERSITY<\/a> category.<\/p>\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/edu-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/edu/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/edu-data-provider/io/github/serpro69/kfaker/edu/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  EduFaker <\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/edu-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/edu",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/edu-data-provider/io/github/serpro69/kfaker/edu"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.edu",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  EduFaker <\/p>\nEduFaker\n<p>Provides access to fake data generators within the Education domain.<\/p><p>Each category (generator) from this  EduFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\nio.github.serpro69.kfaker.edu.provider\n<p>Faker<\/p>\n<p>Typealias for the  EduFaker <\/p>\nfaker\n<p>Applies the  block  function to  EduFaker.Builder \nand returns as an instance of  EduFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        },
        "creatures-data-provider": {
          "ownKey": "creatures-data-provider",
          "childrenPages": {"io": {
            "ownKey": "io",
            "childrenPages": {"github": {
              "ownKey": "github",
              "childrenPages": {"serpro69": {
                "ownKey": "serpro69",
                "childrenPages": {"kfaker": {
                  "ownKey": "kfaker",
                  "childrenPages": {"creatures": {
                    "ownKey": "creatures",
                    "childrenPages": {
                      "creaturesfaker": {
                        "ownKey": "creaturesfaker",
                        "childrenPages": {"builder": {
                          "ownKey": "builder",
                          "ownPages": [{
                            "reference": {
                              "path": "kotlindoc/creatures-data-provider",
                              "baseUrl": "https://serpro69.github.io/kotlin-faker",
                              "fileName": "io/github/serpro69/kfaker/creatures/creaturesfaker/builder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/creatures-data-provider/io/github/serpro69/kfaker/creatures/creaturesfaker/builder"
                            },
                            "description": "",
                            "title": "Builder",
                            "content": "<p>DSL builder for creating instances of  Faker <\/p>build\n<p>Builds an instance of  Faker  with this <a href=\"#\">config<\/a>.<\/p>\n"
                          }]
                        }},
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/creatures-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/creatures/creaturesfaker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/creatures-data-provider/io/github/serpro69/kfaker/creatures/creaturesfaker"
                          },
                          "description": "",
                          "title": "CreaturesFaker",
                          "content": "<p>Provides access to fake data generators within the Creature domain.<\/p><p>Each category (generator) from this  CreaturesFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>ancient\n<p>animal<\/p>\n<p>bird<\/p>\n<p>cat<\/p>\n<p>dog<\/p>\n<p>horse<\/p>\n<p><init><\/p>\n<p>Provides access to fake data generators within the Creature domain.<\/p><p>Each category (generator) from this  CreaturesFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\n"
                        }]
                      },
                      "provider": {
                        "ownKey": "provider",
                        "childrenPages": {
                          "horse": {
                            "ownKey": "horse",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/creatures-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/creatures/provider/horse",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/creatures-data-provider/io/github/serpro69/kfaker/creatures/provider/horse"
                              },
                              "description": "",
                              "title": "Horse",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CREATURE<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>name<\/p>\n<p>breed<\/p>\n"
                            }]
                          },
                          "bird": {
                            "ownKey": "bird",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/creatures-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/creatures/provider/bird",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/creatures-data-provider/io/github/serpro69/kfaker/creatures/provider/bird"
                              },
                              "description": "",
                              "title": "Bird",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CREATURE<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>orderCommonMap<\/p>\n<p>anatomy<\/p>\n<p>anatomyPastTense<\/p>\n<p>geo<\/p>\n<p>colors<\/p>\n<p>emotionalAdjectives<\/p>\n<p>sillyAdjectives<\/p>\n<p>adjectives<\/p>\n<p>plausibleCommonNames<\/p>\n<p>implausibleCommonNames<\/p>\n<p>commonFamilyName<\/p>\n"
                            }]
                          },
                          "cat": {
                            "ownKey": "cat",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/creatures-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/creatures/provider/cat",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/creatures-data-provider/io/github/serpro69/kfaker/creatures/provider/cat"
                              },
                              "description": "",
                              "title": "Cat",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CREATURE<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>name<\/p>\n<p>breed<\/p>\n<p>registry<\/p>\n"
                            }]
                          },
                          "animal": {
                            "ownKey": "animal",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/creatures-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/creatures/provider/animal",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/creatures-data-provider/io/github/serpro69/kfaker/creatures/provider/animal"
                              },
                              "description": "",
                              "title": "Animal",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CREATURE<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>name<\/p>\n"
                            }]
                          },
                          "birdordercommonmap": {
                            "ownKey": "birdordercommonmap",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/creatures-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/creatures/provider/birdordercommonmap",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/creatures-data-provider/io/github/serpro69/kfaker/creatures/provider/birdordercommonmap"
                              },
                              "description": "",
                              "title": "BirdOrderCommonMap",
                              "content": "<p>yamlCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>secondaryCategory<\/p>\n<p>accipitriformes<\/p>\n<p>anseriformes<\/p>\n<p>apterygiformes<\/p>\n<p>bucerotiformes<\/p>\n<p>caprimulgiformes<\/p>\n<p>cariamiformes<\/p>\n<p>casuariiformes<\/p>\n<p>cathartiformes<\/p>\n<p>charadriiformes<\/p>\n<p>ciconiiformes<\/p>\n<p>coliiformes<\/p>\n<p>columbiformes<\/p>\n<p>coraciiformes<\/p>\n<p>cuculiformes<\/p>\n<p>eurypygiformes<\/p>\n<p>falconiformes<\/p>\n<p>galbuliformes<\/p>\n<p>galliformes<\/p>\n<p>gaviiformes<\/p>\n<p>gruiformes<\/p>\n<p>mesitornithiformes<\/p>\n<p>musophagiformes<\/p>\n<p>opisthocomiformes<\/p>\n<p>otidiformes<\/p>\n<p>passeriformes<\/p>\n<p>pelecaniformes<\/p>\n<p>phaethontiformes<\/p>\n<p>phoenicopteriformes<\/p>\n<p>piciformes<\/p>\n<p>podicipediformes<\/p>\n<p>procellariiformes<\/p>\n<p>psittaciformes<\/p>\n<p>pterocliformes<\/p>\n<p>rheiformes<\/p>\n<p>sphenisciformes<\/p>\n<p>strigiformes<\/p>\n<p>struthioniformes<\/p>\n<p>suliformes<\/p>\n<p>tinamiformes<\/p>\n<p>trogoniformes<\/p>\n"
                            }]
                          },
                          "ancient": {
                            "ownKey": "ancient",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/creatures-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/creatures/provider/ancient",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/creatures-data-provider/io/github/serpro69/kfaker/creatures/provider/ancient"
                              },
                              "description": "",
                              "title": "Ancient",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ANCIENT<\/a> category.<\/p>yamlCategory\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>god<\/p>\n<p>primordial<\/p>\n<p>titan<\/p>\n<p>hero<\/p>\n"
                            }]
                          },
                          "dog": {
                            "ownKey": "dog",
                            "ownPages": [{
                              "reference": {
                                "path": "kotlindoc/creatures-data-provider",
                                "baseUrl": "https://serpro69.github.io/kotlin-faker",
                                "fileName": "io/github/serpro69/kfaker/creatures/provider/dog",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/creatures-data-provider/io/github/serpro69/kfaker/creatures/provider/dog"
                              },
                              "description": "",
                              "title": "Dog",
                              "content": "<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CREATURE<\/a> category.<\/p>yamlCategory\n<p>secondaryCategory<\/p>\n<p>localUniqueDataProvider<\/p>\n<p>unique<\/p>\n<p>name<\/p>\n<p>breed<\/p>\n<p>sound<\/p>\n<p>memePhrase<\/p>\n<p>age<\/p>\n<p>coatLength<\/p>\n<p>size<\/p>\n"
                            }]
                          }
                        },
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/creatures-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/creatures/provider",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/creatures-data-provider/io/github/serpro69/kfaker/creatures/provider"
                          },
                          "description": "",
                          "title": "io.github.serpro69.kfaker.creatures.provider",
                          "content": "<p>Ancient<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.ANCIENT<\/a> category.<\/p>\nAnimal\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CREATURE<\/a> category.<\/p>\nBird\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CREATURE<\/a> category.<\/p>\nBirdOrderCommonMap\n<p>Cat<\/p>\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CREATURE<\/a> category.<\/p>\nDog\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CREATURE<\/a> category.<\/p>\nHorse\n<p><a href=\"#\">FakeDataProvider<\/a> implementation for <a href=\"#\">YamlCategory.CREATURE<\/a> category.<\/p>\n"
                        }]
                      },
                      "faker": {
                        "ownKey": "faker",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc/creatures-data-provider",
                            "baseUrl": "https://serpro69.github.io/kotlin-faker",
                            "fileName": "io/github/serpro69/kfaker/creatures/faker",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/creatures-data-provider/io/github/serpro69/kfaker/creatures/faker"
                          },
                          "description": "",
                          "title": "Faker",
                          "content": "<p>Typealias for the  CreaturesFaker <\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc/creatures-data-provider",
                        "baseUrl": "https://serpro69.github.io/kotlin-faker",
                        "fileName": "io/github/serpro69/kfaker/creatures",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://serpro69.github.io/kotlin-faker/kotlindoc/creatures-data-provider/io/github/serpro69/kfaker/creatures"
                      },
                      "description": "",
                      "title": "io.github.serpro69.kfaker.creatures",
                      "content": "<p>Faker<\/p>\n<p>Typealias for the  CreaturesFaker <\/p>\nCreaturesFaker\n<p>Provides access to fake data generators within the Creature domain.<\/p><p>Each category (generator) from this  CreaturesFaker  is represented by a property\nthat (usually) has the same name as the <code>.yml<\/code> dictionary file.<\/p>\nio.github.serpro69.kfaker.creatures.provider\n<p>Faker<\/p>\n<p>Typealias for the  CreaturesFaker <\/p>\nfaker\n<p>Applies the  block  function to  CreaturesFaker.Builder \nand returns as an instance of  CreaturesFaker  from that builder.<\/p>\n"
                    }]
                  }}
                }}
              }}
            }}
          }}
        }
      }
    },
    "modules": {
      "ownKey": "modules",
      "childrenPages": {
        "movies-data-provider": {
          "ownKey": "movies-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "movies-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/movies-data-provider"
            },
            "description": "",
            "title": "Movies Provider API",
            "content": "<h2 id=\"moviesfaker\"><a href=\"#moviesfaker\" id=\"moviesfaker\" class=\"anchor\"><\/a><code>MoviesFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-movies\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-movies?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-movies?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the Movies domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-movies:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-movies&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'movies' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.movies.faker\n\nval faker = faker { }\n\nfaker.departed.actors()\nfaker.hobbit.characters()\n<\/code><\/pre>\n"
          }]
        },
        "travel-data-provider": {
          "ownKey": "travel-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "travel-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/travel-data-provider"
            },
            "description": "",
            "title": "Travel Provider API",
            "content": "<h2 id=\"travelfaker\"><a href=\"#travelfaker\" id=\"travelfaker\" class=\"anchor\"><\/a><code>TravelFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-travel\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-travel?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-travel?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the Travel domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-travel:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-travel&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'travel' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.travel.faker\n\nval faker = faker { }\n\nfaker.airport.europeanUnion.iataCode()\nfaker.mountain.name()\n<\/code><\/pre>\n"
          }]
        },
        "music-data-provider": {
          "ownKey": "music-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "music-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/music-data-provider"
            },
            "description": "",
            "title": "Music Provider API",
            "content": "<h2 id=\"mucisfaker\"><a href=\"#mucisfaker\" id=\"mucisfaker\" class=\"anchor\"><\/a><code>MucisFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-music\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-music?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-music?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the Mucis domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-music:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-music&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'music' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.music.faker\n\nval faker = faker { }\n\nfaker.music.instruments()\nfaker.opera.italian.byGiuseppeVerdi()\n<\/code><\/pre>\n"
          }]
        },
        "lorem-data-provider": {
          "ownKey": "lorem-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "lorem-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/lorem-data-provider"
            },
            "description": "",
            "title": "Lorem Provider API",
            "content": "<h2 id=\"loremfaker\"><a href=\"#loremfaker\" id=\"loremfaker\" class=\"anchor\"><\/a><code>LoremFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-lorem\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-lorem?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-lorem?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the Lorem domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-lorem:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-lorem&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'lorem' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.lorem.faker\n\nval faker = faker { }\n\nfaker.adjective.positive()\nfaker.verbs.base()\n<\/code><\/pre>\n"
          }]
        },
        "blns-extension": {
          "ownKey": "blns-extension",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "blns-extension",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/blns-extension"
            },
            "description": "",
            "title": "Blns Extension API",
            "content": "<h1 id=\"kotlin-faker-blns\"><a href=\"#kotlin-faker-blns\" id=\"kotlin-faker-blns\" class=\"anchor\"><\/a><code>kotlin-faker-blns<\/code><\/h1>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-blns\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-blns?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-blns?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p><code>kotlin-faker-blns<\/code> module provides extensions for the <a href=\"https://github.com/minimaxir/big-list-of-naughty-strings\">big-list-of-naughty-strings<\/a>, a list of strings which have a high probability of causing issues when used as user-input data, and can therefore be quite useful in testing.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for this extension is available at <a href=\"https://serpro69.github.io/kotlin-faker/extensions/blns-extension\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n"
          }]
        },
        "commerce-data-provider": {
          "ownKey": "commerce-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "commerce-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/commerce-data-provider"
            },
            "description": "",
            "title": "Commerce Provider API",
            "content": "<h2 id=\"commercefaker\"><a href=\"#commercefaker\" id=\"commercefaker\" class=\"anchor\"><\/a><code>CommerceFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-commerce\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-commerce?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-commerce?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the Commerce domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-commerce:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-commerce&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'commerce' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.commerce.faker\n\nval faker = faker { }\n\nfaker.bank.name()\nfaker.code.asin()\n<\/code><\/pre>\n"
          }]
        },
        "databases-data-provider": {
          "ownKey": "databases-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "databases-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/databases-data-provider"
            },
            "description": "",
            "title": "Databases Provider API",
            "content": "<h2 id=\"databasesfaker\"><a href=\"#databasesfaker\" id=\"databasesfaker\" class=\"anchor\"><\/a><code>DatabasesFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-databases\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-databases?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-databases?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the Databases domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-databases:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-databases&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'databases' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.databases.faker\n\nval faker = faker { }\n\nfaker.mysql.type()\nfaker.mysql.engine()\n<\/code><\/pre>\n"
          }]
        },
        "humor-data-provider": {
          "ownKey": "humor-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "humor-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/humor-data-provider"
            },
            "description": "",
            "title": "Humor Provider API",
            "content": "<h2 id=\"humorfaker\"><a href=\"#humorfaker\" id=\"humorfaker\" class=\"anchor\"><\/a><code>HumorFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-humor\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-humor?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-humor?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the Humor domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-humor:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-humor&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'humor' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.humor.faker\n\nval faker = faker { }\n\nfaker.chuckNorris.fact()\nfaker.funnyName.name()\n<\/code><\/pre>\n"
          }]
        },
        "tvshows-data-provider": {
          "ownKey": "tvshows-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "tvshows-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/tvshows-data-provider"
            },
            "description": "",
            "title": "TvShows Provider API",
            "content": "<h2 id=\"tvshowsfaker\"><a href=\"#tvshowsfaker\" id=\"tvshowsfaker\" class=\"anchor\"><\/a><code>TvShowsFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-tvshows\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-tvshows?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-tvshows?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the TV-Shows domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-tvshows:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-tvshows&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'tvshows' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.tv.faker\n\nval faker = faker { }\n\nfaker.bigBangTheory.characters()\nfaker.friends.characters()\n<\/code><\/pre>\n"
          }]
        },
        "sports-data-provider": {
          "ownKey": "sports-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "sports-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/sports-data-provider"
            },
            "description": "",
            "title": "Sports Provider API",
            "content": "<h2 id=\"sportsfaker\"><a href=\"#sportsfaker\" id=\"sportsfaker\" class=\"anchor\"><\/a><code>SportsFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-sports\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-sports?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-sports?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the Sports domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-sports:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-sports&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'sports' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.sports.faker\n\nval faker = faker { }\n\nfaker.basketball.teams()\nfaker.chess.players()\n<\/code><\/pre>\n"
          }]
        },
        "core-data-provider": {
          "ownKey": "core-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "core-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/core-data-provider"
            },
            "description": "",
            "title": "Core Data Provider API",
            "content": "<h2 id=\"core-data-provider-api\"><a href=\"#core-data-provider-api\" id=\"core-data-provider-api\" class=\"anchor\"><\/a><a href=\"https://serpro69.github.io/kotlin-faker/modules/core-data-provider\">Core Data Provider API<\/a><\/h2>\n"
          }]
        },
        "books-data-provider": {
          "ownKey": "books-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "books-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/books-data-provider"
            },
            "description": "",
            "title": "Books Provider API",
            "content": "<h2 id=\"booksfaker\"><a href=\"#booksfaker\" id=\"booksfaker\" class=\"anchor\"><\/a><code>BooksFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-books\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-books?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-books?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the Books domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-books:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-books&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'books' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.books.faker\n\nval faker = faker { }\n\nfaker.book.title()\nfaker.cosmere.aons()\n<\/code><\/pre>\n"
          }]
        },
        "misc-data-provider": {
          "ownKey": "misc-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "misc-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/misc-data-provider"
            },
            "description": "",
            "title": "Misc Provider API",
            "content": "<h2 id=\"miscfaker\"><a href=\"#miscfaker\" id=\"miscfaker\" class=\"anchor\"><\/a><code>MiscFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-misc\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-misc?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-misc?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators that don't belong in the core Faker, but also don't fit into any of the existing providers.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-misc:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-misc&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'misc' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.misc.faker\n\nval faker = faker { }\n\nfaker.artist.names()\nfaker.hobby.activity()\n<\/code><\/pre>\n"
          }]
        },
        "games-data-provider": {
          "ownKey": "games-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "games-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/games-data-provider"
            },
            "description": "",
            "title": "Games Provider API",
            "content": "<h2 id=\"gamesfaker\"><a href=\"#gamesfaker\" id=\"gamesfaker\" class=\"anchor\"><\/a><code>GamesFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-games\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-games?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-games?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the Games domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-games:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-games&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'games' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.games.faker\n\nval faker = faker { }\n\nfaker.coin.flip()\nfaker.dnd.alignments()\n<\/code><\/pre>\n"
          }]
        },
        "core-api": {
          "ownKey": "core-api",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "core-api",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/core-api"
            },
            "description": "",
            "title": "Full Core API",
            "content": "<h2 id=\"full-core-api\"><a href=\"#full-core-api\" id=\"full-core-api\" class=\"anchor\"><\/a><a href=\"https://serpro69.github.io/kotlin-faker/modules/core-api\">Full Core API<\/a><\/h2>\n"
          }]
        },
        "japmedia-data-provider": {
          "ownKey": "japmedia-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "japmedia-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/japmedia-data-provider"
            },
            "description": "",
            "title": "JapMedia Provider API",
            "content": "<h2 id=\"japanesemediafaker\"><a href=\"#japanesemediafaker\" id=\"japanesemediafaker\" class=\"anchor\"><\/a><code>JapaneseMediaFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-japmedia\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-japmedia?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-japmedia?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the Japanese Media domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-japmedia:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-japmedia&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'japmedia' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.japmedia.faker\n\nval faker = faker { }\n\nfaker.onePiece.characters()\nfaker.studioGhibli.characters()\n<\/code><\/pre>\n"
          }]
        },
        "kotest-property-extension": {
          "ownKey": "kotest-property-extension",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "kotest-property-extension",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/kotest-property-extension"
            },
            "description": "",
            "title": "Kotest Property Extension API",
            "content": "<h1 id=\"kotlin-faker-kotest-property\"><a href=\"#kotlin-faker-kotest-property\" id=\"kotlin-faker-kotest-property\" class=\"anchor\"><\/a><code>kotlin-faker-kotest-property<\/code><\/h1>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-kotest-property\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-kotest-property?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-kotest-property?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p><code>kotlin-faker-kotest-property<\/code> artifact extends <a href=\"https://kotest.io/docs/proptest/property-test-generators.html\"><code>Arb<\/code> generators<\/a> and provides an easy way to use kotlin-faker functionality with <a href=\"https://kotest.io/docs/proptest/property-based-testing.html\">kotest property testing<\/a>.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for this extension is available at <a href=\"https://serpro69.github.io/kotlin-faker/extensions/kotest-property-extension\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n"
          }]
        },
        "tech-data-provider": {
          "ownKey": "tech-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "tech-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/tech-data-provider"
            },
            "description": "",
            "title": "Tech Provider API",
            "content": "<h2 id=\"techfaker\"><a href=\"#techfaker\" id=\"techfaker\" class=\"anchor\"><\/a><code>TechFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-tech\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-tech?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-tech?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the Tech domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-tech:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-tech&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'tech' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.tech.faker\n\nval faker = faker { }\n\nfaker.app.name()\nfaker.device.platform()\n<\/code><\/pre>\n"
          }]
        },
        "edu-data-provider": {
          "ownKey": "edu-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "edu-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/edu-data-provider"
            },
            "description": "",
            "title": "Edu Provider API",
            "content": "<h2 id=\"edufaker\"><a href=\"#edufaker\" id=\"edufaker\" class=\"anchor\"><\/a><code>EduFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-edu\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-edu?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-edu?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the Education domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-edu:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-edu&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'edu' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.edu.faker\n\nval faker = faker { }\n\nfaker.educator.schoolName()\nfaker.science.element()\n<\/code><\/pre>\n"
          }]
        },
        "creatures-data-provider": {
          "ownKey": "creatures-data-provider",
          "ownPages": [{
            "reference": {
              "path": "modules",
              "baseUrl": "https://serpro69.github.io/kotlin-faker",
              "fileName": "creatures-data-provider",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://serpro69.github.io/kotlin-faker/modules/creatures-data-provider"
            },
            "description": "",
            "title": "Creatures Provider API",
            "content": "<h2 id=\"creaturesfaker\"><a href=\"#creaturesfaker\" id=\"creaturesfaker\" class=\"anchor\"><\/a><code>CreaturesFaker<\/code><\/h2>\n<p><a href=\"https://search.maven.org/artifact/io.github.serpro69/kotlin-faker-creatures\"><img src=\"https://img.shields.io/maven-central/v/io.github.serpro69/kotlin-faker-creatures?style=for-the-badge\" alt=\"Maven Central\" /><\/a>\n<a href=\"#downloading\"><img src=\"https://img.shields.io/nexus/s/io.github.serpro69/kotlin-faker-creatures?label=snapshot-version&amp;server=https%3A%2F%2Foss.sonatype.org&amp;style=for-the-badge&amp;color=yellow\" alt=\"Sonatype Nexus (Snapshots)\" /><\/a><\/p>\n<p>Provides access to fake data generators within the Creatures domain.<\/p>\n<h2 id=\"usage\"><a href=\"#usage\" id=\"usage\" class=\"anchor\"><\/a>Usage<\/h2>\n<p>Documentation for kotlin-faker is available at <a href=\"https://serpro69.github.io/kotlin-faker/\">serpro69.github.io/kotlin-faker/<\/a>.<\/p>\n<h3 id=\"downloading\"><a href=\"#downloading\" id=\"downloading\" class=\"anchor\"><\/a>Downloading<\/h3>\n<p>Latest releases are always available on maven central.<\/p>\n<p><strong>With gradle<\/strong><\/p>\n<pre><code class=\"language-groovy\">dependencies {\n    implementation 'io.github.serpro69:kotlin-faker:$version'\n    implementation 'io.github.serpro69:kotlin-faker-creatures:$version'\n}\n<\/code><\/pre>\n<p><strong>With maven<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.github.serpro69&lt;/groupId&gt;\n        &lt;artifactId&gt;kotlin-faker-creatures&lt;/artifactId&gt;\n        &lt;version&gt;${version}&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n<\/code><\/pre>\n<p><em>NB! An additional fake data provider like 'creatures' requires the main <code>kotlin-faker<\/code> dependency to be on the classpath.<\/em><\/p>\n<h3 id=\"generating-data\"><a href=\"#generating-data\" id=\"generating-data\" class=\"anchor\"><\/a>Generating data<\/h3>\n<pre><code class=\"language-kotlin\">// NB! the package you import if using multiple fakers\nimport io.github.serpro69.kfaker.creatures.faker\n\nval faker = faker { }\n\nfaker.dog.name()\nfaker.horse.breed()\n<\/code><\/pre>\n"
          }]
        }
      }
    }
  }
}