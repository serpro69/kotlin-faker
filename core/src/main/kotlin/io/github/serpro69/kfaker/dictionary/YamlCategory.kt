package io.github.serpro69.kfaker.dictionary

/**
 * This enum contains all default categories and matches with the names of the .yml files for 'en' locale.
 *
 * If any new category is added to .yml file(s) a new class has to be added to this enum as well.
 *
 * @property children an optional set of children category names that are not part of this enum (e.g. Creature -> Animal)
 * @property names alternative names that may be used to refer to this category in yml expressions, e.g.
 * `#{PhoneNumber.area_code}` is used in en-US.yml:6932 instead of `#{Phone_Number.area_code}`
 */
enum class YamlCategory(
    internal val names: Set<String> = emptySet(),
    internal val children: Set<String> = emptySet(),
) : Category {
    /**
     * [YamlCategory] for custom yml-based data providers
     */
    CUSTOM,

    // Special providers for locale-based symbols
    SEPARATOR,
    CURRENCY_SYMBOL,

    // Rest of providers
    ADDRESS,
    ADJECTIVE,
    AIRPORT,
    ANCIENT,
    APP,
    APPLIANCE,
    AQUA_TEEN_HUNGER_FORCE,
    ARCHER,
    ARTIST,
    AUSTRALIA,
    AVATAR,
    BACK_TO_THE_FUTURE,
    BANK,
    BARCODE,
    BASKETBALL,
    BEER,
    BIBLE,
    BIG_BANG_THEORY,
    BLOOD,
    BOJACK_HORSEMAN,
    BOOK(children = setOf("title")),
    BOOKS(children = setOf("the_kingkiller_chronicle")),
    BOSSA_NOVA,
    BREAKING_BAD,
    BROOKLYN_NINE_NINE,
    BUFFY,
    BUSINESS,
    CAMERA,
    CANNABIS,
    CELL_PHONE,
    CHESS,
    CHIQUITO,
    CHUCK_NORRIS,
    CODE,
    COFFEE,
    COIN,
    COLOR,
    COMMERCE,
    COMMUNITY,
    COMPANY,
    COMPASS,
    COMPUTER,
    CONAN,
    CONSTRUCTION,
    COSMERE,
    COWBOY_BEBOP,
    CREATURE(children = setOf("animal", "bird", "cat", "dog", "horse")),
    CROSSFIT,
    CRYPTO_COIN,
    CULTURE_SERIES,
    CURRENCY,
    DATABASE,
    DC_COMICS,
    DEMOGRAPHIC,
    DEPARTED,
    DESSERT,
    DEVICE,
    DND,
    DORAEMON,
    GAMES(children = games),
    DRAGON_BALL,
    DRIVING_LICENSE,
    DRONE,
    DR_WHO,
    DUMB_AND_DUMBER,
    DUNE,
    EDUCATOR,
    ELECTRICAL_COMPONENTS,
    EMOTION,
    ESPORT,
    FAMILY_GUY,
    FILE,
    FINAL_SPACE,
    FINANCE,
    FMA_BROTHERHOOD,
    FOOD,
    FOOTBALL,
    FRIENDS,
    FUNNY_NAME,
    FUTURAMA,
    GAME(children = setOf("title")),
    GAME_OF_THRONES,
    GENDER,
    GHOSTBUSTERS,
    GRATEFUL_DEAD,
    GREEK_PHILOSOPHERS,
    HACKER,
    HACKERS,
    HARRY_POTTER,
    HEROES,
    HEROES_OF_THE_STORM,
    HEY_ARNOLD,
    HIPSTER,
    HITCHHIKERS_GUIDE_TO_THE_GALAXY,
    HOBBIT,
    HOBBY,
    HOUSE,
    HOW_I_MET_YOUR_MOTHER,
    HOW_TO_TRAIN_YOUR_DRAGON,
    ID_NUMBER,
    INDUSTRY_SEGMENTS,
    INTERNET,
    INVOICE,
    JOB,
    KAMEN_RIDER,
    KPOP,
    LEBOWSKI,
    LORD_OF_THE_RINGS,
    LOREM,
    LOVECRAFT,
    MARKDOWN,
    MARKETING,
    MEASUREMENT,
    MICHAEL_SCOTT,
    MILITARY,
    MONEY,
    MOUNTAIN,
    MOUNTAINEERING,
    MOVIE,
    MUSIC,
    NAME,
    NARUTO,
    NATION,
    NATO_PHONETIC_ALPHABET,
    NEW_GIRL,
    ONE_PIECE,
    OPERA,
    PARKS_AND_REC,
    PEARL_JAM,
    PHISH,
    PHONE_NUMBER(names = setOf("PhoneNumber")),
    PRINCE,
    PRINCESS_BRIDE,
    PROGRAMMING_LANGUAGE,
    QUOTE,
    RAJNIKANTH,
    RELATIONSHIP,
    RESTAURANT,
    RICK_AND_MORTY,
    ROCK_BAND,
    RUPAUL,
    RUSH,
    SCIENCE,
    SEINFELD,
    SHAKESPEARE,
    SHOW,
    SILICON_VALLEY,
    SIMPSONS,
    SMASHING_PUMPKINS,
    SLACK_EMOJI,
    SOURCE,
    SOUTH_PARK,
    SPACE,
    SPONGEBOB,
    SPORT,
    STARGATE,
    STAR_TREK,
    STAR_WARS,
    STRANGER_THINGS,
    STRIPE,
    STUDIO_GHIBLI,
    SUBSCRIPTION,
    SUITS,
    SUPERHERO,
    SUPERNATURAL,
    SWORD_ART_ONLINE,
    TARKOV,
    TEA,
    TEAM,
    THE_EXPANSE,
    FRESH_PRINCE_OF_BEL_AIR,
    THE_IT_CROWD,
    THE_OFFICE,
    THE_ROOM,
    THE_THICK_OF_IT,
    TOLKIEN,
    TRAIN_STATION,
    TRON,
    TWIN_PEAKS,
    UMPHREYS_MCGEE,
    UNIVERSITY,
    VEHICLE,
    VENTURE_BROS,
    VERBS,
    VOLLEYBALL,
    V_FOR_VENDETTA,
    WORLD_CUP,
    YODA,
    ;

    companion object {

        /**
         * Returns [YamlCategory] by [name] string (case-insensitive).
         */
        internal fun findByName(name: String): YamlCategory {
            return values().firstOrNull {
                it.lowercase() == name.lowercase() || it.names.any { n -> it.lowercase() == n.lowercase() }
            } ?: throw NoSuchElementException("Category with name '$name' not found.")
        }
    }
}

private val games = setOf(
    "dota",
    "clash_of_clan",
    "control",
    "elder_scrolls",
    "fallout",
    "final_fantasy_xiv",
    "half_life",
    "league_of_legends",
    "minecraft",
    "myst",
    "overwatch",
    "pokemon",
    "sonic_the_hedgehog",
    "street_fighter",
    "super_mario",
    "super_smash_bros",
    "touhou",
    "tron",
    "warhammer_fantasy",
    "witcher",
    "world_of_warcraft",
    "zelda",
)
